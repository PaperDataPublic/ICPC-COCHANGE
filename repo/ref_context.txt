[3297, 3297, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 2, 2, 31, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 3, 3, 1, 1, 1, 1, 1, 4, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 3, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 1, 1, 1, 4, 4, 4, 4, 2, 2, 1, 2, 2, 2, 2, 1, 5, 5, 5, 5, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 1, 2, 2, 2, 4, 4, 2, 3, 1, 3, 3, 3, 1, 2, 2, 2, 2, 1, 1, 1, 3, 2, 4, 4, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 4, 6, 6, 3, 3, 3, 1, 1, 5, 1, 8, 8, 8, 8, 10, 10, 5, 6, 4, 1, 1, 1, 1, 1, 1, 1, 5, 2, 2, 6, 2, 2, 7, 7, 5, 2, 2, 1, 1, 2, 2, 2, 3, 3, 7, 5, 5, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 4, 4, 4, 2, 2, 1, 1, 1, 4, 4, 6, 2, 2, 4, 4, 2, 1, 1, 1, 6, 6, 4, 2, 3, 3, 2, 1, 1, 5, 5, 4, 4, 1, 1, 1, 4, 4, 4, 2, 2, 2, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 3, 9, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 4, 2, 3, 4, 4, 4, 1, 4, 1, 2, 2, 2, 1, 2, 2, 2, 3, 2, 3, 3, 3, 1, 3, 2, 5, 5, 5, 5, 6, 6, 3, 3, 3, 3, 4, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 3, 3, 3, 1, 1, 2, 3, 2, 5, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 6, 5, 3, 3, 3, 2, 1, 4, 4, 4, 4, 3, 1, 1, 1, 1, 2, 2, 2, 4, 3, 3, 2, 2, 2, 2, 1, 1, 2, 2, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 8, 12, 4, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 28, 4, 8, 4, 4, 4, 4, 4, 8, 4, 8, 4, 4, 4, 8, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 12, 4, 1, 9, 45, 9, 27, 9, 9, 9, 9, 9, 9, 9, 9, 9, 63, 9, 14, 9, 9, 9, 9, 18, 18, 9, 36, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 4, 9, 4, 9, 4, 9, 9, 9, 9, 9, 9, 9, 18, 10, 9, 9, 9, 41, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 5, 8, 1, 1, 41, 41, 7, 7, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 245, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1, 9, 9, 9, 4, 4, 8, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 2, 3, 8, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 1, 2, 10, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 3, 1, 2, 3, 2, 3, 1, 1, 3, 1, 1, 1, 8, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
15889203
3584933
17295128
3437130
9519673
4724676
10233141
15074386
22185527
24377
231767
509295
6771620
2254663
8361021
14603398
5724453
17690738
13130357
231855
102632
14734627
19804282
19530568
32647365
4700614
3579568
27928275
1019040
969709
12093364
7422204
2371436
3867028
279237
1035340
4566498
1109536
3366569
19295725
449560
1611799
3151469
4938491
3400641
1455126
356100
1644856
8903239
1951506
59895
23611396
320232
641420
15411967
434287
16694907
4801403
7352684
14693701
427472
11063458
7335992
2806897
44313620
651794
5884066
1151658
11561932
19859840
1114465
31775450
6336424
5811960
3224268
9226516
13180941
9252373
579687
4896288
8259001
8036499
13588908
3962247
17657212
6920302
10695139
1444159
390250
18536182
39359245
6591931
455612
311627
13114953
5676646
5624912
969285
19775685
31078728
4984428
952914
597476
5967500
16042647
123558
5631078
6611563
12941416
1392413
13305290
7484454
1987919
4020539
42980201
22094852
1230669
12821961
3365740
3862310
128573
38987
17532929
917431
1063770
37926516
5599254
36228537
7125009
24662006
22992009
18821795
8122079
716477
46580499
33195384
4534480
2557110
802134
24226781
7243750
22676
9626535
18675266
3177231
1236540
728356
938429
19693782
8691655
25480853
12364981
7370801
4765242
8482588
29175093
33371917
5328556
6855710
27156381
8480223
29055475
17535563
11606946
17631703
1907993
3785294
2802168
23889620
10299807
6187699
2086017
480214
10085381
13592219
5863512
973473
10701528
1405913
9920452
3826918
196930
11875770
5548121
1551605
10115126
=================
1114465
count:3297
       "                // console.log(\"Handling '\" + msg_type + \"' message: \", msg);\n",
       "                callback(fig, msg);\n",
       "            } catch (e) {\n",
       "                console.log(\"Exception inside the 'handler_\" + msg_type + \"' callback:\", e, e.stack, msg);\n",
       "            }\n",
       "        }\n",
       "    };\n",
       "}\n",
       "\n",
       "// from http://stackoverflow.com/questions/1114465/getting-mouse-location-in-canvas\n",
       "mpl.findpos = function(e) {\n",
       "    //this section is from http://www.quirksmode.org/js/events_properties.html\n",
       "    var targ;\n",
       "    if (!e)\n",
       "        e = window.event;\n",
       "    if (e.target)\n",
       "        targ = e.target;\n",
       "    else if (e.srcElement)\n",
       "        targ = e.srcElement;\n",
       "    if (targ.nodeType == 3) // defeat Safari bug\n",
=================
24161582
count:3297
       "    var x = e.pageX - $(targ).offset().left;\n",
       "    var y = e.pageY - $(targ).offset().top;\n",
       "\n",
       "    return {\"x\": x, \"y\": y};\n",
       "};\n",
       "\n",
       "/*\n",
       " * return a copy of an object with only non-object keys\n",
       " * we need this to avoid circular references\n",
       " * http://stackoverflow.com/a/24161582/3208463\n",
       " */\n",
       "function simpleKeys (original) {\n",
       "  return Object.keys(original).reduce(function (obj, key) {\n",
       "    if (typeof original[key] !== 'object')\n",
       "        obj[key] = original[key]\n",
       "    return obj;\n",
       "  }, {});\n",
       "}\n",
       "\n",
       "mpl.figure.prototype.mouse_event = function(event, name) {\n",
=================
4700614
count:1

# stacked horizontal bars
pWhite = ax.barh(y_race, p_white, color='b')
pLatino = ax.barh(y_race, p_latino, color='g', left=p_white)
pBlack = ax.barh(y_race, p_black, color='r', left=p_white+p_latino)
pAsian = ax.barh(y_race, p_asian, color='c', left=p_white+p_latino+p_black)

plt.yticks(y_race, cities)

# legend foo https://stackoverflow.com/questions/4700614/how-to-put-the-legend-out-of-the-plot
# Shink current axis's height by 10% on the bottom
box = ax.get_position()
ax.set_position([box.x0, box.y0 + box.height * 0.1,
                 box.width, box.height * 0.85])

# Put a legend below current axis
ax.legend((pWhite, pLatino, pBlack, pAsian, pDiversity), ('White', 'Latino', 'Black', 'Asian', 'Diversity'),
          loc='upper center', bbox_to_anchor=(0.5, -0.05),
          fancybox=True, shadow=True, ncol=5)

=================
231855
count:1
     "source": [
      "**To practice using generators to yield geographical entities of various types.**  \n",
      "\n",
      "Generators are a bit complicated, and I won't try to explain all the intricacies here.  I will show you how to use `yield` in a function definition to return a generator.  From [Definition of a generator](http://docs.python.org/2/glossary.html#term-generator):\n",
      "\n",
      "<blockquote>A function which returns an iterator. It looks like a normal function except that it contains yield statements for producing a series a values usable in a for-loop or that can be retrieved one at a time with the next() function. Each yield temporarily suspends processing, remembering the location execution state (including local variables and pending try-statements). When the generator resumes, it picks-up where it left-off (in contrast to functions which start fresh on every invocation)</blockquote>\n",
      "\n",
      "For some background on Python generators:\n",
      "\n",
      "* [iterator - The Python yield keyword explained - Stack Overflow](http://stackoverflow.com/questions/231767/the-python-yield-keyword-explained/231855#231855)\n",
      "* [Improve Your Python: 'yield' and Generators Explained](http://www.jeffknupp.com/blog/2013/04/07/improve-your-python-yield-and-generators-explained/) \n",
      "\n",
      "Why use generators: http://stackoverflow.com/a/102632/7782\n",
      "\n",
      "<blockquote>Generators are good for calculating large sets of results (in particular calculations involving loops themselves) where you don't know if you are going to need all results, or where you don't want to allocate the memory for all results at the same time. </blockquote>\n",
      "\n",
      "Also, let's also practice using [itertools.islice](http://www.python.org/doc//current/library/itertools.html#itertools.islice) and [enumerate](http://docs.python.org/2/library/functions.html#enumerate) -- two of my favorite constructions in Python\n"
     ]
    },
    {
=================
102632
count:1
      "Generators are a bit complicated, and I won't try to explain all the intricacies here.  I will show you how to use `yield` in a function definition to return a generator.  From [Definition of a generator](http://docs.python.org/2/glossary.html#term-generator):\n",
      "\n",
      "<blockquote>A function which returns an iterator. It looks like a normal function except that it contains yield statements for producing a series a values usable in a for-loop or that can be retrieved one at a time with the next() function. Each yield temporarily suspends processing, remembering the location execution state (including local variables and pending try-statements). When the generator resumes, it picks-up where it left-off (in contrast to functions which start fresh on every invocation)</blockquote>\n",
      "\n",
      "For some background on Python generators:\n",
      "\n",
      "* [iterator - The Python yield keyword explained - Stack Overflow](http://stackoverflow.com/questions/231767/the-python-yield-keyword-explained/231855#231855)\n",
      "* [Improve Your Python: 'yield' and Generators Explained](http://www.jeffknupp.com/blog/2013/04/07/improve-your-python-yield-and-generators-explained/) \n",
      "\n",
      "Why use generators: http://stackoverflow.com/a/102632/7782\n",
      "\n",
      "<blockquote>Generators are good for calculating large sets of results (in particular calculations involving loops themselves) where you don't know if you are going to need all results, or where you don't want to allocate the memory for all results at the same time. </blockquote>\n",
      "\n",
      "Also, let's also practice using [itertools.islice](http://www.python.org/doc//current/library/itertools.html#itertools.islice) and [enumerate](http://docs.python.org/2/library/functions.html#enumerate) -- two of my favorite constructions in Python\n"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
=================
3437130
count:2
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "You can filter Puerto Rico (PR) in a number of ways -- use the way you're most comfortable with. \n",
      "\n",
      "Optional fun: filter PR in the following way\n",
      "\n",
      "* calculate a `np.array` holding the the fips of the states\n",
      "* then use [numpy.in1d](http://docs.scipy.org/doc/numpy/reference/generated/numpy.in1d.html), which is a analogous to the [in](http://stackoverflow.com/a/3437130/7782) operator to test membership in a list"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "us.states.STATES\n",
      "states_fips = np.array([state.fips for state in us.states.STATES])\n",
      "#states_fips\n",
      "\n"
=================
14734627
count:1
for name, group in islice(df.groupby('first_letter'),1):
    print(name)
    print type(group) # yes -- a DataFrame
    print group.index
    print(group),

# <codecell>

# how about accessing group 'C'?
# http://stackoverflow.com/a/14734627/7782
# http://stackoverflow.com/questions/19804282/in-pandas-is-there-something-like-a-groupby-get-group-but-with-an-optional-defa
# http://pandas.pydata.org/pandas-docs/dev/generated/pandas.core.groupby.GroupBy.get_group.html

grouped = df.groupby('first_letter')
grouped.get_group('C')

# <codecell>

# total population of states starting with 'C'

=================
19804282
count:1
    print(name)
    print type(group) # yes -- a DataFrame
    print group.index
    print(group),

# <codecell>

# how about accessing group 'C'?
# http://stackoverflow.com/a/14734627/7782
# http://stackoverflow.com/questions/19804282/in-pandas-is-there-something-like-a-groupby-get-group-but-with-an-optional-defa
# http://pandas.pydata.org/pandas-docs/dev/generated/pandas.core.groupby.GroupBy.get_group.html

grouped = df.groupby('first_letter')
grouped.get_group('C')

# <codecell>

# total population of states starting with 'C'

grouped.get_group('C').P0010001.sum()
=================
19530568
count:1
# <codecell>

# let's try this again and try to do this in a more idiomatic Pandas fashion
# ideally, generate a DataFrame with a NAME column that is a list of all states with the same first letter

# It turns out that apply can come to the rescue
# here' calculate the list of NAMEs

# http://pandas.pydata.org/pandas-docs/dev/groupby.html#flexible-apply
# http://stackoverflow.com/questions/19530568/can-pandas-groupby-aggregate-into-a-list-rather-than-sum-mean-etc

df.groupby("first_letter").apply(lambda x: list(x['NAME']))

# <codecell>

# apply can be used to add up the populations by group

df.groupby("first_letter").apply(lambda x: np.sum(x['P0010001']))

# <codecell>
=================
24377
count:2
      "\n",
      "**Let's verify this result in a number of ways.  Take some time now to write some code to add up 1 to 100.**\n",
      "\n",
      "Specifically:\n",
      "\n",
      "* make use of [range](http://docs.python.org/2/library/functions.html#range)\n",
      "* try [xrange](http://docs.python.org/2/library/functions.html#xrange)\n",
      "* try an explicit loop vs `sum`\n",
      "* bonus:  try [itertool.count](http://docs.python.org/2/library/itertools.html#itertools.count) and [itertool.islice](http://docs.python.org/2/library/itertools.html#itertools.islice) -- these functions are Python *iterators*. \n",
      "* See [Build a Basic Python Iterator](http://stackoverflow.com/a/24377/7782) and \n",
      "[The Python yield keyword explained](http://stackoverflow.com/questions/231767/the-python-yield-keyword-explained)\n",
      "\n",
      "\n",
      "**Beware:  in ipython w/ pylab mode, `sum` might be overwritten by numpy's sum -- use `__builtin__.sum` if you want http://docs.python.org/2/library/functions.html#sum as opposed to http://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html** \n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
=================
231767
count:2
      "**Let's verify this result in a number of ways.  Take some time now to write some code to add up 1 to 100.**\n",
      "\n",
      "Specifically:\n",
      "\n",
      "* make use of [range](http://docs.python.org/2/library/functions.html#range)\n",
      "* try [xrange](http://docs.python.org/2/library/functions.html#xrange)\n",
      "* try an explicit loop vs `sum`\n",
      "* bonus:  try [itertool.count](http://docs.python.org/2/library/itertools.html#itertools.count) and [itertool.islice](http://docs.python.org/2/library/itertools.html#itertools.islice) -- these functions are Python *iterators*. \n",
      "* See [Build a Basic Python Iterator](http://stackoverflow.com/a/24377/7782) and \n",
      "[The Python yield keyword explained](http://stackoverflow.com/questions/231767/the-python-yield-keyword-explained)\n",
      "\n",
      "\n",
      "**Beware:  in ipython w/ pylab mode, `sum` might be overwritten by numpy's sum -- use `__builtin__.sum` if you want http://docs.python.org/2/library/functions.html#sum as opposed to http://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html** \n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# using loop and xrange\n",
=================
509295
count:2
     "metadata": {},
     "source": [
      "Slicing/Indexing Review"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "http://stackoverflow.com/a/509295/7782\n",
      "\n",
      "Use on any of the **sequence** types ([python docs on sequence types](http://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange)):\n",
      "\n",
      "> There are seven sequence types: strings, Unicode strings, lists, tuples, bytearrays, buffers, and xrange objects.\n",
      "\n",
      "The use of square brackets are for accessing *slices* of sequence."
     ]
    },
    {
     "cell_type": "markdown",
=================
6771620
count:1
     "source": [
      "sorting"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# reverse sort -- best way?\n",
      "#http://stackoverflow.com/a/6771620/7782\n",
      "\n",
      "np.sort(np.arange(100))[::-1]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 24,
=================
2254663
count:2
       ]
      }
     ],
     "prompt_number": 82
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Now I thought I'd be able to use a `n0.__eq__(5)` but nope -- it's complicated -- see http://stackoverflow.com/questions/2281222/why-when-in-python-does-x-y-call-y-eq-x#comment2254663_2282795"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "try:\n",
      "    n0.__eq__(5)\n",
      "except Exception as e:\n",
      "    print e"
=================
15889203
count:1
     "collapsed": false,
     "input": [
      "# This solution is a bit \"fancy\" and can certainly be better commented.\n",
      "\n",
      "import bisect\n",
      "import random\n",
      "from itertools import repeat, islice\n",
      "from collections import Counter\n",
      "\n",
      "# http://stackoverflow.com/a/15889203/7782\n",
      "def cumsum(lis):\n",
      "    total = 0\n",
      "    for x in lis:\n",
      "        total += x\n",
      "        yield total\n",
      "\n",
      "# depends on pop_list above\n",
      "        \n",
      "world_pop = sum([r[2] for r in pop_list])\n",
      "cum_pop = list(cumsum((r[2] for r in pop_list)))\n",
=================
1779324
count:1
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# http://lxml.de/lxmlhtml.html\n",
      "import requests\n",
      "from lxml.html import fromstring, parse\n",
      "from itertools import islice\n",
      "\n",
      "# http://stackoverflow.com/a/1779324/7782\n",
      "import locale\n",
      "locale.setlocale( locale.LC_ALL, 'en_US.UTF-8' ) \n",
      "\n",
      "url = \"https://en.wikipedia.org/w/index.php?title=List_of_countries_by_population_(United_Nations)&oldid=590438477\"\n",
      "page = requests.get(url).content.decode(\"UTF-8\")\n",
      "\n",
      "doc = fromstring(page)\n",
      "\n",
      "def parse_rank(col):\n",
      "    try:\n",
=================
15889203
count:1
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# http://stackoverflow.com/a/15889203/7782\n",
      "def cumsum(lis):\n",
      "    total = 0\n",
      "    for x in lis:\n",
      "        total += x\n",
      "        yield total\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 5
=================
3584933
count:2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# http://en.wikipedia.org/wiki/Human_sex_ratio\n",
      "# make an agg figure\n",
      "fig = figure()\n",
      "\n",
      "# meaning of 111: http://stackoverflow.com/a/3584933/7782\n",
      "ax = fig.add_subplot(111)\n",
      "ax.set_title('Ratio of M to F births')\n",
      "\n",
      "cum_ratio_by_sex = total_births.M.cumsum() / total_births.F.cumsum()\n",
      "cum_ratio_by_sex.plot(ax=ax, label=\"cumulative\", color=\"red\")\n",
      "\n",
      "# add instantaneous ratio\n",
      "\n",
      "annual_ratio_by_sex = total_births.M / total_births.F\n",
      "annual_ratio_by_sex.plot(ax=ax, label=\"annual\", color=\"green\")\n",
=================
3584933
count:2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# first attempt to calculate entropy of names\n",
      "\n",
      "fig = figure()\n",
      "\n",
      "# meaning of 111: http://stackoverflow.com/a/3584933/7782\n",
      "ax = fig.add_subplot(111)\n",
      "ax.set_title('Entropy of names')\n",
      "\n",
      "S_male = names[names.sex=='M'].groupby('year').prop.agg(lambda x: sum([-j*np.log(j) for j in x])) # apply(lambda x: -x*log(x))\n",
      "S_male.plot(ax=ax, label=\"M\", color=\"blue\")\n",
      "\n",
      "S_female = names[names.sex=='F'].groupby('year').prop.agg(lambda x: sum([-j*np.log(j) for j in x])) # apply(lambda x: -x*log(x))\n",
      "S_female.plot(ax=ax, label=\"F\", color=\"red\")\n",
      "\n",
      "ax.legend(loc='best')\n",
=================
13130357
count:1
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "#http://stackoverflow.com/a/13130357/7782\n",
      "count,division = np.histogram(df['P0010001'])\n",
      "df['P0010001'].hist(bins=division)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 21,
=================
17295128
count:1
# in my case, I had been adding other notebooks
ls ../pydata-book/

# <headingcell level=1>

# Calculate PFDA_PATH (for RY's relative dir setup) or set it manually

# <codecell>

#http://stackoverflow.com/a/17295128/7782
import os
PFDA_PATH  = os.path.abspath(os.path.join(os.getcwd(), 
                                          os.path.join(os.path.pardir, "pydata-book")
                                        ))
PFDA_PATH

# <codecell>

assert os.path.exists(PFDA_PATH)

=================
10233141
count:1
def add_census_key(url, api_key=settings.CENSUS_KEY):
    """Take an input example Census API call and a key parameter"""

    pr = urlparse.urlparse(url)
    
    # we're going to modify the query, which is the 5th element in the tuple (index 4)
    pr1 = list(pr)
    
    # convert pr.query from string to dict
    # see http://stackoverflow.com/a/10233141/7782 for meaning of doseq
    pr_query = urlparse.parse_qs(pr.query)
    pr_query["key"]= api_key

    pr1[4] = urllib.urlencode(pr_query, doseq=True)
    
    return urlparse.urlunparse(pr1)


def c_url (url, title=None, api_key=settings.CENSUS_KEY):
    url_with_key = add_census_key(url, api_key)
=================
15074386
count:1
            ["""<a href="{url_with_key}">{url}</a>""".format(
                url=url, 
                url_with_key=add_census_key(url)
                ) for url in example_urls_col
            ])
        
        yield new_row
        
def parse_urls_col(col):
    # http://stackoverflow.com/a/15074386/7782
    return [child for child in col.itertext()]

def parse_census_examples():

    url = "http://api.census.gov/data/2010/sf1/geo.html"
    doc = parse(url)

    rows = doc.xpath("//table/tr")

    # first row is the header
=================
22185527
count:1
# <nbformat>3.0</nbformat>

# <codecell>

# http://stackoverflow.com/questions/22185527/how-can-i-successfully-load-dimple-js-when-require-js-is-present

# Answer: https://github.com/PMSI-AlignAlytics/dimple/pull/56#issuecomment-37480189

# <codecell>

%%html
<style type="text/css">
 /* https://github.com/PMSI-AlignAlytics/dimple/pull/56#issuecomment-37480189 */
 .tooltip {
  opacity: 1 !Important;
=================
17295128
count:2
     "metadata": {},
     "source": [
      "Calculate PFDA_PATH (for RY's relative dir setup) or set it manually"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "#http://stackoverflow.com/a/17295128/7782\n",
      "import os\n",
      "PFDA_PATH  = os.path.abspath(os.path.join(os.getcwd(), \n",
      "                                          os.path.join(os.path.pardir, \"pydata-book\")\n",
      "                                        ))\n",
      "PFDA_PATH"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
=================
3437130
count:1
df.head()

# <markdowncell>

# You can filter Puerto Rico (PR) in a number of ways -- use the way you're most comfortable with. 
# 
# Optional fun: filter PR in the following way
# 
# * calculate a `np.array` holding the the fips of the states
# * then use [numpy.in1d](http://docs.scipy.org/doc/numpy/reference/generated/numpy.in1d.html), which is a analogous to the [in](http://stackoverflow.com/a/3437130/7782) operator to test membership in a list

# <codecell>

us.states.STATES
states_fips = np.array([state.fips for state in us.states.STATES])
#states_fips


# <codecell>

=================
9519673
count:2
     "prompt_number": 2
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "[[IPython-User] using Google Charts in IPython](http://lists.ipython.scipy.org/pipermail/ipython-user/2013-May/012694.html):\n",
      "\n",
      "> google.load blanks the page unless you give it a\n",
      "callback<http://stackoverflow.com/questions/9519673/why-does-google-load-cause-my-page-to-go-blank>\n",
      ".\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%%javascript\n",
      "\n",
      "var drawRegionsMap = function() {\n",
=================
9519673
count:1
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "[[IPython-User] using Google Charts in IPython](http://lists.ipython.scipy.org/pipermail/ipython-user/2013-May/012694.html):\n",
      "\n",
      "> google.load blanks the page unless you give it a\n",
      "callback <http://stackoverflow.com/questions/9519673/why-does-google-load-cause-my-page-to-go-blank>\n",
      ".\n",
      "\n",
      "Also: [javascript - Google Maps API v3 - TypeError: Result of expression 'google.maps.LatLng' undefined] is not a constructor - Stack Overflow](http://stackoverflow.com/questions/6577404/google-maps-api-v3-typeerror-result-of-expression-google-maps-latlng-undef/8361021#8361021)\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
=================
8361021
count:1
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "[[IPython-User] using Google Charts in IPython](http://lists.ipython.scipy.org/pipermail/ipython-user/2013-May/012694.html):\n",
      "\n",
      "> google.load blanks the page unless you give it a\n",
      "callback <http://stackoverflow.com/questions/9519673/why-does-google-load-cause-my-page-to-go-blank>\n",
      ".\n",
      "\n",
      "Also: [javascript - Google Maps API v3 - TypeError: Result of expression 'google.maps.LatLng' undefined] is not a constructor - Stack Overflow](http://stackoverflow.com/questions/6577404/google-maps-api-v3-typeerror-result-of-expression-google-maps-latlng-undef/8361021#8361021)\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 10
=================
14603398
count:1
     "metadata": {},
     "source": [
      "[Leaflet - a JavaScript library for mobile-friendly maps](http://leafletjs.com/)"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "I have a question:  can you use requirejs to deal with non-AMD JavaScript files?  According to http://stackoverflow.com/a/14603398/7782: maybe.  Seems to be affirmed by [Requirement #9:  Load any script](http://requirejs.org/docs/requirements.html#9)."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from IPython.display import HTML, display, clear_output\n",
      "import uuid\n",
      "\n",
      "import jinja2\n",
=================
4724676
count:1
      "CSS_URL = \"http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css\"\n",
      "LEAFLET_JS_URL = \"http://cdn.leafletjs.com/leaflet-0.7.2/leaflet\"\n",
      "\n",
      "div_id = 'i' + str(uuid.uuid4())\n",
      "\n",
      "JS = u\"\"\"\n",
      "<script type=\"text/javascript\">\n",
      "\n",
      "\n",
      "    // load css if it's not already there: http://stackoverflow.com/a/4724676/7782\n",
      "    function loadcss(url) {\n",
      "        if (!$(\"link[href='\" + url + \"']\").length)\n",
      "            $('<link href=\"' + url + '\" rel=\"stylesheet\">').appendTo(\"head\");\n",
      "    }\n",
      "    \n",
      "    function add_map(id, map) {\n",
      "\n",
      "\n",
      "        if ('_my_maps' in window && window._my_maps !== undefined) {\n",
      "            window._my_maps[id] = map;\n",
=================
4724676
count:1
       "html": [
        "\n",
        "<style type=\"text/css\">\n",
        "    #id0bbeb91-c3b0-4185-b792-6b977a9805bf { height: 200px; }\n",
        "</style>\n",
        "\n",
        "<script type=\"text/javascript\">\n",
        "\n",
        "\n",
        "    // load css if it's not already there: http://stackoverflow.com/a/4724676/7782\n",
        "    function loadcss(url) {\n",
        "        if (!$(\"link[href='\" + url + \"']\").length)\n",
        "            $('<link href=\"' + url + '\" rel=\"stylesheet\">').appendTo(\"head\");\n",
        "    }\n",
        "    \n",
        "    function add_map(id, map) {\n",
        "\n",
        "\n",
        "        if ('_my_maps' in window && window._my_maps !== undefined) {\n",
        "            window._my_maps[id] = map;\n",
=================
4724676
count:1
      "CSS_URL = \"http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css\"\n",
      "LEAFLET_JS_URL = \"http://cdn.leafletjs.com/leaflet-0.7.2/leaflet\"\n",
      "\n",
      "div_id = 'i' + str(uuid.uuid4())\n",
      "\n",
      "JS = u\"\"\"\n",
      "<script type=\"text/javascript\">\n",
      "\n",
      "\n",
      "    // load css if it's not already there: http://stackoverflow.com/a/4724676/7782\n",
      "    function loadcss(url) {\n",
      "        if (!$(\"link[href='\" + url + \"']\").length)\n",
      "            $('<link href=\"' + url + '\" rel=\"stylesheet\">').appendTo(\"head\");\n",
      "    }\n",
      "\n",
      "    function add_map(id, map) {\n",
      "\n",
      "        if ('_my_maps' in window && window._my_maps !== undefined) {\n",
      "            window._my_maps[id] = map;\n",
      "        } else {\n",
=================
4724676
count:1
       "html": [
        "\n",
        "<style type=\"text/css\">\n",
        "    #i2a05f71d-28e3-42fd-8547-a50972196b3f { height: 200px; }\n",
        "</style>\n",
        "\n",
        "<script type=\"text/javascript\">\n",
        "\n",
        "\n",
        "    // load css if it's not already there: http://stackoverflow.com/a/4724676/7782\n",
        "    function loadcss(url) {\n",
        "        if (!$(\"link[href='\" + url + \"']\").length)\n",
        "            $('<link href=\"' + url + '\" rel=\"stylesheet\">').appendTo(\"head\");\n",
        "    }\n",
        "\n",
        "    function add_map(id, map) {\n",
        "\n",
        "        if ('_my_maps' in window && window._my_maps !== undefined) {\n",
        "            window._my_maps[id] = map;\n",
        "        } else {\n",
=================
4724676
count:1
      "from settings import LEAFLET_KEY\n",
      "\n",
      "CSS_URL = \"http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css\"\n",
      "LEAFLET_JS_URL = \"http://cdn.leafletjs.com/leaflet-0.7.2/leaflet\"\n",
      "\n",
      "\n",
      "JS = u\"\"\"\n",
      "<script type=\"text/javascript\">\n",
      "\n",
      "    // load css if it's not already there: http://stackoverflow.com/a/4724676/7782\n",
      "    function loadcss(url) {\n",
      "        if (!$(\"link[href='\" + url + \"']\").length)\n",
      "            $('<link href=\"' + url + '\" rel=\"stylesheet\">').appendTo(\"head\");\n",
      "            \n",
      "    }\n",
      "    \n",
      "    function add_map(id, map) {\n",
      "\n",
      "        if ('_my_maps' in window && window._my_maps !== undefined) {\n",
      "            window._my_maps[id] = map;\n",
=================
4724676
count:1
       "html": [
        "\n",
        "<style type=\"text/css\">\n",
        "    #i99db9486-4a8c-4bf5-b71b-11cee54bc07e { height: 300px; }\n",
        "    #i99db9486-4a8c-4bf5-b71b-11cee54bc07e *+img{margin-top:0em}\n",
        "</style>\n",
        "\n",
        "<script type=\"text/javascript\">\n",
        "\n",
        "    // load css if it's not already there: http://stackoverflow.com/a/4724676/7782\n",
        "    function loadcss(url) {\n",
        "        if (!$(\"link[href='\" + url + \"']\").length)\n",
        "            $('<link href=\"' + url + '\" rel=\"stylesheet\">').appendTo(\"head\");\n",
        "            \n",
        "    }\n",
        "    \n",
        "    function add_map(id, map) {\n",
        "\n",
        "        if ('_my_maps' in window && window._my_maps !== undefined) {\n",
        "            window._my_maps[id] = map;\n",
=================
4724676
count:1
       "html": [
        "\n",
        "<style type=\"text/css\">\n",
        "    #i4178fb59-340b-499f-b6ea-27c559fa1944 { height: 500px; }\n",
        "    #i4178fb59-340b-499f-b6ea-27c559fa1944 *+img{margin-top:0em}\n",
        "</style>\n",
        "\n",
        "<script type=\"text/javascript\">\n",
        "\n",
        "    // load css if it's not already there: http://stackoverflow.com/a/4724676/7782\n",
        "    function loadcss(url) {\n",
        "        if (!$(\"link[href='\" + url + \"']\").length)\n",
        "            $('<link href=\"' + url + '\" rel=\"stylesheet\">').appendTo(\"head\");\n",
        "            \n",
        "    }\n",
        "    \n",
        "    function add_map(id, map) {\n",
        "\n",
        "        if ('_my_maps' in window && window._my_maps !== undefined) {\n",
        "            window._my_maps[id] = map;\n",
=================
3584933
count:1

total_births.plot(title='Total births by sex and year')

# <codecell>

# http://en.wikipedia.org/wiki/Human_sex_ratio
# make an agg figure
fig = figure()

# meaning of 111: http://stackoverflow.com/a/3584933/7782
ax = fig.add_subplot(111)
ax.set_title('Ratio of M to F births')

cum_ratio_by_sex = total_births.M.cumsum() / total_births.F.cumsum()
cum_ratio_by_sex.plot(ax=ax, label="cumulative", color="red")

# add instantaneous ratio

annual_ratio_by_sex = total_births.M / total_births.F
annual_ratio_by_sex.plot(ax=ax, label="annual", color="green")
=================
3584933
count:1

names.groupby('year').count()[['name']].plot()

# <codecell>

# first attempt to calculate entropy of names

fig = figure()

# meaning of 111: http://stackoverflow.com/a/3584933/7782
ax = fig.add_subplot(111)
ax.set_title('Entropy of names')

S_male = names[names.sex=='M'].groupby('year').prop.agg(lambda x: sum([-j*np.log(j) for j in x])) # apply(lambda x: -x*log(x))
S_male.plot(ax=ax, label="M", color="blue")

S_female = names[names.sex=='F'].groupby('year').prop.agg(lambda x: sum([-j*np.log(j) for j in x])) # apply(lambda x: -x*log(x))
S_female.plot(ax=ax, label="F", color="red")

ax.legend(loc='best')
=================
10233141
count:1
      "def add_census_key(url, api_key=settings.CENSUS_KEY):\n",
      "    \"\"\"Take an input example Census API call and a key parameter\"\"\"\n",
      "\n",
      "    pr = urlparse.urlparse(url)\n",
      "    \n",
      "    # we're going to modify the query, which is the 5th element in the tuple (index 4)\n",
      "    pr1 = list(pr)\n",
      "    \n",
      "    # convert pr.query from string to dict\n",
      "    # see http://stackoverflow.com/a/10233141/7782 for meaning of doseq\n",
      "    pr_query = urlparse.parse_qs(pr.query)\n",
      "    pr_query[\"key\"]= api_key\n",
      "\n",
      "    pr1[4] = urllib.urlencode(pr_query, doseq=True)\n",
      "    \n",
      "    return urlparse.urlunparse(pr1)\n",
      "\n",
      "\n",
      "def c_url (url, title=None, api_key=settings.CENSUS_KEY):\n",
      "    url_with_key = add_census_key(url, api_key)\n",
=================
15074386
count:1
      "            [\"\"\"<a href=\"{url_with_key}\">{url}</a>\"\"\".format(\n",
      "                url=url, \n",
      "                url_with_key=add_census_key(url)\n",
      "                ) for url in example_urls_col\n",
      "            ])\n",
      "        \n",
      "        yield new_row\n",
      "        \n",
      "def parse_urls_col(col):\n",
      "    # http://stackoverflow.com/a/15074386/7782\n",
      "    return [child for child in col.itertext()]\n",
      "\n",
      "def parse_census_examples():\n",
      "\n",
      "    url = \"http://api.census.gov/data/2010/sf1/geo.html\"\n",
      "    doc = parse(url)\n",
      "\n",
      "    rows = doc.xpath(\"//table/tr\")\n",
      "\n",
      "    # first row is the header\n",
=================
22185527
count:1
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# http://stackoverflow.com/questions/22185527/how-can-i-successfully-load-dimple-js-when-require-js-is-present\n",
      "\n",
      "# Answer: https://github.com/PMSI-AlignAlytics/dimple/pull/56#issuecomment-37480189"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
=================
5724453
count:1
result

# <headingcell level=1>

# Paging through results

# <codecell>

# try again
# http://stackoverflow.com/a/5724453/7782
# http://excess.org/article/2013/02/itergen1/


class my_g(object):
    def __init__(self,max_count):
        self._remaining = range(max_count)
        self._len = max_count
    def __iter__(self):
        return self
    def __len__(self):
=================
17690738
count:1

df[~df.calc_date.isnull()].sort_index(by='calc_date').calc_date

# <codecell>

pd.to_datetime(df.fsmDateCreated.dropna().apply(lambda s:s[0]).astype('str'), coerce=True).dropna()

# <codecell>

# http://stackoverflow.com/questions/17690738/in-pandas-how-do-i-convert-a-string-of-date-strings-to-datetime-objects-and-put
date_stngs = ('2008-12-20','2008-12-21','2008-12-22','2008-12-23','Nov. 9, 1964', 'junk')
pd.to_datetime(pd.Series(date_stngs),coerce=True)

# <headingcell level=1>

# Types of Resources

# <codecell>

def f(x):
=================
24377
count:1
# 
# **Let's verify this result in a number of ways.  Take some time now to write some code to add up 1 to 100.**
# 
# Specifically:
# 
# * make use of [range](http://docs.python.org/2/library/functions.html#range)
# * try [xrange](http://docs.python.org/2/library/functions.html#xrange)
# * try an explicit loop vs `sum`
# * bonus:  try [itertool.count](http://docs.python.org/2/library/itertools.html#itertools.count) and [itertool.islice](http://docs.python.org/2/library/itertools.html#itertools.islice) -- these functions are Python *iterators*. 
# * See [Build a Basic Python Iterator](http://stackoverflow.com/a/24377/7782) and 
# [The Python yield keyword explained](http://stackoverflow.com/questions/231767/the-python-yield-keyword-explained)
# 
# 
# **Beware:  in ipython w/ pylab mode, `sum` might be overwritten by numpy's sum -- use `__builtin__.sum` if you want http://docs.python.org/2/library/functions.html#sum as opposed to http://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html** 

# <codecell>

# using loop and xrange

n = 100
=================
231767
count:1
# **Let's verify this result in a number of ways.  Take some time now to write some code to add up 1 to 100.**
# 
# Specifically:
# 
# * make use of [range](http://docs.python.org/2/library/functions.html#range)
# * try [xrange](http://docs.python.org/2/library/functions.html#xrange)
# * try an explicit loop vs `sum`
# * bonus:  try [itertool.count](http://docs.python.org/2/library/itertools.html#itertools.count) and [itertool.islice](http://docs.python.org/2/library/itertools.html#itertools.islice) -- these functions are Python *iterators*. 
# * See [Build a Basic Python Iterator](http://stackoverflow.com/a/24377/7782) and 
# [The Python yield keyword explained](http://stackoverflow.com/questions/231767/the-python-yield-keyword-explained)
# 
# 
# **Beware:  in ipython w/ pylab mode, `sum` might be overwritten by numpy's sum -- use `__builtin__.sum` if you want http://docs.python.org/2/library/functions.html#sum as opposed to http://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html** 

# <codecell>

# using loop and xrange

n = 100

=================
509295
count:1

pow(2,64) -1

# <headingcell level=1>

# Slicing/Indexing Review

# <markdowncell>

# http://stackoverflow.com/a/509295/7782
# 
# Use on any of the **sequence** types ([python docs on sequence types](http://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange)):
# 
# > There are seven sequence types: strings, Unicode strings, lists, tuples, bytearrays, buffers, and xrange objects.
# 
# The use of square brackets are for accessing *slices* of sequence.

# <markdowncell>

# Let's remind ourselves of how to use slices
=================
6771620
count:1
a3+2

# <headingcell level=2>

# sorting

# <codecell>

# reverse sort -- best way?
#http://stackoverflow.com/a/6771620/7782

np.sort(np.arange(100))[::-1]

# <headingcell level=2>

# Boolean slice:  important novel type of slicing

# <markdowncell>

# **This stuff is a bit tricky** (see PfDA, pp. 89-92)
=================
2254663
count:1
# Advanced: Operator Overloading

# <codecell>

n0 = 5
n0 == 5

# <markdowncell>

# Now I thought I'd be able to use a `n0.__eq__(5)` but nope -- it's complicated -- see http://stackoverflow.com/questions/2281222/why-when-in-python-does-x-y-call-y-eq-x#comment2254663_2282795

# <codecell>

try:
    n0.__eq__(5)
except Exception as e:
    print e

# <markdowncell>

=================
9519673
count:1
    cityCircle = new google.maps.Circle(populationOptions);
  }


# <markdowncell>

# [[IPython-User] using Google Charts in IPython](http://lists.ipython.scipy.org/pipermail/ipython-user/2013-May/012694.html):
# 
# > google.load blanks the page unless you give it a
# callback <http://stackoverflow.com/questions/9519673/why-does-google-load-cause-my-page-to-go-blank>
# .
# 
# Also: [javascript - Google Maps API v3 - TypeError: Result of expression 'google.maps.LatLng' undefined] is not a constructor - Stack Overflow](http://stackoverflow.com/questions/6577404/google-maps-api-v3-typeerror-result-of-expression-google-maps-latlng-undef/8361021#8361021)

# <codecell>

=================
8361021
count:1

# <markdowncell>

# [[IPython-User] using Google Charts in IPython](http://lists.ipython.scipy.org/pipermail/ipython-user/2013-May/012694.html):
# 
# > google.load blanks the page unless you give it a
# callback <http://stackoverflow.com/questions/9519673/why-does-google-load-cause-my-page-to-go-blank>
# .
# 
# Also: [javascript - Google Maps API v3 - TypeError: Result of expression 'google.maps.LatLng' undefined] is not a constructor - Stack Overflow](http://stackoverflow.com/questions/6577404/google-maps-api-v3-typeerror-result-of-expression-google-maps-latlng-undef/8361021#8361021)

# <codecell>

=================
9519673
count:1

%%html
<div id="chart_div"></div>

# <markdowncell>

# [[IPython-User] using Google Charts in IPython](http://lists.ipython.scipy.org/pipermail/ipython-user/2013-May/012694.html):
# 
# > google.load blanks the page unless you give it a
# callback<http://stackoverflow.com/questions/9519673/why-does-google-load-cause-my-page-to-go-blank>
# .

# <codecell>

%%javascript

var drawRegionsMap = function() {
    var data = google.visualization.arrayToDataTable([
      ['Country', 'Popularity'],
      ['Germany', 200],
=================
3437130
count:1
df.head()

# <markdowncell>

# You can filter Puerto Rico (PR) in a number of ways -- use the way you're most comfortable with. 
# 
# Optional fun: filter PR in the following way
# 
# * calculate a `np.array` holding the the fips of the states
# * then use [numpy.in1d](http://docs.scipy.org/doc/numpy/reference/generated/numpy.in1d.html), which is a analogous to the [in](http://stackoverflow.com/a/3437130/7782) operator to test membership in a list

# <codecell>

## FILL IN
## calculate states_fips so that PR not included





=================
14603398
count:1
# <nbformat>3.0</nbformat>

# <markdowncell>

# [Leaflet - a JavaScript library for mobile-friendly maps](http://leafletjs.com/)

# <markdowncell>

# I have a question:  can you use requirejs to deal with non-AMD JavaScript files?  According to http://stackoverflow.com/a/14603398/7782: maybe.  Seems to be affirmed by [Requirement #9:  Load any script](http://requirejs.org/docs/requirements.html#9).

# <codecell>

from IPython.display import HTML, display, clear_output
import uuid

import jinja2
from jinja2 import Template

from settings import LEAFLET_KEY
=================
4724676
count:1
CSS_URL = "http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css"
LEAFLET_JS_URL = "http://cdn.leafletjs.com/leaflet-0.7.2/leaflet"

div_id = 'i' + str(uuid.uuid4())

JS = u"""
<script type="text/javascript">


    // load css if it's not already there: http://stackoverflow.com/a/4724676/7782
    function loadcss(url) {
        if (!$("link[href='" + url + "']").length)
            $('<link href="' + url + '" rel="stylesheet">').appendTo("head");
    }
    
    function add_map(id, map) {


        if ('_my_maps' in window && window._my_maps !== undefined) {
            window._my_maps[id] = map;
=================
4724676
count:1
CSS_URL = "http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css"
LEAFLET_JS_URL = "http://cdn.leafletjs.com/leaflet-0.7.2/leaflet"

div_id = 'i' + str(uuid.uuid4())

JS = u"""
<script type="text/javascript">


    // load css if it's not already there: http://stackoverflow.com/a/4724676/7782
    function loadcss(url) {
        if (!$("link[href='" + url + "']").length)
            $('<link href="' + url + '" rel="stylesheet">').appendTo("head");
    }

    function add_map(id, map) {

        if ('_my_maps' in window && window._my_maps !== undefined) {
            window._my_maps[id] = map;
        } else {
=================
4724676
count:1
from settings import LEAFLET_KEY

CSS_URL = "http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css"
LEAFLET_JS_URL = "http://cdn.leafletjs.com/leaflet-0.7.2/leaflet"


JS = u"""
<script type="text/javascript">

    // load css if it's not already there: http://stackoverflow.com/a/4724676/7782
    function loadcss(url) {
        if (!$("link[href='" + url + "']").length)
            $('<link href="' + url + '" rel="stylesheet">').appendTo("head");
            
    }
    
    function add_map(id, map) {

        if ('_my_maps' in window && window._my_maps !== undefined) {
            window._my_maps[id] = map;
=================
22185527
count:1
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# http://stackoverflow.com/questions/22185527/how-can-i-successfully-load-dimple-js-when-require-js-is-present\n",
      "\n",
      "# Answer: https://github.com/PMSI-AlignAlytics/dimple/pull/56#issuecomment-37480189"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
=================
32647365
count:2
      "Initial unsuccessful attempt at rendering choropleth map in notebook"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "It turned out that the hard part of doing the translation to IPython Notebook was figuring out how to load the required JavaScript libraries.  Being an off-and-on JavaScript programmer who is ramping up on the way to writing JavaScript properly in 2014, I was still living in the world of adding a `<script>` to load libraries. The problem of such an approach is the possibility of a lot of name collisions.   I knew that the IPython developers had moved to using [RequireJS](http://requirejs.org/), but I really couldn't figure out how to use it by reading the documentation for RequireJS.  \n",
      "\n",
      "It was only when I read [Something wrong with the d3js.org/d3.v3.min.js package - Issue #1693 - mbostock/d3](https://github.com/mbostock/d3/issues/1693), which I found via [d3.js - how to integrate d3 with require.js - Stack Overflow](http://stackoverflow.com/questions/13157704/how-to-integrate-d3-with-require-js#comment32647365_13171592) that I knew what to do.  Here's the very helpful incantion I was looking for:"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%%javascript\n",
      "// https://github.com/mbostock/d3/issues/1693\n",
      "\n",
      "// loads d3 using require \n",
=================
5724453
count:1
     "source": [
      "Paging through results"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# try again\n",
      "# http://stackoverflow.com/a/5724453/7782\n",
      "# http://excess.org/article/2013/02/itergen1/\n",
      "\n",
      "\n",
      "class my_g(object):\n",
      "    def __init__(self,max_count):\n",
      "        self._remaining = range(max_count)\n",
      "        self._len = max_count\n",
      "    def __iter__(self):\n",
      "        return self\n",
      "    def __len__(self):\n",
=================
17690738
count:1
       ]
      }
     ],
     "prompt_number": 44
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# http://stackoverflow.com/questions/17690738/in-pandas-how-do-i-convert-a-string-of-date-strings-to-datetime-objects-and-put\n",
      "date_stngs = ('2008-12-20','2008-12-21','2008-12-22','2008-12-23','Nov. 9, 1964', 'junk')\n",
      "pd.to_datetime(pd.Series(date_stngs),coerce=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 45,
=================
6771620
count:1
     "source": [
      "sorting"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# reverse sort -- best way?\n",
      "#http://stackoverflow.com/a/6771620/7782\n",
      "\n",
      "np.sort(np.arange(100))[::-1]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 43,
=================
13130357
count:1
       ]
      }
     ],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "#http://stackoverflow.com/a/13130357/7782\n",
      "count,division = np.histogram(df['P0010001'])\n",
      "df['P0010001'].hist(bins=division)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 20,
=================
3437130
count:3
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "You can filter Puerto Rico (PR) in a number of ways -- use the way you're most comfortable with. \n",
      "\n",
      "Optional fun: filter PR in the following way\n",
      "\n",
      "* calculate a `np.array` holding the the fips of the states\n",
      "* then use [numpy.in1d](http://docs.scipy.org/doc/numpy/reference/generated/numpy.in1d.html), which is a analogous to the [in](http://stackoverflow.com/a/3437130/7782) operator to test membership in a list"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "## FILL IN\n",
      "## calculate states_fips so that PR not included\n",
      "\n",
      "\n",
=================
9519673
count:1
     "prompt_number": 19
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "[[IPython-User] using Google Charts in IPython](http://lists.ipython.scipy.org/pipermail/ipython-user/2013-May/012694.html):\n",
      "\n",
      "> google.load blanks the page unless you give it a\n",
      "callback <http://stackoverflow.com/questions/9519673/why-does-google-load-cause-my-page-to-go-blank>\n",
      ".\n",
      "\n",
      "Also: [javascript - Google Maps API v3 - TypeError: Result of expression 'google.maps.LatLng' undefined] is not a constructor - Stack Overflow](http://stackoverflow.com/questions/6577404/google-maps-api-v3-typeerror-result-of-expression-google-maps-latlng-undef/8361021#8361021)\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
=================
8361021
count:1
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "[[IPython-User] using Google Charts in IPython](http://lists.ipython.scipy.org/pipermail/ipython-user/2013-May/012694.html):\n",
      "\n",
      "> google.load blanks the page unless you give it a\n",
      "callback <http://stackoverflow.com/questions/9519673/why-does-google-load-cause-my-page-to-go-blank>\n",
      ".\n",
      "\n",
      "Also: [javascript - Google Maps API v3 - TypeError: Result of expression 'google.maps.LatLng' undefined] is not a constructor - Stack Overflow](http://stackoverflow.com/questions/6577404/google-maps-api-v3-typeerror-result-of-expression-google-maps-latlng-undef/8361021#8361021)\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
=================
15889203
count:1
# <codecell>

# This solution is a bit "fancy" and can certainly be better commented.

import bisect
import random
from itertools import repeat, islice
from collections import Counter

# http://stackoverflow.com/a/15889203/7782
def cumsum(lis):
    total = 0
    for x in lis:
        total += x
        yield total

# depends on pop_list above
        
world_pop = sum([r[2] for r in pop_list])
cum_pop = list(cumsum((r[2] for r in pop_list)))
=================
231855
count:1

# **To practice using generators to yield geographical entities of various types.**  
# 
# Generators are a bit complicated, and I won't try to explain all the intricacies here.  I will show you how to use `yield` in a function definition to return a generator.  From [Definition of a generator](http://docs.python.org/2/glossary.html#term-generator):
# 
# <blockquote>A function which returns an iterator. It looks like a normal function except that it contains yield statements for producing a series a values usable in a for-loop or that can be retrieved one at a time with the next() function. Each yield temporarily suspends processing, remembering the location execution state (including local variables and pending try-statements). When the generator resumes, it picks-up where it left-off (in contrast to functions which start fresh on every invocation)</blockquote>
# 
# For some background on Python generators:
# 
# * [iterator - The Python yield keyword explained - Stack Overflow](http://stackoverflow.com/questions/231767/the-python-yield-keyword-explained/231855#231855)
# * [Improve Your Python: 'yield' and Generators Explained](http://www.jeffknupp.com/blog/2013/04/07/improve-your-python-yield-and-generators-explained/) 
# 
# Why use generators: http://stackoverflow.com/a/102632/7782
# 
# <blockquote>Generators are good for calculating large sets of results (in particular calculations involving loops themselves) where you don't know if you are going to need all results, or where you don't want to allocate the memory for all results at the same time. </blockquote>
# 
# Also, let's also practice using [itertools.islice](http://www.python.org/doc//current/library/itertools.html#itertools.islice) and [enumerate](http://docs.python.org/2/library/functions.html#enumerate) -- two of my favorite constructions in Python

# <markdowncell>

=================
102632
count:1
# Generators are a bit complicated, and I won't try to explain all the intricacies here.  I will show you how to use `yield` in a function definition to return a generator.  From [Definition of a generator](http://docs.python.org/2/glossary.html#term-generator):
# 
# <blockquote>A function which returns an iterator. It looks like a normal function except that it contains yield statements for producing a series a values usable in a for-loop or that can be retrieved one at a time with the next() function. Each yield temporarily suspends processing, remembering the location execution state (including local variables and pending try-statements). When the generator resumes, it picks-up where it left-off (in contrast to functions which start fresh on every invocation)</blockquote>
# 
# For some background on Python generators:
# 
# * [iterator - The Python yield keyword explained - Stack Overflow](http://stackoverflow.com/questions/231767/the-python-yield-keyword-explained/231855#231855)
# * [Improve Your Python: 'yield' and Generators Explained](http://www.jeffknupp.com/blog/2013/04/07/improve-your-python-yield-and-generators-explained/) 
# 
# Why use generators: http://stackoverflow.com/a/102632/7782
# 
# <blockquote>Generators are good for calculating large sets of results (in particular calculations involving loops themselves) where you don't know if you are going to need all results, or where you don't want to allocate the memory for all results at the same time. </blockquote>
# 
# Also, let's also practice using [itertools.islice](http://www.python.org/doc//current/library/itertools.html#itertools.islice) and [enumerate](http://docs.python.org/2/library/functions.html#enumerate) -- two of my favorite constructions in Python

# <markdowncell>

# From http://api.census.gov/data/2010/sf1/geo.html, geographic entities we are specifically interested in this exercise:
# 
# * state-county
=================
14734627
count:1
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# how about accessing group 'C'?\n",
      "# http://stackoverflow.com/a/14734627/7782\n",
      "# http://stackoverflow.com/questions/19804282/in-pandas-is-there-something-like-a-groupby-get-group-but-with-an-optional-defa\n",
      "# http://pandas.pydata.org/pandas-docs/dev/generated/pandas.core.groupby.GroupBy.get_group.html\n",
      "\n",
      "grouped = df.groupby('first_letter')\n",
      "grouped.get_group('C')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
=================
19804282
count:1
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# how about accessing group 'C'?\n",
      "# http://stackoverflow.com/a/14734627/7782\n",
      "# http://stackoverflow.com/questions/19804282/in-pandas-is-there-something-like-a-groupby-get-group-but-with-an-optional-defa\n",
      "# http://pandas.pydata.org/pandas-docs/dev/generated/pandas.core.groupby.GroupBy.get_group.html\n",
      "\n",
      "grouped = df.groupby('first_letter')\n",
      "grouped.get_group('C')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
=================
19530568
count:1
     "collapsed": false,
     "input": [
      "# let's try this again and try to do this in a more idiomatic Pandas fashion\n",
      "# ideally, generate a DataFrame with a NAME column that is a list of all states with the same first letter\n",
      "\n",
      "# It turns out that apply can come to the rescue\n",
      "# here' calculate the list of NAMEs\n",
      "\n",
      "# http://pandas.pydata.org/pandas-docs/dev/groupby.html#flexible-apply\n",
      "# http://stackoverflow.com/questions/19530568/can-pandas-groupby-aggregate-into-a-list-rather-than-sum-mean-etc\n",
      "\n",
      "df.groupby(\"first_letter\").apply(lambda x: list(x['NAME']))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 19,
=================
32647365
count:1

# <headingcell level=1>

# Initial unsuccessful attempt at rendering choropleth map in notebook

# <markdowncell>

# It turned out that the hard part of doing the translation to IPython Notebook was figuring out how to load the required JavaScript libraries.  Being an off-and-on JavaScript programmer who is ramping up on the way to writing JavaScript properly in 2014, I was still living in the world of adding a `<script>` to load libraries. The problem of such an approach is the possibility of a lot of name collisions.   I knew that the IPython developers had moved to using [RequireJS](http://requirejs.org/), but I really couldn't figure out how to use it by reading the documentation for RequireJS.  
# 
# It was only when I read [Something wrong with the d3js.org/d3.v3.min.js package - Issue #1693 - mbostock/d3](https://github.com/mbostock/d3/issues/1693), which I found via [d3.js - how to integrate d3 with require.js - Stack Overflow](http://stackoverflow.com/questions/13157704/how-to-integrate-d3-with-require-js#comment32647365_13171592) that I knew what to do.  Here's the very helpful incantion I was looking for:

# <codecell>

%%javascript
// https://github.com/mbostock/d3/issues/1693

// loads d3 using require 

require.config({
  paths: {
=================
13130357
count:1

# create a DataFrame, convert the 'P0010001' column
# show by descending population
df = DataFrame(ca_counties)
df['P0010001'] = df['P0010001'].astype('int')
df.sort_index(by='P0010001', ascending=False)

# <codecell>

#http://stackoverflow.com/a/13130357/7782
count,division = np.histogram(df['P0010001'])
df['P0010001'].hist(bins=division)
=================
4700614
count:1
      
      # stacked horizontal bars
      pWhite = ax.barh(y_race, p_white, color='b')
      pLatino = ax.barh(y_race, p_latino, color='g', left=p_white)
      pBlack = ax.barh(y_race, p_black, color='r', left=p_white+p_latino)
      pAsian = ax.barh(y_race, p_asian, color='c', left=p_white+p_latino+p_black)
      
      plt.yticks(y_race, cities)
      
      # legend foo https://stackoverflow.com/questions/4700614/how-to-put-the-legend-out-of-the-plot
      # Shink current axis's height by 10% on the bottom
      box = ax.get_position()
      ax.set_position([box.x0, box.y0 + box.height * 0.1,
                       box.width, box.height * 0.85])
      
      # Put a legend below current axis
      ax.legend((pWhite, pLatino, pBlack, pAsian, pDiversity), ('White', 'Latino', 'Black', 'Asian', 'Diversity'),
                loc='upper center', bbox_to_anchor=(0.5, -0.05),
                fancybox=True, shadow=True, ncol=5)
      
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test3/349/349ss2oncregcdFF4000pointspsfkf185Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test3/349/349ss2oncregcdFF4000pointspsfkf185Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff8b61cc090>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100142/100142Final/100142ss2onc250regcdFF20sMpsfkfintMB92Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100142/100142Final/100142ss2onc250regcdFF20sMpsfkfintMB92Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100142/100142Final/Xk100142.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f74bfa41390>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:13
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/72eb68c4-a184-4801-9224-2381f58ad9fe/977/977ss1c_1000regcdFF4000pointspsfkf89Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/72eb68c4-a184-4801-9224-2381f58ad9fe/977/977ss1c_1000regcdFF4000pointspsfkf89Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:31
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f986a0a2110>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/72eb68c4-a184-4801-9224-2381f58ad9fe/975/975ss1_1000cregcdFF20spsfkf93Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/72eb68c4-a184-4801-9224-2381f58ad9fe/975/975ss1_1000cregcdFF20spsfkf93Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fc951b1a250>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/FlyLFMDataSet/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/TDGSB2_psfproj_dff_kfMB130Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/FlyLFMDataSet/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/TDGSB2_psfproj_dff_kfMB130Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/FlyLFMDataSet/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/TDGSB2Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fbe1f6b0a50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/100051/100051ss1_1000regcdFF20spsfkf129Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/100051/100051ss1_1000regcdFF20spsfkf129Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/100051/100051/100051ss1_1000regctemppsf.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "imgt = nb.load(filenamet)\n",
    "Dtemp=np.squeeze(imgt.get_data())"
   ]
  },
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/100431/100431ss1regdFF20spsfkf90Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/100431/100431ss1regdFF20spsfkf90Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/100431/MAX_100431ss1regdFF20spsfkf90Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8c4a8df850>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/964/964ss1cregcU7sMpsfkf250Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/964/964ss1cregcU7sMpsfkf250Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/100621ss2oncregcdFF20spsfkfconcatMB116Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/100621ss2oncregcdFF20spsfkfconcatMB116Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/MAX_100621ss2oncregcdFF20spsfkfconcatMB116Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fe408d932d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/100621ss2seriesXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "collapsed": true
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/100621ss2seriesXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": true
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/e14406b6-b6d1-4305-86e1-f0fe5128f521/100212/100212ss1oncregcdFF2000pointspsfkf108Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/e14406b6-b6d1-4305-86e1-f0fe5128f521/100212/100212ss1oncregcdFF2000pointspsfkf108Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fd9fdfeef10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100135/100135Final/100135ss2c500regcdFF20sMpsfkfintMB84Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100135/100135Final/100135ss2c500regcdFF20sMpsfkfintMB84Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100135/100135Final/100135Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f6499b41390>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100597series/1000601ss1oncregdFF2000pointspsfkfconcat186Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100597series/1000601ss1oncregdFF2000pointspsfkfconcat186Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f6e9ae02150>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100597series/100601/100601X.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100142/100142Final/100142ss2onc250regcdFF20sMpsfkfint110Smith0_4_60TSzmap.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100142/100142Final/100142ss2onc250regcdFF20sMpsfkfint110Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100142/100142Final/Xk100142.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fe033eb33d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100618series/100618regcdFF2000pointspsfkfconcat156Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100618series/100618regcdFF2000pointspsfkfconcat156Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100618series/100618/100618X.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/Seagate Backup Plus Drive1/100147/100147ss1onregcdFF4000pointspsfkf122Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/Seagate Backup Plus Drive1/100147/100147ss1onregcdFF4000pointspsfkf122Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:4
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fedf661bd50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100411series/100411alloncregcdFF20skfintminTSROI.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100411series/100411alloncregcdFF20skfintmin256Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100411series/100411seriesXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f890509e0d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Desktop/862ss2c500reg3to40UMpsfkf_150.ica/filtered_func_data.icazscoredmapscolor.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameo = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameo)\n",
    "nim=NiftiImage(filenameo)\n",
    "global Do\n",
    "Do=nim.data"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test4/100145/100145ss1onregdFF2000pointspsfkf150Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test4/100145/100145ss1onregdFF2000pointspsfkf150Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test4/100145/100145X.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ff91d057790>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100597series/100599/100599ss1oncregdFF2000pointspsfkf122Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100597series/100599/100599ss1oncregdFF2000pointspsfkf122Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f59afc68e10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/100621ss2oncregcdFF20spsfkfconcat166Smith0_4_60ICthresh3sTS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/100621ss2oncregcdFF20spsfkfconcat166Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/MAX_100621ss2oncregcdFF20spsfkfconcat166Smith0_4_60ICthresh3std.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f25db507050>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100597series/100600/100600ss1oncregdFF2000pointspsfkf137Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100597series/100600/100600ss1oncregdFF2000pointspsfkf137Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100597series/100597seriesWRGF.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fc756caec90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test3/100621series/100624ss1regdFF20spsfkf168Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test3/100621series/100624ss1regdFF20spsfkf168Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test3/100621series/100624ss1regdFF20spsfkf168Smith0_4_60TSzmap.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fdc34304510>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100135/100135Final/100135ss2c500regcdFF20sMpsfkfint101Smith0_4_60ICTSROIThresh3.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100135/100135Final/100135ss2c500regcdFF20sMpsfkfint101Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100135/100135Final/100135Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f92327a0f50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100618series/100619regcdFF2000pointspsfkf115Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100618series/100619regcdFF2000pointspsfkf115Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8b6cb49b10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100621series/100626ss1regdFF20spsfkf141Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100621series/100626ss1regdFF20spsfkf141Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100621series/100626/100626WGR.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f648275a250>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/FlyLFMDataSet/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/TDGSB2_psfproj_dff_kfAvROI.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/FlyLFMDataSet/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/Components/TDGSB2_psfproj_dff_kf220Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/FlyLFMDataSet/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/TDGSB2Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": false
=================
3579568
count:5
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f944e2dba50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100404series/100405seriesintMB176Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100404series/100405seriesintMB176Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100404series/100404seriesXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f25bfb3d1d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100150/100150ss1cregc72Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100150/100150ss1cregc72Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/72eb68c4-a184-4801-9224-2381f58ad9fe/100436/100436ssioncregcdFF20spsfkf44Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/72eb68c4-a184-4801-9224-2381f58ad9fe/100436/100436ssioncregcdFF20spsfkf44Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f431cfedc90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/547/547ss2cregdFF2000pointspsfkfconcat74Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/547/547ss2cregdFF2000pointspsfkfconcat74Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f12600f3bd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/FlyLFMDataSet/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/Components/TDGSB2_psfproj_dff_kf220Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/906/906ss2cregdFF2000pointspsfkf68Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/906/906ss2cregdFF2000pointspsfkf68Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f66f1ce33d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100404series/100405seriesint252Smith0_4_60ICTSROIThresh3.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100404series/100405seriesint252Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100404series/100404seriesXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100404series/MAX_100405seriesint252Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100621series/100627ss1regdFF20spsfkfc140Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100621series/100627ss1regdFF20spsfkfc140Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fc0a95c4050>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100621series/100627/100627X.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100411series/100411alloncregcdFF20skfintminMB206Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100411series/100411alloncregcdFF20skfintminMB206Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100411series/100411seriesXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f2d3a91c150>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
     "metadata": {},
     "source": [
      "Open Data template"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)\n",
      "img = nb.load(filename)\n",
      "data = img.get_data()\n",
      "S=data.shape"
     ],
=================
3579568
count:2
     "metadata": {},
     "source": [
      "Open Masks"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filenameM)\n",
      "img1 = nb.load(filenameM)\n",
      "Masks = img1.get_data()\n",
      "Sm=Masks.shape\n",
      "Masks=np.array(Masks)"
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100102series/100103ss1oncregcdFF2000pointspsfkf72Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100102series/100103ss1oncregcdFF2000pointspsfkf72Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fa222d3ba10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100133/100133ss2on250cregcU7sMpsfkf400Smith0_4TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "\u001b[0;32m<ipython-input-234-50490814ca10>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mfilename\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maskopenfilename\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# show an \"Open\" dialog box and return the path to the selected file\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mUa2\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloadmat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mDTroi\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mUa2\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'TSzmapo'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mDTroi\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python2.7/dist-packages/scipy/io/matlab/mio.pyc\u001b[0m in \u001b[0;36mloadmat\u001b[0;34m(file_name, mdict, appendmat, **kwargs)\u001b[0m\n\u001b[1;32m    133\u001b[0m     \"\"\"\n\u001b[1;32m    134\u001b[0m     \u001b[0mvariable_names\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'variable_names'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 135\u001b[0;31m     \u001b[0mMR\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmat_reader_factory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mappendmat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    136\u001b[0m     \u001b[0mmatfile_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mMR\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_variables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvariable_names\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    137\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mmdict\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python2.7/dist-packages/scipy/io/matlab/mio.pyc\u001b[0m in \u001b[0;36mmat_reader_factory\u001b[0;34m(file_name, appendmat, **kwargs)\u001b[0m\n\u001b[1;32m     56\u001b[0m        \u001b[0mtype\u001b[0m \u001b[0mdetected\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m`\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m`\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m     \"\"\"\n\u001b[0;32m---> 58\u001b[0;31m     \u001b[0mbyte_stream\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_open_file\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mappendmat\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     59\u001b[0m     \u001b[0mmjv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmnv\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_matfile_version\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbyte_stream\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     60\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mmjv\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python2.7/dist-packages/scipy/io/matlab/mio.pyc\u001b[0m in \u001b[0;36m_open_file\u001b[0;34m(file_like, appendmat)\u001b[0m\n\u001b[1;32m     26\u001b[0m                 \u001b[0mfile_like\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m'.mat'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m                 \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m                     \u001b[0;32mreturn\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_like\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'rb'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     29\u001b[0m                 \u001b[0;32mexcept\u001b[0m \u001b[0mIOError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m                     \u001b[0;32mpass\u001b[0m  \u001b[0;31m# Rethrow the original exception.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mIOError\u001b[0m: [Errno 2] No such file or directory: '.mat'"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua2=sio.loadmat(filename)\n",
    "DTroi=Ua2['TSzmapo']\n",
    "DTroi.shape"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100133/100133ss2on250cregcU7sMpsfkf400Smith0_4IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/behavior862_863.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua3=sio.loadmat(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100411series/100411alloncregcdFF20skfintminMB206Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100145/100145ss1onregdFF2000pointspsfkf150Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100145/100145ss1onregdFF2000pointspsfkf150Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100145/100145X.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100404series/100405seriesintMB176Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100404series/100405seriesintMB176Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100404series/100404seriesXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f98809830d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/THDDCGCaMP62/100404series/100405seriesint252Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100145/100145X.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fdec8024990>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fc0a9832b10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/349/349ss2oncregcdFF4000pointspsfkf185Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/349/349ss2oncregcdFF4000pointspsfkf185Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f2c6756ae10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100321/100321ss1onregdFF2000pointspsfkf152Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100321/100321ss1onregdFF2000pointspsfkf152Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f7a4bbf74d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100433/100433ss1onregcdFF2000pointspsfkf114Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100433/100433ss1onregcdFF2000pointspsfkf114Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100433/MAX_100433ss1onregcdFF2000pointspsfkf114Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fdad85822d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/Seagate Backup Plus Drive/899/899ss2cregdFF2000pointspsfkf67Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/Seagate Backup Plus Drive/899/899ss2cregdFF2000pointspsfkf67Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fa9f0a54850>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/100621ss2oncregcdFF20spsfkfconcat166Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f25db8c4ed0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100621series/100627/100627X.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100102series/100102ss1onregcdFF2000pointspsfkf81Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100102series/100102ss1onregcdFF2000pointspsfkf81Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fd559decd50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100597series/100597seriesWRGF.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea/100697seriesGood/100697series/100697Registration/JFRCTemplate03_2018.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f6ca30d1310>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/100250/100250ss2oncdFF20spsfkf50Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/100250/100250ss2oncdFF20spsfkf50Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f4ed9bfd690>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "Dmean=np.zeros([S[0],S[1],Nstack])\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/470fddca-e336-42c7-9d91-b91361d994ea1/100145/100145X.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f75ea1cef50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/100106forGerald.csv\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Tvid=Ua['Time']\n",
    "Tvid.shape"
   ]
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)\n",
    "img1 = nb.load(filename2)\n",
    "data = img1.get_data()\n",
    "S=data.shape\n",
    "S"
   ]
  },
=================
3579568
count:1
       "(1, 7607)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Tvid=Ua['Time']\n",
    "Tvid.shape"
   ]
=================
3579568
count:1
       "(12, 25, 7607, 1)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)\n",
    "img1 = nb.load(filename2)\n",
    "data = img1.get_data()\n",
    "S=data.shape\n",
    "S"
   ]
  },
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100026-100027/100026-100027psfKF298Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100026-100027/100026_100027Registration/10026JFRCTransformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:6
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/986/986ss1_1000cregcdFF20spsfkf198Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:6
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/986/986ss1_1000cregcdFF20spsfkf198Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/986/986Registration/986JFRCTransformedseparateLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:3
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9717a7b7d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "X=Ua['X']\n",
    "\n",
    "plt.plot(X.T)\n",
    "\n",
    "Sx=X.shape"
   ]
=================
3579568
count:3
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9722065ad0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100049-100050/100049-100050regpsfkf235Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100049-100050/100049-100050regpsfkf235Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true
=================
3579568
count:5
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": true
=================
3579568
count:8
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:8
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/960/960ss1_500regcdFF20spsfkf192Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:8
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/960/960ss1_500regcdFF20spsfkf192Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:8
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/960/960registration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:10
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/960/960Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
=================
3579568
count:10
       "(88, 77, 34)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/910-911/910-911psfdffkf179Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:6
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/910-911/910-911psfdffkf179Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/910-911/910_911registration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f89a01f8b10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "X=Ua['X']\n",
    "\n",
    "plt.plot(X)\n",
    "\n",
    "Sx=X.shape"
   ]
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f89a2206550>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test2/972/972ss1on500cregcdFF30sMpsfkf176Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/972/972ss1TimeFluoOn.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test2/972/972combo20xvinegartruetruetrue_2015-06-30-174721-0000TimeFluoOn.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test2/972/972ss1on500cregcdFF30sMpsfkf176Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/972/972Behavior.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
=================
3579568
count:5
       "(189, 114, 10)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928ss2onc250regcdFF20sMpsfkf156Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928ss2onc250regcdFF20sMpsfkf156Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
=================
3579568
count:6
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928Registration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928XkStimuli.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
=================
3579568
count:2
       "(183, 118, 37)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:7
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/918/918ss1regc1000dFF20spsfkf118Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:7
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/918/918ss1regc1000dFF20spsfkf118Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/918/918Registration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fa93b1c4a10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "X=Ua['X']\n",
    "\n",
    "plt.plot(X.T)\n",
    "\n",
    "Sx=X.shape"
   ]
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fa93b1811d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/910-911/910_911StimXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
=================
3579568
count:1
       "(83, 44, 34)"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/100670series/100670seriesregdFF20spsfkf_concat230Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/100670series/100670seriesregdFF20spsfkf_concat230Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/100670series/100670Registration/JFRC100670TransformedseparateLargetrimmedpsf.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:3
      "\u001b[0;32m<ipython-input-24-33e37e50fa51>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mfilename\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maskopenfilename\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# show an \"Open\" dialog box and return the path to the selected file\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mUa\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloadmat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mXk\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mUa\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Xk'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python2.7/dist-packages/scipy/io/matlab/mio.pyc\u001b[0m in \u001b[0;36mloadmat\u001b[0;34m(file_name, mdict, appendmat, **kwargs)\u001b[0m\n\u001b[1;32m    133\u001b[0m     \"\"\"\n\u001b[1;32m    134\u001b[0m     \u001b[0mvariable_names\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'variable_names'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 135\u001b[0;31m     \u001b[0mMR\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmat_reader_factory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mappendmat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    136\u001b[0m     \u001b[0mmatfile_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mMR\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_variables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvariable_names\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    137\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mmdict\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python2.7/dist-packages/scipy/io/matlab/mio.pyc\u001b[0m in \u001b[0;36mmat_reader_factory\u001b[0;34m(file_name, appendmat, **kwargs)\u001b[0m\n\u001b[1;32m     56\u001b[0m        \u001b[0mtype\u001b[0m \u001b[0mdetected\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m`\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m`\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m     \"\"\"\n\u001b[0;32m---> 58\u001b[0;31m     \u001b[0mbyte_stream\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_open_file\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mappendmat\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     59\u001b[0m     \u001b[0mmjv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmnv\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_matfile_version\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbyte_stream\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     60\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mmjv\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python2.7/dist-packages/scipy/io/matlab/mio.pyc\u001b[0m in \u001b[0;36m_open_file\u001b[0;34m(file_like, appendmat)\u001b[0m\n\u001b[1;32m     34\u001b[0m         \u001b[0mfile_like\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     35\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 36\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mIOError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Reader needs file name or open file-like object'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     37\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mfile_like\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     38\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mIOError\u001b[0m: Reader needs file name or open file-like object"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
=================
3579568
count:3
       "(104, 103, 10)"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:7
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/973/973ss1_1000regcdFF20spsfkf120Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/973/973ss1_1000regcdFF20spsfkf120Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/973/973Registration/973JFRCTransformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f7cca1c8ed0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "X=Ua['X']\n",
    "\n",
    "plt.plot(X.T)\n",
    "\n",
    "Sx=X.shape"
   ]
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f7cca0eea50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/UVvsBlue/100509series/100509seriesondFF20spsfkfc250Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/UVvsBlue/100509series/100509seriesondFF20spsfkfc250Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-10-8c11e20704ad>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mfilenameM\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maskopenfilename\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# show an \"Open\" dialog box and return the path to the selected file\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilenameM\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mimg1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilenameM\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0mMasks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimg1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mSm\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mMasks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/home/sophie/.local/lib/python2.7/site-packages/nibabel/loadsave.pyc\u001b[0m in \u001b[0;36mload\u001b[0;34m(filename, **kwargs)\u001b[0m\n\u001b[1;32m     38\u001b[0m     '''\n\u001b[1;32m     39\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexists\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 40\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mFileNotFoundError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"No such file: '%s'\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     41\u001b[0m     \u001b[0msniff\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mimage_klass\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mall_image_classes\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mFileNotFoundError\u001b[0m: No such file: ''"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/UVvsBlue/756series/756seriesondFF20spsfkfc246Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/UVvsBlue/756series/756seriesondFF20spsfkfc246Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/UVvsBlue/756series/756Registration/756JFRCTransformedseparateLargetrimmedpsf.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100031/ss2/100031ss2_1000creg5to36cdFF20sMpsfkf236Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100031/ss2/100031ss2_1000creg5to36cdFF20sMpsfkf236Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/938/938ss2onc250regcdFF20sMpsfkf250Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/938/938ss2onc250regcdFF20sMpsfkf250Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/938/938Registration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/938/938XkStimuli.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
=================
3579568
count:2
       "(165, 111, 10)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/100660series/ForOdors/100659ss1regdFF20sconcatkf219Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/100660series/ForOdors/100659ss1regdFF20sconcatkf219Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/100660series/100660Registration/JFRC100660TransformedseparateLargetrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100051/100051ss1_1000to10930regcU14sMpsfkf150Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100051/100051ss1_1000to10930regcU14sMpsfkf150Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:6
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100051/100051Registration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9ee03d3f50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "X=Ua['X']\n",
    "\n",
    "plt.plot(X.T)\n",
    "\n",
    "Sx=X.shape"
   ]
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9ee0291b50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100051/100051ss1_1000to10930regcU14sMpsfkf150Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100051/100051ss1_1000to10930regcU14sMpsfkf150Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/180315/863ss2onc250_862ss2onc250zx2cregcregc862_863dFF20spsfkf221Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/180315/863ss2onc250_862ss2onc250zx2cregcregc862_863dFF20spsfkf221Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/XkStim.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']\n",
    "\n",
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
=================
3579568
count:1
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']\n",
    "\n",
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:6
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100031/ss2/100031ss2_1000creg5to36cdFF20sMpsfkf236Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:6
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100031/ss2/100031ss2_1000creg5to36cdFF20sMpsfkf236Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100031/ss2/100031registration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f31b4382650>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "X=Ua['X']\n",
    "\n",
    "plt.plot(X.T)\n",
    "\n",
    "Sx=X.shape"
   ]
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100049-100050/100049-100050regpsfkf235Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100049-100050/100049-100050regpsfkf235Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100049-100050/100049_100050Registration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100049-100050/100049_100050Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
=================
3579568
count:1
       "(87, 52, 37)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/945/945_170919/945ss2cregcdFF20spsfkf222Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/945/945_170919/945ss2cregcdFF20spsfkf222Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/945/945Registration/JFRC945TransformedseparateLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/945/945StimXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/180315/863ss2onc250_862ss2onc250zx2cregcregc862_863dFF20spsfkf221Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test11/ComboPanNeuronalGCaMP6/862_863/862_863registration/Template4alignement2anatomypsf.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/964/964/964ss1cregcU7sMpsfkf250Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/964/964/964ss1cregcU7sMpsfkf250Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/964/964registration/JFRC964Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/964/964XkStim.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
=================
3579568
count:2
       "(101, 88, 37)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/UVvsBlue/985/985ss1_500Ukf260Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/UVvsBlue/985/985ss1_500Ukf260Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/UVvsBlue/985/985Registration/JFRC985TransformedseparateLargetrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/981/981Final/981ss2onc500regcdFF40sMpsfkfint799Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/981/981Final/981ss2onc500regcdFF40sMpsfkfint799Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/981/981Final/981Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": true
=================
3579568
count:4
       "(181, 88, 9)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100148/100148ss2it30/100148Final/100148ss2onc500regcdFF40sMpsfkfint300Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100148/100148ss2it30/100148Final/100148ss2onc500regcdFF40sMpsfkfint300Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100148/100148ss2it30/100148Final/100148XkV2.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:3
       "(181, 109, 9)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100234/100234/100234ss2cregcdFF20sMkf349Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100234/100234/100234ss2cregcdFF20sMkf349Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100234/100234/100234Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100234/100234Registration/JFRC100234Transformedseparate.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:9
       "(181, 109, 9)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100135/100135ss2oncregcdFF20skf99Smith0_4_60TSint.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100135/100135ss2oncregcdFF20skf99Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100135/100135Final/100135Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
       "(137, 87, 7)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
     "metadata": {},
     "source": [
      "# Open data"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
=================
3579568
count:1
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)\n",
      "Ua2=sio.loadmat(filename)\n",
      "DTroi=Ua2['TSzmapo']\n",
      "DTroi.shape"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
3579568
count:1
       ]
      }
     ],
     "prompt_number": 35
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
=================
3579568
count:4
     "metadata": {},
     "source": [
      "# Open Masks"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filenameM)\n",
      "img1 = nb.load(filenameM)\n",
      "Masks = img1.get_data()\n",
      "Sm=Masks.shape\n",
      "Masks=np.array(Masks)"
=================
3579568
count:1
     "metadata": {},
     "source": [
      "# Last pruning by hand"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filenamet)\n",
      "nimt=NiftiImage(filenamet)\n",
      "Dtemp=np.squeeze(nimt.data.T)\n",
      "Dtemp.shape"
     ],
=================
3579568
count:1
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 91
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)\n",
      "Ua3=sio.loadmat(filename)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
=================
3579568
count:4
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
3579568
count:2
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
27928275
count:3
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 327
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Extend linearregression class to get p values for the betas (from http://stackoverflow.com/questions/27928275/find-p-value-significance-in-scikit-learn-linearregression)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "class LinearRegression(linear_model.LinearRegression):\n",
      "\n",
      "    def __init__(self,*args,**kwargs):\n",
      "        # *args is the list of arguments that might go into the LinearRegression object\n",
=================
3579568
count:4
     "metadata": {},
     "source": [
      "# Open data and plot average in each category"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/981/981Final/981ss2onc500regcdFF40sMpsfkfint799Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/981/981Final/981ss2onc500regcdFF40sMpsfkfint799Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/981/981Final/981Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "collapsed": true
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/JFRC981Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
       "(181, 88, 9)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/945/Old/945ss2c250zx2regcU10sM250Smith0_4TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/945/Old/945ss2c250zx2regcU10sM250Smith0_4IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/945/945Registration/945JFRCTransformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100026-100027/100026-100027psfKF298Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/862_863/Boxes/Low/863ss2onc250_862ss2onc250zx2cregcregc862_863U10sMpsfkfMMLow30Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
       "(5957, 30)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua2=sio.loadmat(filename)\n",
    "DTroi=Ua2['TSzmapo']\n",
    "DTroi.shape"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/862_863/Boxes/Low/863ss2onc250_862ss2onc250zx2cregcregc862_863U10sMpsfkfMMLow30Smith0_4_60ICpadded.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/862ResizedMapsfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
       "(174, 93, 12)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=NiftiImage(filenamet)\n",
    "Dtemp=np.squeeze(nimt.data.T)\n",
    "Dtemp.shape"
   ]
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/986/986Registration/986JFRCTransformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100106/100106Final/100106ss2on500cregcdFF20sMpsfkfint169Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100106/100106Final/100106ss2on500cregcdFF20sMpsfkfint169Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100106/100106Final/100106Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": true
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/JFRC100106Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/DataPaper/100142/100142ss2oncregcdFF20skf109Smith0_4_60TSint.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/DataPaper/100142/100142ss2oncregcdFF20skf109Smith0_4_60TSzmapint.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "metadata": {
    "collapsed": false
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/DataPaper/100142/100142ss2oncregcdFF20skf109Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/DataPaper/100142/Behavior/100142Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {
    "collapsed": true
=================
3579568
count:6
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/DataPaper/100142/Registration/JFRC100142Transformedseparate.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:6
       "(155, 102, 29)"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928ss2onc250regcdFF20sMpsfkf156Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928ss2onc250regcdFF20sMpsfkf156Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928Registration/JFRC928Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/981/981Final/981Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "metadata": {
    "collapsed": true
=================
3579568
count:4
       "(181, 88, 9)"
      ]
     },
     "execution_count": 318,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/773/773Final/773ss2onc500regcU15sMpsfkfint160Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/773/773Final/773ss2onc500regcU15sMpsfkfint160Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/773/773Final/773Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/773/773Final/JFRC773Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
       "(155, 88, 10)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f315102fa50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape\n",
    "\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928ss2onc250regcdFF20sMpsfkf156Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928ss2onc250regcdFF20sMpsfkf156Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 146
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
3579568
count:1
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 159
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/973/973ss1_1000regcdFF20spsfkf120Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/973/973Registration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 185
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
3579568
count:2
       ]
      }
     ],
     "prompt_number": 187
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
27928275
count:2
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Extend linearregression class to get p values for the betas (from http://stackoverflow.com/questions/27928275/find-p-value-significance-in-scikit-learn-linearregression)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "class LinearRegression(linear_model.LinearRegression):\n",
      "\n",
      "    def __init__(self,*args,**kwargs):\n",
      "        # *args is the list of arguments that might go into the LinearRegression object\n",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100148/100148ss2it30/100148Final/100148ss2onc500regcdFF40sMpsfkfint300Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100148/100148ss2it30/100148Final/100148ss2onc500regcdFF40sMpsfkfint300Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100148/100148ss2it30/100148Final/100148XkV2.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100148/100148Registration/JFRC100148Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100234/100234/100234ss2cregcdFF20sMpsfkfint350Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100234/100234/100234ss2cregcdFF20sMpsfkfint350Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100234/100234/100234Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
       "(168, 111, 11)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "print(nimt.get_data().shape)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100148/100148ss2it30/100148Final/100148ss2onc500regcdFF40sMpsfkfint300Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100148/100148ss2it30/100148Final/100148ss2onc500regcdFF40sMpsfkfint300Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100148/100148ss2it30/100148Final/100148Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100148/100148ss2it30/100148ForNotebook/100148JFRCTransformedGoodfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100632series/100632/100632seriespreprocessed238Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100632series/100632/100632seriespreprocessed238Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100632series/100632seriesRegistration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
3579568
count:1
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 16
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100404series/100405seriesint252Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100404series/100405seriesint252Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100404series/100404seriesXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:5
       "(88, 56, 37)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
       ]
      }
     ],
     "prompt_number": 104
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
27928275
count:2
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 459
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Extend linearregression class to get p values for the betas (from http://stackoverflow.com/questions/27928275/find-p-value-significance-in-scikit-learn-linearregression)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "class LinearRegression(linear_model.LinearRegression):\n",
      "\n",
      "    def __init__(self,*args,**kwargs):\n",
      "        # *args is the list of arguments that might go into the LinearRegression object\n",
=================
3579568
count:1
     "metadata": {},
     "source": [
      "Open Data"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)\n",
      "img = nb.load(filename)\n",
      "data = img.get_data()\n",
      "S=data.shape"
     ],
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/960/960ss1_500regcdFF20spsfkf192Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/960/960ss1_500regcdFF20spsfkf192Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/960/960registration/JFRC960Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100106/100106Final/100106ss2on500cregcdFF20sMpsfkfint169Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100106/100106Final/100106ss2on500cregcdFF20sMpsfkfint169Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100106/100106Final/100106Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
       "(189, 125, 10)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100234/100234/100234ss2cregcdFF20sMpsfkfint350Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100234/100234/100234ss2cregcdFF20sMpsfkfint350Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100234/100234/100234Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
       "(168, 111, 36)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100498series/100499_100500_100501ConcatenatedStacksM308Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100498series/100499_100500_100501ConcatenatedStacksM308Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100498series/Xk499_500_501.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
       "(166, 111, 10)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/862ss2c500regcUKF150Smith0_4TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/862ss2c500regcUKF150Smith0_4IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:6
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/180315/863ss2onc250_862ss2onc250zx2cregcregc862_863dFF20spsfkf221Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:5
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/180315/863ss2onc250_862ss2onc250zx2cregcregc862_863dFF20spsfkf221Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/862_863registration/862ResizedMapsLargeRegionsfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/XkStim.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
=================
3579568
count:3
       "(174, 93, 12)"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/910-911/910_911registration/910JFRCTransformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/986/986Registration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100133/old/100133Final/100133ss2on250cregcdFF30sMpsfkfint599Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100133/old/100133Final/100133ss2on250cregcdFF30sMpsfkfint599Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100133/old/100133Final/100133Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "collapsed": true
=================
3579568
count:4
       "(180, 97, 10)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100051/100051ResizedMapsfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
     "metadata": {},
     "source": [
      "Open time series from PCA ICA"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
=================
3579568
count:1
     "metadata": {},
     "source": [
      "Open time series from averaring in ROI"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
=================
3579568
count:1
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
=================
3579568
count:1
     "metadata": {},
     "source": [
      "# Pruning by hand"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filenamet)\n",
      "nimt=NiftiImage(filenamet)\n",
      "Dtemp=np.squeeze(nimt.data.T)\n",
      "Dtemp.shape"
     ],
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/918/918Registration/JFRC918Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/964/964registration/JFRCTransformedLargefullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100609/100609ss2cregcdFF20spsfkf232Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100609/100609ss2cregcdFF20spsfkf232Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100609/100609Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
=================
3579568
count:3
       "(144, 111, 9)"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/100051ss1_1000regcU10sMpsfkf150Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/100051ss1_1000regcU10sMpsfkf150Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/100051ResizedMapsfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
       "(92, 44, 11)"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=NiftiImage(filenamet)\n",
    "Dtemp=np.squeeze(nimt.data.T)\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/100051/100051ss1_1000regcdFF30spsfkf138Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/100051/100051ss1_1000regcdFF30spsfkf138Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100049-100050/100049-100050regpsfkf235Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100049-100050/100049-100050regpsfkf235Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/100049-100050/100049_100050Registration/JFRC100049Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100160/100160it30/100160Final/100160Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
       "(173, 110, 10)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100031/ss2/100031registration/JFRC100031Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)-Copy1\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 821
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
3579568
count:1
       ]
      }
     ],
     "prompt_number": 823
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
27928275
count:1
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 919
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Extend linearregression class to get p values for the betas (from http://stackoverflow.com/questions/27928275/find-p-value-significance-in-scikit-learn-linearregression)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "class LinearRegression(linear_model.LinearRegression):\n",
      "\n",
      "    def __init__(self,*args,**kwargs):\n",
      "        # *args is the list of arguments that might go into the LinearRegression object\n",
=================
3579568
count:1
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 247
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
3579568
count:1
       ]
      }
     ],
     "prompt_number": 249
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
      "from Tkinter import Tk\n",
      "from tkFileDialog import askopenfilename\n",
      "\n",
      "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
      "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
      "print(filename2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100051/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100051/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100051/100051XkStim.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
=================
3579568
count:1
       "(92, 44, 36)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/862_863registration/862ResizedMapsfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/964/964/964ss1cregcU7sMpsfkf250Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/40x/964/964/964ss1cregcU7sMpsfkf250Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/945/945_170919/945ss2cregcdFF20spsfkf222Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/945/945_170919/945ss2cregcdFF20spsfkf222Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/945/945Registration/JFRC945Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100148/100148ss2it30/100148Final/100148XkV2.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/863ss2onc250_862ss2onc250zx2cregcregc862U10sMpsfkf199Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
       "(2916, 199)"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua2=sio.loadmat(filename)\n",
    "DTroi=Ua2['TSzmapo']\n",
    "DTroi.shape"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Downloads/863ss2onc250_862ss2onc250zx2cregcregc862U10sMpsfkf199Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Desktop/Registration/862_863/862ResizedMapsfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
       "(174, 93, 12)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=NiftiImage(filenamet)\n",
    "Dtemp=np.squeeze(nimt.data.T)\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/180315/863ss2onc250_862ss2onc250zx2cregcregc862_863dFF20spsfkf221Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua2=sio.loadmat(filename)\n",
    "DTroi=Ua2['TSzmapo']\n",
    "DTroi.shape"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/180315/863ss2onc250_862ss2onc250zx2cregcregc862_863dFF20spsfkf221Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100160/100160it30/100160Final/100160Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100160/JFRC100160Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
       "(173, 110, 10)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100404series/100405seriesint252Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100404series/100404seriesXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/986/986ss1_1000cregcdFF20spsfkf198Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/986/986ss1_1000cregcdFF20spsfkf198Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/986/986X.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "X=Ua['X']\n",
    "\n",
    "plt.plot(X.T)\n",
    "\n",
    "Sx=X.shape"
   ]
=================
3579568
count:1
       "(90, 43, 37)"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100160/100160it30/100160Final/100160Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
       "(5957, 221)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua2=sio.loadmat(filename)\n",
    "DTroi=Ua2['TSzmapo']\n",
    "DTroi.shape"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/862_863/180315/863ss2onc250_862ss2onc250zx2cregcregc862_863dFF20spsfkf221Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-34-e290fefd2434>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mfilenamet\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maskopenfilename\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# show an \"Open\" dialog box and return the path to the selected file\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilenamet\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mnimt\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilenamet\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0mDtemp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqueeze\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnimt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mDtemp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/home/sophie/.local/lib/python2.7/site-packages/nibabel/loadsave.pyc\u001b[0m in \u001b[0;36mload\u001b[0;34m(filename, **kwargs)\u001b[0m\n\u001b[1;32m     38\u001b[0m     '''\n\u001b[1;32m     39\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexists\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 40\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mFileNotFoundError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"No such file: '%s'\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     41\u001b[0m     \u001b[0msniff\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mimage_klass\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mall_image_classes\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mFileNotFoundError\u001b[0m: No such file: ''"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928ss2onc250regcdFF20sMpsfkf156Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928ss2onc250regcdFF20sMpsfkf156Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/862_863/160817/863ss2onc250_862ss2onc250zx2cregcregc862U10sMpsfkf199Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
       "(2916, 199)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua2=sio.loadmat(filename)\n",
    "DTroi=Ua2['TSzmapo']\n",
    "DTroi.shape"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/862_863/160817/863ss2onc250_862ss2onc250zx2cregcregc862U10sMpsfkf199Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/10003_10004ss2/10003-10004psfkf300Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/10003_10004ss2/10003-10004psfkf300Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/10003_10004ss2/10003_10004ss2Registration/10003-10004JFRCTransformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100632series/100632/100632seriespreprocessed238Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100632series/100632/100632seriespreprocessed238Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100632series/100632seriesRegistration/Mask100632seriespreprocessed238Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename3 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/ArclightCombo/100632series/100632seriesRegistration/100632JFRCTransformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie2/100106/100106Final/100106Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
       "(189, 125, 10)"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100234/100234/100234ss2cregcdFF20sMpsfkfint350Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100234/100234/100234ss2cregcdFF20sMpsfkfint350Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/panNeuronalGCaMP62/FreeBehavior/100234/100234/100234Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
       "(168, 111, 11)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "print(nimt.get_data().shape)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
=================
3579568
count:1
       "(168, 111, 36)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/DataPaper/100135/100135ss2oncregcdFF20skf99Smith0_4_60TSint.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/DataPaper/100135/100135ss2oncregcdFF20skf99Smith0_4_60TSzmapint.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/DataPaper/100135/100135ss2oncregcdFF20skf99Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/DataPaper/100135/Behavior/100135Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/DataPaper/100135/Registration/JFRC100135Transformedseparate.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
       "(138, 83, 26)"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100133/old/100133Final/100133ss2on250cregcdFF30sMpsfkfint599Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100133/old/100133Final/100133ss2on250cregcdFF30sMpsfkfint599Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100133/old/100133Final/100133Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100133/100133Registration/JFRC100133Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
       "(180, 97, 10)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/100632series/100633_100634/100633cregcdFF20spsfkf-50toendconcat202Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/100632series/100633_100634/100633cregcdFF20spsfkf-50toendconcat202Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/100632series/100633_100634Behavior.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/975/975ss1_1000cregcdFF20spsfkf93Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/975/975ss1_1000cregcdFF20spsfkf93Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/975/975Behavior.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/975/combo_2015-07-01-155610-0000TimeOnVid.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100609/100609Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100609/100609Registration/JFRC100609Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60TSzmap.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/100051/100051ResizedMapsfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
       "(92, 44, 11)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=NiftiImage(filenamet)\n",
    "Dtemp=np.squeeze(nimt.data.T)\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100106/100106Final/100106ss2on500cregcdFF20sMpsfkfint169Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100106/100106Final/100106ss2on500cregcdFF20sMpsfkfint169Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100106/100106Registration/JFRC100106TransformedseparateLargetrimmedpsf.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100106/100106Final/100106Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
=================
3579568
count:2
       "(189, 125, 35)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/100051/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/100051/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60TSzmap.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/100051/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/100051/100051/100051ResizedMapsfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
       "(92, 44, 11)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928ss1onc250regcdFF30spsfkfb190Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/928/928ss1onc250regcdFF30spsfkfb190Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/938/938ss2onc250regcdFF20sMpsfkf250Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/938/938ss2onc250regcdFF20sMpsfkf250Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/008C0665790F0763/ComboPanNeuronalGCaMP6/938/938Registration/JFRC938Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100498series/100499_100500_100501ConcatenatedStacksM308Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100498series/100499_100500_100501ConcatenatedStacksM308Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100498series/Xk499_500_501.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100498series/100498Registration/JFRC100498Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test4/ArclightCombo/100051/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test4/ArclightCombo/100051/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60TSzmap.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test4/ArclightCombo/100051/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test4/ArclightCombo/100051/100051/100051ResizedMapsfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
       "(92, 44, 11)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "()\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/100051/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/100051/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60TSzmap.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/ArclightCombo/100051/100051/100051ss1_1000regcU10sMpsfkf108Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test4/100106/100106Final/100106ss2on500cregcdFF20sMpsfkfint169Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test4/100106/100106Final/100106Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)\n",
    "Ua=sio.loadmat(filename)\n",
    "Xk=Ua['Xk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/981/981Final/981ss2onc500regcdFF40sMpsfkfint799Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/981/981Final/981ss2onc500regcdFF40sMpsfkfint799Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
   },
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/981/981registration/JFRC981Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100450/100450/100450seriespreprocessed497Smith0_4_60TSint.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100450/100450/100450seriespreprocessed497Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/1554f3a2-94a1-4cf8-ae79-8a6fef1b5f7e/FreeBehaviorPanNeuronalGCaMP6/100450/100450_100451_100452Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
       "(144, 105, 11)"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/100142/100142Final/100142ss2onc250regcdFF20sMpsfkfintAvROI.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/100142/100142Final/100142ss2onc250regcdFF20sMpsfkfint109Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test7/100142/100142Final/Xk100142.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
       "(163, 112, 9)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100498series/100499_100500_100501ConcatenatedStacksM308Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100498series/100499_100500_100501ConcatenatedStacksM308Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100498series/Xk499_500_501.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100498series/100498Registration/JFRC100498Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/100621ss2oncregcdFF20spsfkfconcat166Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/100621ss2oncregcdFF20spsfkfconcat166Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/New Volume/100621ss2series/100621ss2seriesXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:3
       "(173, 135, 11)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/ACh/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/ACh/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/ACh/100160/100160it30/100160Final/100160Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
       "(173, 110, 10)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100106/100106Final/100106ss2on500cregcdFF20sMpsfkfint169Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100106/100106Final/100106Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/FlyLFMDataSet/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/Components/TDGSB2_psfproj_dff_kf220Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test/FlyLFMDataSet/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/Components/TDGSB2_psfproj_dff_kf220Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test6/DataForSharing/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/TDGSB2Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
       "(81, 72, 10)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/THDDCGCaMP62/100135/100135Final/100135ss2c500regcdFF20sMpsfkfint101Smith0_4_60ICTSROIThresh3.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/THDDCGCaMP62/100135/100135Final/100135ss2c500regcdFF20sMpsfkfint101Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/THDDCGCaMP62/100135/100135Final/100135Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
       "(137, 87, 7)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100148/100148ss2it30/100148Final/100148ss2onc500regcdFF40sMpsfkfint300Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100148/100148ss2it30/100148Final/100148ss2onc500regcdFF40sMpsfkfint300Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100148/100148ss2it30/100148Final/100148XkV2.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100148/100148Registration/JFRC100148Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100411series/100411seriesdffkf240Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100411series/100411seriesdffkf240Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:3
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100411series/100411seriesXk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/THDDCGCaMP62/100404series/100405seriesint252Smith0_4_60ICTSROIThresh3.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/THDDCGCaMP62/100404series/100405seriesint252Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/THDDCGCaMP62/100404series/100405Xk2.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": true
=================
3579568
count:2
       "(88, 56, 37)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/ACh/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/ACh/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/ACh/100160/100160it30/100160Final/100160Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/ACh/100160/JFRC100160Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/981/981Final/981ss2onc500regcdFF40sMpsfkfint799Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/981/981Final/981ss2onc500regcdFF40sMpsfkfint799Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/981/981Final/981Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/981/981registration/JFRC981Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/ACh/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/ACh/100160/100160it30/100160Final/100160ss2cregcdFF20sMpsfkf250int179Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/ACh/100160/100160it30/100160Final/100160Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
       "(173, 110, 10)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test6/DataForSharing/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/TDGSB2_psfproj_dff_kfAvROI.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test6/DataForSharing/TH-DDC-GCaMP6SpontaneousBehavior/TDGSB2/TDGSB2_psfproj_dff_kf220Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100106/100106Final/100106ss2on500cregcdFF20sMpsfkfint169Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100106/100106Final/100106ss2on500cregcdFF20sMpsfkfint169Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100106/100106Final/100106Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
       "(189, 125, 10)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100148/100148ss2it30/100148Final/100148ss2onc500regcdFF40sMpsfkfint300Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100148/100148ss2it30/100148Final/100148ss2onc500regcdFF40sMpsfkfint300Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100148/100148ss2it30/100148Final/100148XkV2.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
       "(181, 109, 9)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "()\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/981/981Final/981ss2onc500regcdFF40sMpsfkfint799Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/981/981Final/981ss2onc500regcdFF40sMpsfkfint799Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/981/981Final/981Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
       "(181, 88, 9)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test15/THDDCGCaMP62/100135/100135Final/100135ss2c500regcdFF20sMpsfkfint101Smith0_4_60ICTSROIThresh3.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/sophie/db554c18-e3eb-41e2-afad-7de1c92bf4a5/THDDCGCaMP62/100135/100135Final/100135Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
       "(137, 87, 7)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenamet = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenamet)\n",
    "nimt=nb.load(filenamet)\n",
    "Dtemp=np.squeeze(nimt.get_data())\n",
    "Dtemp.shape"
   ]
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100133/old/100133Final/100133ss2on250cregcdFF30sMpsfkfint599Smith0_4_60TS.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100133/old/100133Final/100133ss2on250cregcdFF30sMpsfkfint599Smith0_4_60IC.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename2 = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100133/old/100133Final/100133Xk.mat\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": true
=================
3579568
count:1
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/media/test5/FreeBehaviorPanNeuronalGCaMP6/100133/100133Registration/JFRC100133Transformedfullpsftrimmed.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filenameM = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filenameM)\n",
    "img1 = nb.load(filenameM)\n",
    "Masks = img1.get_data()\n",
    "Sm=Masks.shape\n",
    "Masks=np.array(Masks)"
=================
3579568
count:2
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/sophie/Desktop/100051ss1_1000regcmini.nii\n"
     ]
    }
   ],
   "source": [
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
3579568
count:2
      "/home/sophie/Desktop/100051ss1_1000regcUmKFMNyqcentral.nii\n"
     ]
    }
   ],
   "source": [
    "from nifti import NiftiImage\n",
    "import numpy as np\n",
    "from scipy import stats\n",
    "import pylab\n",
    "# from http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog\n",
    "from Tkinter import Tk\n",
    "from tkFileDialog import askopenfilename\n",
    "\n",
    "Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing\n",
    "filename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\n",
    "print(filename)"
   ]
  },
  {
   "cell_type": "code",
=================
12007820
count:1
        assert_false(all((1,2,3,4),lambda x:x<4))

class TestNo:
    def test_no(self):
        assert_true(no((1,2,3,4),lambda x:x<1))
        assert_false(no((1,2,3,4),lambda x:x<2))

class TestTakenth:
    def test_takenth(self):
        #http://stackoverflow.com/questions/12007820/better-ways-to-get-nth-element-from-an-unsubscriptable-iterable
        from itertools import permutations
        assert_equal(nth(1000,permutations(range(10), 10)),
            (0, 1, 2, 4, 6, 5, 8, 9, 3, 7)
        )

class TestIcross:
    def test_icross(self):
        assert_equal(icross([1,2,5],[2,3]),
            [(1,2),(1,3),(2,2),(2,3),(5,2),(5,3)]
        )
=================
12093364
count:1
class TestProduct:
    def test_product(self):
        #test compatibility with itertools.product
        assert_equal(itertools2.product(),itertools.product())
        assert_equal(itertools2.product([]),itertools.product([]))
        assert_equal(itertools2.product('ABCD', 'xy'),itertools.product('ABCD', 'xy'))
        # assert_equal(itertools2.product('AB', 'wxyz'),itertools.product('AB', 'wxyz'))
        assert_equal(itertools2.product(range(2), repeat=3),itertools.product(range(2), repeat=3))

        #test case from http://stackoverflow.com/questions/12093364/cartesian-product-of-large-iterators-itertools

        g = product(itertools.permutations(range(100)),repeat=2)

        assert_equal(next(g),(range(100),range(100)))

class TestCombinationsWithReplacement:
    def test_combinations_with_replacement(self):
        assert_equal(combinations_with_replacement('ABC', 2),
            ['AA','AB','BB','AC','BC','CC'])
        assert_equal(combinations_with_replacement('AB', 4),
=================
969709
count:1
        raise SkipTest # implement your test here

class TestIscallable:
    def test_iscallable(self):
        # assert_equal(expected, iscallable(f))
        raise SkipTest # implement your test here

class TestIntersect:
    def test_intersect(self):
        # http://stackoverflow.com/questions/969709/joining-a-set-of-ordered-integer-yielding-python-iterators
        postings = [[1,   100, 142, 322, 12312],
            [2,   100, 101, 322, 1221],
            [100, 142, 322, 956, 1222]]

        assert_equal(intersect(*postings),[100, 322])

class TestKeep:
    @classmethod
    def setup_class(self):
        l=[1,2,3,4,5,6,7,8,9]
=================
1019040
count:1
     "output_type": "stream",
     "text": [
      "A000004 (0,0,0,0,0,0,0,0,0,0,... ...) The zero sequence\n",
      "A000005 (1,2,2,3,2,4,2,4,3,4,... ...) d(n) (also called tau(n) or sigma_0(n)), the number of divisors of n.\n",
      "A000006 (1,1,2,2,3,3,4,4,4,5,... ...) Integer part of square root of n-th prime.\n",
      "A000007 (1,0,0,0,0,0,0,0,0,0,... ...) The characteristic function of 0: a(n) = 0^n.\n",
      "A000009 (1,1,1,2,2,3,4,5,6,8,... ...) Expansion of Product_{m >= 1} (1 + x^m);     number of partitions of n into distinct parts;     number of partitions of n into odd parts (if n > 0). \n",
      "A000010 (1,1,2,2,4,2,6,4,6,4,... ...) Euler totient function\n",
      "\n",
      "    :see: http://stackoverflow.com/questions/1019040/how-many-numbers-below-n-are-coprimes-to-n\n",
      "    \n",
      "A000027 (1,2,3,4,5,6,7,8,9,10,... ...) The positive integers.\n",
      "A000040 (2,3,5,7,11,13,17,19,23,29,... ...) The prime numbers\n",
      "A000041 (1,1,2,3,5,7,11,15,22,30,... ...) number of partitions of n (the partition numbers)\n",
      "A000043 (2,3,5,7,13,17,19,31,61,89,... ...) Mersenne exponents: primes p such that 2^p - 1 is prime.\n",
      "A000045 (0,1,1,2,3,5,8,13,21,34,... ...) Fibonacci numbers: F(n) = F(n-1) + F(n-2) with F(0) = 0 and F(1) = 1\n",
      "A000079 (1,2,4,8,16,32,64,128,256,512,... ...) Powers of 2: a(n) = 2^n.\n",
      "A000108 (1,1,2,5,14,42,132,429,1430,4862,... ...) Catalan numbers: C(n) = binomial(2n,n)/(n+1) = (2n)!/(n!(n+1)!).\n",
      "    \n",
      "A000110 (1,1,2,5,15,52,203,877,4140,21147,... ...) \n",
=================
807863
count:1
        elif _DEBUG:
            logging.info('%s timeout after %d loops' % (name, i))
    finally:
        f.timeout = timeout  # restore Sequence's timeout


def data(s):
    s2 = s[1:]

    # http://stackoverflow.com/questions/807863/how-to-output-list-of-floats-to-a-binary-file-in-python
    try:
        return database[s]
    except IndexError:
        pass

    from urllib.request import urlopen
    try:  # is there a local, patched file ?
        file = open('b%s.txt' % s2, 'r')
        logging.warning('reading b%s.txt' % s2)
    # FileNotFoundError (not defined in Py2.7) download the B-file from OEIS
=================
32899
count:1

    @classmethod
    def teardown_class(cls):
        global slow
        print('slower Sequences:')
        slow.sort()
        for (i, name, desc) in slow:
            print(i, name, desc)

    # http://stackoverflow.com/questions/32899/how-to-generate-dynamic-parametrized-unit-tests-in-python
    # http://nose.readthedocs.org/en/latest/writing_tests.html
    # this is ABSOLUTELY FANTASTIC !
    def test_generator(self):
        for name in sorted(oeis.keys()):  # test in sorted order to spot slows faster
            logging.info(name)
            time_limit = 0.1  # second
            from functools import partial
            f = partial(assert_generator, oeis[name], data(
                name), name, time_limit)
            f.description = str(oeis[name]) + '\n'
=================
41115661
count:1


def friedman(num):
    for e in gen(num):
        try:
            # cope with potential rounding problems
            n = math2.int_or_float(e())
            if n == num and str(e) != str(num):  # concat is too easy ...
                yield (num, e)
        except GeneratorExit:  # https://stackoverflow.com/a/41115661/1395973
            return
        except:
            pass


if __name__ == "__main__":
    n=list(range(1,30,2))
    for e in seq(n,[],'+',False):
        print(e)
        
=================
40309602
count:1
onesecond = timedelta(seconds=1)
oneminute = timedelta(minutes=1)
onehour = timedelta(hours=1)
oneday = timedelta(days=1)
oneweek = timedelta(weeks=1)
datemin = date(year=dt.MINYEAR, month=1, day=1)
midnight = time()

# regexes
# https://stackoverflow.com/a/40309602/1395973
# https://regex101.com/r/NUZS1Z/2
rdatesep = '[^\w\d\r\n:]'
ryear = '(\d{4}|\d{2})'
rmonth = '(0?[1-9]|1[0-2])'
rday = '(0?[1-9]|[12]\d|30|31)'
rdateany = '(\b'+rday+rdatesep+rmonth+rdatesep+ryear + \
    '\b)|(\b'+rmonth+rdatesep+rday+rdatesep+ryear+'\b)'


def datetimef(d, t=None, fmt='%Y-%m-%d'):
=================
21074460
count:1
    * or a string in timedelta str() output format
    """
    if isinstance(t, timedelta):
        return t
    if isinstance(t, time):
        return time_sub(t, midnight)
    elif isinstance(t, (int, float)):
        return timedelta(days=t)

    # https://stackoverflow.com/a/21074460/1395973
    if fmt is None:
        fmt = '(%D day[s]?[,]? )?%H:%M:%S*'
    m = re.match(fmt2regex(fmt), t)
    if m is None:
        raise ValueError('"%s" does not match fmt=%s' % (t, fmt))
    m = m.groupdict()
    d = {key: float(value) for key, value in m.items() if value is not None}
    td = timedelta(**d)
    return td

=================
333995
count:1
import os
import io
import sys
import logging
import base64
import matplotlib

if os.getenv('TRAVIS'):  # are we running https://travis-ci.org/ automated tests ?
    matplotlib.use('Agg')  # Force matplotlib  not to use any Xwindows backend
elif sys.gettrace():  # http://stackoverflow.com/questions/333995/how-to-detect-that-python-code-is-being-executed-through-the-debugger
    matplotlib.use('Agg')  # because 'QtAgg' crashes python while debugging
else:
    pass
    # matplotlib.use('pdf') #for high quality pdf, but doesn't work for png, svg ...

logging.info('matplotlib backend is %s' % matplotlib.get_backend())


class Plot(object):
    """base class for plotable rich object display on IPython notebooks
=================
3721249
count:1

def in_interval(interval, x, closed=True):
    """:return: bool True if x is in interval [a,b] or [b,a] (tuple)"""
    a, b = _order(interval)
    return (a <= x <= b) if closed else (a <= x < b)


def intersect(t1, t2):
    """:return: bool True if intervals [t1[ [t2[ intersect"""
    '''http://stackoverflow.com/questions/3721249/python-date-interval-intersection'''
    t1start, t1end = _order(t1)
    t2start, t2end = _order(t2)
    return (t1start <= t2start < t1end) or (t2start <= t1start < t2end)


def intersection(t1, t2):
    """:return: tuple intersection between 2 intervals (tuples), 
    or None if intervals don't intersect"""
    t1start, t1end = _order(t1)
    t2start, t2end = _order(t2)
=================
5928725
count:1

from math import pi, sin, cos, atan2, sqrt, hypot, copysign
from Goulib import math2, itertools2

rel_tol = 1e-6  # relative tolerance used in isclose comparisons


def _hash(v):
    """hash function for vectors"""
    # http://stackoverflow.com/questions/5928725/hashing-2d-3d-and-nd-vectors
    primes = [73856093, 19349663, 83492791]
    res = 0
    for x, p in zip(v, primes):
        res = res ^ int(x*p)  # ^ is xor
    return res


copy = copier.deepcopy

# Geometry
=================
3349125
count:1
    return [p1, p2]


def _intersect_circle_circle(c1, c2):
    """Circle/Circle intersection
    :param c1: Line2 (or derived class)
    :param c2: Circle (or derived class)
    :return: None, single Point2, [Point2,Point2] or smallest Circle if inscribed
    """
    # http://stackoverflow.com/questions/3349125/circle-circle-intersection-points

    v = c2.c-c1.c  # vector between centers

    d = v.mag()
    if d > (c1.r+c2.r):  # disjoint
        return None

    if d <= abs(c1.r-c2.r):  # one circle is inside the other.
        return c1 if c1.r <= c2.r else c2

=================
849211
count:1
    p = c1.c+x*v
    if math2.isclose(y, 0):
        return p

    v = v.cross()
    return [p+y*v, p-y*v]


def _connect_point2_line2(P, L):
    # http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment
    d = L.v.mag2()
    if d == 0:  # L is degenerate to a point
        return Segment2(P, L.p)
    u = (L.v.dot(P-L.p))/d
    if not L._u_in(u):
        u = math2.sat(u, 0, 1)
    return Segment2(P, L.point(u))


def _connect_point2_circle(P, C):
=================
27673463
count:1
    return x, y


def circle_from_3_points(a, b, c):
    """
    constructs Circle passing through 3 distinct points
    :param a,b,c: Point2 
    :return: the unique Circle through the three points a, b, c 
    """
    # future generalization : http://stackoverflow.com/questions/27673463/smallest-enclosing-circle-in-python-error-in-the-code
    x, y = _center_of_circle_from_3_points(a, b, c)
    return Circle((x, y), hypot(x - a.x, y - a.y))


def arc_from_3_points(a, b, c):
    """
    constructs Arc2 starting in a, going through b and ending in c
    :param a,b,c: Point2 
    :return: the unique Arc2 starting in a, going through b and ending in c
    """
=================
1336663
count:1

    def bbox(self):
        """
        :return: :class:`BBox` bounding box of Entity"""
        if isinstance(self, Point2):
            return BBox(self, self)
        elif isinstance(self, Segment2):
            return BBox(self.start, self.end)
        elif isinstance(self, Arc2):
            # http://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector
            res = BBox(self.p, self.p2)
            p = self.c + Vector2(self.r, 0)
            if p in self:
                res += p
            p = self.c + Vector2(-self.r, 0)
            if p in self:
                res += p
            p = self.c + Vector2(0, self.r)
            if p in self:
                res += p
=================
15857818
count:1
        for page in PDFPage.create_pages(document):
            interpreter.process_page(page)
            break  # handle one page only
        return

    def read_svg(self, content, **kwargs):
        """appends svg content to drawing
        :param content: string, either filename or svg content
        """
        # from http://stackoverflow.com/questions/15857818/python-svg-parser
        from svg.path import parse_path
        import tinycss
        from xml.dom import minidom
        try:
            doc = minidom.parse(content)  # parseString also exists
        except IOError:
            doc = minidom.parseString(content.encode('utf-8'))

        styles = {}

=================
5491708
count:1
import operator

from itertools import count, tee, islice, chain
from Goulib import itertools2, decorators, tests


class Record(OrderedDict):
    """mimics a Pascal record or a C struct"""

    # https://stackoverflow.com/a/5491708/1395973
    def __init__(self, *args, **kwargs):
        super(Record, self).__init__(*args, **kwargs)
        self._initialized = True

    def __getattr__(self, name):
        try:
            return self[name]
        except KeyError:
            raise AttributeError(name)

=================
4187185
count:1
        if not isclose(x, y, rel_tol=rel_tol, abs_tol=abs_tol):
            return False
    return True

# basic useful functions


def is_number(x):
    ''':return: True if x is a number of any type, including Complex'''
    # http://stackoverflow.com/questions/4187185/how-can-i-check-if-my-python-object-is-a-number
    return isinstance(x, numbers.Number)


def is_complex(x):
    return isinstance(x, complex)


def is_real(x):
    return is_number(x) and not is_complex(x)

=================
40190849
count:1
    also known as the reduced totient function or the least universal exponent function.
    '''
    coprimes = [x for x in range(1, n) if gcd(x, n) == 1]
    k = 1
    while not all(pow(x, k, n) == 1 for x in coprimes):
        k += 1
    return k

# https://en.wikipedia.org/wiki/Primitive_root_modulo_n
# code decomposed from http://stackoverflow.com/questions/40190849/efficient-finding-primitive-roots-modulo-n-using-python


def is_primitive_root(x, m, s={}):
    '''returns True if x is a primitive root of m

    :param s: set of coprimes to m, if already known
    '''
    if not s:
        s = {n for n in range(1, m) if coprime(n, m)}
    return {pow(x, p, m) for p in range(1, m)} == s
=================
15390807
count:1
        return cmath.sqrt(n)
    return math.sqrt(n)


def isqrt(n):
    '''integer square root

    :return: largest int x for which x * x <= n
    '''
    # http://stackoverflow.com/questions/15390807/integer-square-root-in-python
    # https://projecteuler.net/thread=549#235536
    n = int(n)
    x = n
    y = (x + 1) // 2
    while y < x:
        x = y
        y = (x + n // x) // 2
    return x


=================
11316539
count:1


def hamming(s1, s2):
    '''Calculate the Hamming distance between two iterables'''
    return sum(c1 != c2 for c1, c2 in zip(s1, s2))


def sets_dist(a, b):
    '''
    :see: http://stackoverflow.com/questions/11316539/calculating-the-distance-between-two-unordered-sets
    '''
    c = a.intersection(b)
    return sqrt(len(a - c) * 2 + len(b - c) * 2)


def sets_levenshtein(a, b):
    '''levenshtein distance on sets

    :see: http://en.wikipedia.org/wiki/Levenshtein_distance
    '''
=================
28549402
count:1


def kfibonacci(k, mod=0):
    ''' k-fibonacci series n-th element

    :param k: int number of consecutive terms to add
    :param mod: int optional modulo
    :return: function(n) returning the n-th element
    '''
    # http://stackoverflow.com/a/28549402/1395973
    # uses http://mathworld.wolfram.com/FibonacciQ-Matrix.html
    mat = identity(k - 1)
    for row in mat:
        row.append(0)
    mat.insert(0, [1] * k)
    return lambda n: mod_matpow(mat, n, mod)[0][k - 1]


def fibonacci(n, mod=0):
    ''' fibonacci series n-th element
=================
1019040
count:1
        if q > 1:
            return 0
        res = -res
    return res


def euler_phi(n):
    '''Euler totient function

    :see: http://stackoverflow.com/questions/1019040/how-many-numbers-below-n-are-coprimes-to-n
    '''
    if n <= 1:
        return n
    return int(mul((1 - 1.0 / p for p, _ in factorize(n)), n))


totient = euler_phi  # alias. totient is available in sympy


def kempner(n):
=================
36531120
count:1
    :return: nth repunit
    '''
    if n == 0:
        return 0
    if digit == 1:
        return (base ** n - 1) // (base - 1)
    return int(str(digit) * n, base)

# repeating decimals https://en.wikipedia.org/wiki/Repeating_decimal
# https://stackoverflow.com/a/36531120/1395973


def rational_form(numerator, denominator):
    '''information about the decimal representation of a rational number.

    :return: 5 integer : integer, decimal, shift, repeat, cycle

    * shift is the len of decimal with leading zeroes if any
    * cycle is the len of repeat with leading zeroes if any
    '''
=================
28548457
count:1
    '''
    # http://l34rn-p14y.blogspot.it/2013/11/baby-step-giant-step-algorithm-python.html
    s = int(math.ceil(math.sqrt(n)))
    A = [y * pow(a, r, n) % n for r in range(s)]
    for t in range(1, s + 1):
        value = pow(a, t * s, n)
        if value in A:
            return (t * s - A.index(value)) % n

# inspired from http://stackoverflow.com/questions/28548457/nth-fibonacci-number-for-n-as-big-as-1019


def mod_matmul(A, B, mod=0):
    if not mod:
        return dot_mm(A, B)
    return [[sum(a * b for a, b in zip(A_row, B_col)) % mod for B_col in zip(*B)] for A_row in A]


def mod_matpow(M, power, mod=0):
    if power < 0:
=================
22281524
count:1


def lucky_gen():
    '''
    generates lucky numbers
    :see: https://en.wikipedia.org/wiki/Lucky_number
    :see: https://oeis.org/A000959
    '''

    # https://stackoverflow.com/a/22281524/1395973

    def _idx_after_removal(removed_indices, value):
        for removed in removed_indices:
            value -= value // removed
        return value

    def _should_be_excluded(removed_indices, value):
        for j in range(len(removed_indices) - 1):
            value_idx = _idx_after_removal(removed_indices[:j + 1], value)
            if value_idx % removed_indices[j + 1] == 0:
=================
1055360
count:1
def identity(x):
    """Do nothing and return the variable untouched"""
    return x


def isiterable(obj):
    """
    :result: bool True if obj is iterable (but not a string)
    """
    # http://stackoverflow.com/questions/1055360/how-to-tell-a-variable-is-iterable-but-not-a-string
    if isinstance(obj, str):
        return False  # required since Python 3.5
    return isinstance(obj, collections.Iterable)


def iscallable(f):
    return isinstance(f, collections.Callable)


def any(seq, pred=bool):
=================
2158395
count:1


def flatten(l, donotrecursein=str):
    """iterator to flatten (depth-first) structure

    :param l: iterable structure
    :param donotrecursein: iterable types in which algo doesn't recurse
                           string type by default
    """
    # http://stackoverflow.com/questions/2158395/flatten-an-irregular-list-of-lists-in-python
    if isinstance(l, dict):
        l = l.values()
    for el in l:
        if not isinstance(el, collections.Iterable):
            yield el
        elif isinstance(el, donotrecursein):
            yield el
        else:
            for sub in flatten(el, donotrecursein):
                yield sub
=================
15099647
count:1
    # https://docs.python.org/2/library/html#recipes
    return next(itertools.islice(iterable, n, n + 1), default)


nth = takenth


def icross(*sequences):
    """Cartesian product of sequences (recursive version)"""
    # http://stackoverflow.com/questions/15099647/cross-product-of-sets-using-recursion
    if sequences:
        for x in sequences[0]:
            for y in icross(*sequences[1:]):
                yield (x,) + y
    else:
        yield ()


def quantify(iterable, pred=bool):
    """
=================
7946798
count:1
    return sum(map(pred, iterable), 0)


def interleave(l1, l2):
    """
    :param l1: iterable
    :param l2: iterable of same length, or 1 less than l1
    :result: iterable interleaving elements from l1 and l2, starting by l1[0]
    """
    # http://stackoverflow.com/questions/7946798/interleaving-two-lists-in-python-2-2
    res = l1 + l2
    res[::2] = l1
    res[1::2] = l2
    return res


def shuffle(ary):
    """
    :param: array to shuffle by Fisher-Yates algorithm
    :result: shuffled array (IN PLACE!)
=================
6422700
count:1
            if i > n:
                break  # end
            yield x


def sort_indexes(iterable, key=identity, reverse=False):
    """
    :return: iterator over indexes of iterable that correspond to the sorted iterable
    """
    # http://stackoverflow.com/questions/6422700/how-to-get-indices-of-a-sorted-array-in-python
    return [i[0] for i in sorted(enumerate(iterable), key=lambda x:key(x[1]))]

# WARNING : filter2 has been renamed from "split" at v.1.7.0 for coherency


def filter2(iterable, condition):
    """ like `python.filter` but returns 2 lists :
    - list of elements in iterable that satisfy condition
    - list of those that don't
    """
=================
5352649
count:1
    def __iter__(self):
        return self


def subdict(d, keys):
    """extract "sub-dictionary"
    :param d: dict
    :param keys: container of keys to extract:
    :result: dict:
    :see: http://stackoverflow.com/questions/5352546/best-way-to-extract-subset-of-key-value-pairs-from-python-dictionary-object/5352649#5352649
    """
    return dict([(i, d[i]) for i in keys if i in d])


class SortingError(Exception):
    pass


def ensure_sorted(iterable, key=None):
    """ makes sure iterable is sorted according to key
=================
969709
count:1

merge = heapq.merge


def intersect(*iterables):
    """ generates itersection of N iterables

    :param iterables: any number of SORTED iterables
    :yields: elements that belong to all iterables
    :see: http://stackoverflow.com/questions/969709/joining-a-set-of-ordered-integer-yielding-python-iterators
    """

    for key, values in itertools.groupby(heapq.merge(*iterables)):
        if len(list(values)) == len(iterables):
            yield key


def product(*iterables, **kwargs):
    """ Cartesian product of (infinite) input iterables.

=================
12093364
count:1
        if len(list(values)) == len(iterables):
            yield key


def product(*iterables, **kwargs):
    """ Cartesian product of (infinite) input iterables.

    :param iterables: any number of iterables
    :param repeat: integer optional number of repetitions
    :see: http://stackoverflow.com/questions/12093364/cartesian-product-of-large-iterators-itertools
    """
    # https://github.com/enricobacis/infinite/blob/master/infinite/product.py
    # is not general enough

    def empty():
        yield ()

    if len(iterables) == 0:
        return empty()

=================
9819602
count:1

        v = self.data
        f = self.fmt

        style = args.get('style', {})
        if isinstance(style, str):
            style = markup.style_str2dict(style)

        # create style dict by merging default Cell style + parameters
        # http://stackoverflow.com/questions/9819602/union-of-dict-objects-in-python
        style = dict(self.style, **style)

        if hasattr(v, '_repr_html_'):
            try:
                v = v._repr_html_()
            except Exception as e:
                v = 'ERROR : %s _repr_html_ failed : %s' % (v, e)

        elif 'text-align' not in style:  # HTML 4 and before
            a = args.pop('align', self.align)
=================
3124155
count:1
    def assertEqual(self, first, second, places=7, msg=None, delta=None, reltol=None):
        """automatically calls assertAlmostEqual when needed
        :param first, second: objects to compare for (quasi) equality
        :param places: int number of digits to consider in float comparisons.
                        If None, forces strict equality
        :param msg: optional string error message to display in case of failure
        :param delta: optional float absolute tolerance value
        :param reltol: optional float relative tolerance value
        """
        # inspired from http://stackoverflow.com/a/3124155/190597 (KennyTM)
        import collections

        if delta is None:
            if places is None or (isinstance(first, self.base_types) and isinstance(second, self.base_types)):
                return super(TestCase, self).assertEqual(first, second, msg=msg)

        else:
            places = None

        if (isinstance(first, collections.Iterable) and isinstance(second, collections.Iterable)):
=================
15411967
count:1
    return display(HTML(tag('h3',html(args))))

def h4(*args):
    return display(HTML(tag('h4',html(args))))

def h(*args):
    return display(HTML(html(args)))

#redefine "print" for notebooks ...
try: #http://stackoverflow.com/questions/15411967/how-can-i-check-if-code-is-executed-in-the-ipython-notebook
    get_ipython #is defined from within IPython (notebook)
except:
    pass
else:
    pass #for pythoscope
    # print = h # this is ok in Python 3, but not before

def hinfo(*args):
    return display(HTML(tag('div',html(args),style="background-color:#337ab7;color:#ffffff")))
def hsuccess(*args):
=================
3403973
count:1
            im = self.convert('P', colors=maxcolors)
        count = np.bincount(im.array.flatten())
        return zip(count, im.palette)  # return palette KEYS

    def replace(self, pairs):
        """replace a color by another
        currently works only for indexed color images
        :param pairs: iterable of (from,to) ints
        """
        # http://stackoverflow.com/questions/3403973/fast-replacement-of-values-in-a-numpy-array
        assert (self.mode == 'P')  # TODO: support other modes
        a = np.copy(self.array)
        for c in pairs:
            self.array[a == c[0]] = c[1]
        return self

    def optimize(self, maxcolors=256):
        """remove unused colors from the palette
        """
        assert (self.mode == 'P')
=================
9829578
count:1
        def h(im):
            return [im.average_hash, im.perceptual_hash][method](hash_size)
        
        h1 = h(self)

        def diff(im):
            h2 = h(im)
            if h1 == h2:
                return 0
            # http://stackoverflow.com/questions/9829578/fast-way-of-counting-non-zero-bits-in-python
            d = bin(h1 ^ h2).count("1")  # ^is XOR
            return 2 * d / (hash_size * hash_size)
        
        d=diff(other)

        if d==0 or not symmetries:
            return d

        other = other.thumb  # generated at _hash_prepare above

=================
7422204
count:1
        if method is None:
            method = FLOYDSTEINBERG
        a = dither(self.array, method, N=n)
        if n == 2:
            return Image(a, '1')
        else:
            return Image(a / (n - 1), 'F')

    def normalize(self, newmax=None, newmin=None):
        # http://stackoverflow.com/questions/7422204/intensity-normalization-of-image-using-pythonpil-speed-issues
        # warning : this normalizes each channel independently, so we don't use @adapt_rgb here
        newmax = newmax or modes[self.mode].max
        newmin = newmin or modes[self.mode].min
        arr = normalize(self.array, newmax, newmin)
        return Image(arr)

    @adapt_rgb
    def filter(self, f):
        try:  # scikit-image filter or similar ?
            a = f(self.array)
=================
9166400
count:1
                return Image(a * d1 + b * d2, mode)
            else:
                return Image(a * d1, mode)
        else:
            return Image(b * d2, mode)

    def add(self, other, pos=(0, 0), alpha=1, mode=None):
        """ simply adds other image at px,py (subbixel) coordinates
        """
        # TOD: use http://stackoverflow.com/questions/9166400/convert-rgba-png-to-rgb-with-pil
        if self.npixels == 0:
            return Image(other * alpha)
        px, py = pos
        assert px >= 0 and py >= 0
        im1, im2 = self, other
        size = (max(im1.size[0], int(im2.size[0] + py + 0.999)),
                max(im1.size[1], int(im2.size[1] + px + 0.999)))
        if not im1.mode:  # empty image
            im1.mode = im2.mode
        im1 = im1.expand(size, 0, 0)
=================
9166671
count:1
    def __div__(self, f):
        return self * (1 / f)

    __truediv__ = __div__


def alpha_composite(front, back):
    """Alpha composite two RGBA images.

    Source: http://stackoverflow.com/a/9166671/284318

    Keyword Arguments:
    front -- PIL RGBA Image object
    back -- PIL RGBA Image object

    The algorithm comes from http://en.wikipedia.org/wiki/Alpha_compositing

    """
    front = np.asarray(front)
    back = np.asarray(back)
=================
9168169
count:1


def pure_pil_alpha_to_color_v1(image, color=(255, 255, 255)):
    """Alpha composite an RGBA Image with a specified color.

    NOTE: This version is much slower than the
    alpha_composite_with_color solution. Use it only if
    numpy is not available.

    Source: http://stackoverflow.com/a/9168169/284318

    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)

    """

    def blend_value(back, front, a):
        return (front * a + back * (255 - a)) / 255

=================
9459208
count:1

    return im


def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):
    """Alpha composite an RGBA Image with a specified color.

    Simpler, faster version than the solutions above.

    Source: http://stackoverflow.com/a/9459208/284318

    Keyword Arguments:
    image -- PIL RGBA Image object
    color -- Tuple r, g, b (default 255, 255, 255)

    """
    image.load()  # needed for split()
    background = Image.new('RGB', image.size, color)
    background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
    return background
=================
7422204
count:1
    """mimics the Matlab image toolbox fspecial function
    http://www.mathworks.com/help/images/ref/fspecial.html?refresh=true
    """
    if name == 'disk':
        return disk(kwargs.get('radius', 5))  # 5 is default in Matlab
    raise NotImplementedError()


def normalize(a, newmax=255, newmin=0):
    # http://stackoverflow.com/questions/7422204/intensity-normalization-of-image-using-pythonpil-speed-issues
    # warning : don't use @adapt_rgb here as it would normalize each channel independently
    array = np.array(a)
    t = array.dtype
    if len(array.shape) == 2:  # single channel
        n = 1
        minval = array.min()
        maxval = array.max()
        array += newmin - minval
        if maxval is not None and minval != maxval:
            array = array.astype(np.float)
=================
10818546
count:1
    return kmeans(im, ncolors)[0]


def lab2ind(im, colors=256):
    """convert a Lab image to indexed colors
    :param a: nparray (x,y,n) containing image
    :param colors: int number of colors or predefined Palette
    :ref: http://scikit-learn.org/stable/auto_examples/cluster/plot_color_quantization.html
    """
    # http://stackoverflow.com/questions/10818546/finding-index-of-nearest-point-in-numpy-arrays-of-x-and-y-coordinates
    if isinstance(colors, int):
        p = palette(im, colors)  #
        pal = [Gcolors.Color(c, 'lab') for c in p]
    else:
        pal = colors
        p = [c.lab for c in flatten(pal)]
    w, h, d = im.shape
    s = w * h  # number of pixels
    flat = np.reshape(im, (s, d))
    from scipy.spatial import cKDTree as KDTree  # compiled is MUCH faster
=================
2371436
count:1
simple symbolic math expressions
'''

__author__ = "Philippe Guglielmetti, J.F. Sebastian, Geoff Reedy"
__copyright__ = "Copyright 2013, Philippe Guglielmetti"
__credits__ = [
    'http://stackoverflow.com/questions/2371436/evaluating-a-mathematical-expression-in-a-string',
    'http://stackoverflow.com/questions/3867028/converting-a-python-numeric-expression-to-latex',
]
__license__ = "LGPL"

import logging
import copy
import collections
import inspect
import re
import ast
=================
3867028
count:1
simple symbolic math expressions
'''

__author__ = "Philippe Guglielmetti, J.F. Sebastian, Geoff Reedy"
__copyright__ = "Copyright 2013, Philippe Guglielmetti"
__credits__ = [
    'http://stackoverflow.com/questions/2371436/evaluating-a-mathematical-expression-in-a-string',
    'http://stackoverflow.com/questions/3867028/converting-a-python-numeric-expression-to-latex',
]
__license__ = "LGPL"

import logging
import copy
import collections
import inspect
import re
import ast
import math
=================
2371436
count:1
import re
import ast
import math
import operator as op
from sortedcollections import SortedDict

from Goulib import plot  # sets matplotlib backend
from Goulib import itertools2, math2

# http://stackoverflow.com/questions/2371436/evaluating-a-mathematical-expression-in-a-string
# https://github.com/erwanp/pytexit

# indexes in _operators, _ functions and _constants to use for corresponding symbols
_dialect_str = 2
_dialect_python = 3
_dialect_latex = 4


class Context:
    constants = {  # constants in this dict are recognized in output
=================
3867028
count:1
            try:
                res += _node_complexity(node.right)
            except AttributeError:
                pass
            return res

        return _node_complexity(self.body)


# http://stackoverflow.com/questions/3867028/converting-a-python-numeric-expression-to-latex

class TextVisitor(ast.NodeVisitor):

    def __init__(self, dialect, context=default_context):
        ''':param dialect: int index in _operators of symbols to use
        '''
        self.dialect = dialect
        self.context = context

    def prec(self, op):
=================
14088375
count:1
def hex2rgb(c, illuminant='ignore'):
    return mplcolors.hex2color(c)


def rgb2cmyk(rgb, **kwargs):
    """
    :param rgb: 3-tuple of floats of red,green,blue in [0..1] range
    :return: 4-tuple of floats (cyan, magenta, yellow, black) in [0..1] range
    """
    # http://stackoverflow.com/questions/14088375/how-can-i-convert-rgb-to-cmyk-and-vice-versa-in-python

    r, g, b = rgb

    c = 1 - r
    m = 1 - g
    y = 1 - b

    k = min(c, m, y)
    if k == 1:
        return (0, 0, 0, 1)
=================
11174702
count:1
                return True
        # difference not perceptible to human eye
        return self.isclose(other, 1)


class Palette(OrderedDict):
    """dict of Colors indexed by anything"""

    def __init__(self, data=[], keys=256):
        # mandatory http://stackoverflow.com/questions/11174702/how-to-subclass-an-ordereddict
        super(Palette, self).__init__()
        if data:
            self.update(data, keys)

    def update(self, data, keys=256):
        """updates the dictionary with new colors
        :param data: colors to add
        :param keys: keys to use in dict, or int to discretize the Colormap
        """
        if isinstance(data, mplcolors.Colormap):
=================
8031418
count:1
        res = []
        for c in self.values():
            r, g, b = c.rgb
            res.append(math2.rint(r * 255))
            res.append(math2.rint(g * 255))
            res.append(math2.rint(b * 255))
        return res

    def sorted(self, key=lambda c: c[1].lab[0]):
        # http://stackoverflow.com/questions/8031418/how-to-sort-ordereddict-of-ordereddict-python
        return Palette(dict(sorted(self.items(), key=key)))


def ColorTable(colors, key=None, width=10):

    def tooltip(c):
        return '\n'.join('%s = %s' % (k, v) for k, v in c._values.items())

    labels = (color['black'], color['white'])  # possible colors for labels
    t = []
=================
876853
count:1
    :return: nearest Color of x in  l
    """
    if not isinstance(c, Color):
        c = Color(c)
    l = l or color
    if isinstance(l, dict):
        l = l.values()
    return opt(l, key=lambda c2: comp(c, c2))

# http://stackoverflow.com/questions/876853/generating-color-ranges-in-python


def color_range(n, start, end, space='hsv'):
    """:param n: int number of colors to generate
    :param start: string hex color or color name
    :param end: string hex color or color name
    :result: list of n Color interpolated between start and end, included
    """

    start = Color(start).convert(space)
=================
279237
count:4

# Test whether a retained PUBLISH to a topic with QoS 0 is sent with
# retain=false to an already subscribed client.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
mid = 16
connect_packet = mosq_test.gen_connect("retain-qos0-fresh-test", keepalive=keepalive)
=================
279237
count:8
import ssl
import sys
import time

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

import inspect, os
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-success-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:12
import socket
import ssl
import sys

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

import inspect, os
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-success-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a connection is successful with correct username and password
# when using a simple auth_plugin.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="test-username", password="cnwTICONIURW")
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:12

# Test whether a PUBLISH to a topic with QoS 2 results in the correct packet flow.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a UNSUBSCRIBE to a topic with QoS 0 results in the correct UNSUBACK packet.
# This doesn't assume a subscription exists.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 53
keepalive = 60
connect_packet = mosq_test.gen_connect("unsubscribe-qos0-test", keepalive=keepalive)
=================
279237
count:4

# Test whether a client subscribed to a topic receives its own message sent to that topic.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 530
keepalive = 60
connect_packet = mosq_test.gen_connect("subpub-qos2-test", keepalive=keepalive)
=================
279237
count:4
import ssl
import sys
import time

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

import inspect, os
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-no-identity-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=4)
=================
279237
count:4

import subprocess
import socket

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3265
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qos1-disco-test", keepalive=keepalive, clean_session=False)
=================
279237
count:4

# Test whether a SUBSCRIBE to a topic with QoS 2 results in the correct SUBACK packet.

import subprocess

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3265
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qo2-timeout-test", keepalive=keepalive)
=================
279237
count:4

# Test whether a retained PUBLISH to a topic with QoS 1 is retained.
# Subscription is made with QoS 0 so the retained message should also have QoS
# 0.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("retain-qos1-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a clean session client has a QoS 1 message queued for it.

import subprocess

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 109
keepalive = 60
connect_packet = mosq_test.gen_connect("clean-qos2-test", keepalive=keepalive, clean_session=False)
=================
279237
count:4

# Test whether a SUBSCRIBE to a topic with QoS 1 results in the correct SUBACK packet.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 79
keepalive = 60
connect_packet = mosq_test.gen_connect("unsubscribe-qos1-test", keepalive=keepalive)
=================
279237
count:4

# Test whether a client will is transmitted correctly.

import subprocess

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 53
keepalive = 60
connect_packet = mosq_test.gen_connect("will-qos0-test", keepalive=keepalive)
=================
279237
count:28

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4
import ssl
import sys
import time

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

import inspect, os
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-cert-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:8

# Test whether a connection is denied if it provides a correct username but
# incorrect password.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="user", password="password")
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a clean session client has a QoS 1 message queued for it.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

import subprocess
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

def pattern_test(sub_topic, pub_topic):
    rc = 1
    keepalive = 60
    connect_packet = mosq_test.gen_connect("pattern-sub-test", keepalive=keepalive)
=================
279237
count:4

# Test whether a bridge topics work correctly after reconnection.
# Important point here is that persistence is enabled.

import subprocess
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("bridge-reconnect-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a CONNECT with a zero length client id results in the correct CONNACK packet.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("", keepalive=keepalive, proto_ver=4)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3265
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qos2-disco-test", keepalive=keepalive, clean_session=False)
=================
279237
count:8
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

if ssl.OPENSSL_VERSION_NUMBER < 0x10000000:
    print("WARNING: TLS-PSK not supported on OpenSSL < 1.0")
    exit(0)


import inspect, os
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

env = dict(os.environ)
env['LD_LIBRARY_PATH'] = '../../lib:../../lib/cpp'
try:
    pp = env['PYTHONPATH']
=================
279237
count:4

# Test whether a client will is transmitted correctly with a null character in the middle.

import subprocess
import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 53
keepalive = 60
connect_packet = mosq_test.gen_connect("will-qos0-test", keepalive=keepalive)
=================
279237
count:8

# Does a bridge resend a QoS=1 message correctly after a disconnect?

import subprocess
import socket

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
client_id = socket.gethostname()+".bridge_sample"
connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+3)
=================
279237
count:4

# Test whether a PUBLISH to a topic with QoS 1 results in the correct PUBACK packet.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 19
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qos1-test", keepalive=keepalive)
=================
279237
count:4

# Test whether a PUBLISH to a topic with QoS 2 results in the correct packet
# flow. This test introduces delays into the flow in order to force the broker
# to send duplicate PUBREC and PUBCOMP messages.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 600
connect_packet = mosq_test.gen_connect("pub-qos2-timeout-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

import subprocess
import socket
import ssl

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
client_id = socket.gethostname()+".bridge_test"
connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+3)
=================
279237
count:8

# Test whether a bridge can cope with an unknown PUBACK

import socket
import subprocess
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("bridge-u-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a CONNECT with an invalid protocol number results in the correct CONNACK packet.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-invalid-test", keepalive=keepalive, proto_ver=0)
connack_packet = mosq_test.gen_connack(rc=1)
=================
279237
count:4

# Connect a client with a will, then disconnect without DISCONNECT.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive, will_topic="will/qos0/test", will_payload="will-message")
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:8

# Does a bridge resend a QoS=1 message correctly after a disconnect?

import socket

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
client_id = socket.gethostname()+".bridge_sample"
connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+3)
=================
279237
count:4

# Test whether a CONNECT with a zero length client id results in the correct CONNACK packet.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=2)
=================
279237
count:4

# Test whether a retained PUBLISH is cleared when a zero length retained
# message is published to a topic.

import socket

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("retain-clear-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a retained PUBLISH to a topic with QoS 0 is actually retained
# and delivered when multiple sub/unsub operations are carried out.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
mid = 16
connect_packet = mosq_test.gen_connect("retain-qos0-rep-test", keepalive=keepalive)
=================
279237
count:4

# Test whether a SUBSCRIBE to a topic with QoS 2 results in the correct SUBACK packet.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos2-test", keepalive=keepalive)
=================
279237
count:4

# Test whether a retained PUBLISH to a topic with QoS 0 is actually retained.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
mid = 16
connect_packet = mosq_test.gen_connect("retain-qos0-test", keepalive=keepalive)
=================
279237
count:4
import ssl
import sys
import time

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

import inspect, os
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-revoked-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a CONNECT with a zero length client id results in the correct CONNACK packet.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect(None, keepalive=keepalive)

=================
279237
count:4

# Test whether an anonymous connection is correctly denied.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-anon-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=5)
=================
279237
count:4

# Test whether a SUBSCRIBE to a topic with QoS 1 results in the correct SUBACK packet.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 79
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos1-test", keepalive=keepalive)
=================
279237
count:4
import ssl
import sys
import time

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

import inspect, os
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-identity-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a SUBSCRIBE to a topic with QoS 0 results in the correct SUBACK packet.

import time
import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 53
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos0-test", keepalive=keepalive)
=================
279237
count:4

# Test whether a PUBLISH to a topic with QoS 2 results in the correct packet flow.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qos2-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a SUBSCRIBE to a topic with QoS 2 results in the correct SUBACK packet.

import subprocess

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3265
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qos1-timeout-test", keepalive=keepalive)
=================
279237
count:4

# Test whether a client subscribed to a topic receives its own message sent to that topic.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 53
keepalive = 60
connect_packet = mosq_test.gen_connect("subpub-qos0-test", keepalive=keepalive)
=================
279237
count:4

# Test whether a SUBSCRIBE to a topic with QoS 2 results in the correct SUBACK packet.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3
keepalive = 60
connect_packet = mosq_test.gen_connect("unsubscribe-qos2-test", keepalive=keepalive)
=================
279237
count:4

import subprocess

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test2", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a connection is denied if it provides just a username when it
# needs a username and password.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-test", keepalive=keepalive, username="user")
connack_packet = mosq_test.gen_connack(rc=5)
=================
279237
count:4

import struct

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("will-null-topic", keepalive=keepalive, will_topic="", will_payload=struct.pack("!4sB7s", "will", 0, "message"))
connack_packet = mosq_test.gen_connack(rc=2)
=================
279237
count:4

# Test whether a connection is denied if it provides a correct username but
# incorrect password.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="user", password="password9")
connack_packet = mosq_test.gen_connack(rc=5)
=================
279237
count:4

# Test whether a valid CONNECT results in the correct CONNACK packet.

import inspect, os, sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-success-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a connection is successful with correct username and password
# when using a simple auth_plugin.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="test-username", password="wrong")
connack_packet = mosq_test.gen_connack(rc=5)
=================
279237
count:4

# Connect a client with a will, then disconnect without DISCONNECT.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive, will_topic="will/null/test")
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a client subscribed to a topic receives its own message sent to that topic.

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 530
keepalive = 60
connect_packet = mosq_test.gen_connect("subpub-qos1-test", keepalive=keepalive)
=================
279237
count:4

import subprocess

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3265
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qos2-disco-test", keepalive=keepalive, clean_session=False)
=================
279237
count:4
# On receiving the second PUBLISH message, the test will send the correct
# PUBACK response. On receiving the correct PUBACK response, the client should
# send a DISCONNECT message.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos1-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# The client should connect to port 1888 with keepalive=60, clean session set,
# client id 01-unpwd-set, username set to uname and password set to ;'[08gn=#

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("01-unpwd-set", keepalive=keepalive, username="uname", password=";'[08gn=#")

=================
279237
count:4
# to topic "pub/qos0/no-payload/test" with zero length payload and QoS=0. If
# rc!=0, the client should exit with an error.
# After sending the PUBLISH message, the client should send a DISCONNECT message.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos0-test-np", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a client sends a correct UNSUBSCRIBE packet.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("unsubscribe-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4
# client id 01-will-unpwd-set , will topic set to "will-topic", will payload
# set to "will message", will qos=2, will retain not set, username set to
# "oibvvwqw" and password set to "#'^2hg9a&nm38*us".

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("01-will-unpwd-set",
        keepalive=keepalive, username="oibvvwqw", password="#'^2hg9a&nm38*us",
=================
279237
count:8
# resend the PUBREL message with dup=1. On receiving the second PUBREL message,
# the test will send the correct PUBCOMP response. On receiving the correct
# PUBCOMP response, the client should send a DISCONNECT message.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos2-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:8

import inspect
import os
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)
import mosq_test

rc = 1

client_args = sys.argv[1:]
env = dict(os.environ)
env['LD_LIBRARY_PATH'] = '../../lib:../../lib/cpp'
=================
279237
count:4
# The client should connect to port 1888 with keepalive=60, clean session set,
# client id 01-will-set will topic set to topic/on/unexpected/disconnect , will
# payload set to "will message", will qos set to 1 and will retain set.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("01-will-set", keepalive=keepalive, will_topic="topic/on/unexpected/disconnect", will_qos=1, will_retain=True, will_payload="will message")

=================
279237
count:4
# The client should send a PINGREQ message after the appropriate amount of time
# (4 seconds after no traffic).

import inspect
import os
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 4
connect_packet = mosq_test.gen_connect("01-keepalive-pingreq", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4
# PUBREL message. The client should respond to this with the correct PUBCOMP
# message and then exit with return code=0.

import inspect
import os
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos2-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

import inspect
import os
import socket
import ssl
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

=================
279237
count:4

# Test whether a client sends a correct PUBLISH to a topic with QoS 2 and responds to a disconnect.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos2-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a client sends a correct PUBLISH to a topic with QoS 1, then responds correctly to a disconnect.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos1-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4
# to topic "pub/qos0/test" with payload "message" and QoS=0. If rc!=0, the
# client should exit with an error.
# After sending the PUBLISH message, the client should send a DISCONNECT message.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos0-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4
# Upon receiving the correct SUBSCRIBE message, the test will reply with a
# SUBACK message with the accepted QoS set to 2. On receiving the SUBACK
# message, the client should send a DISCONNECT message.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos2-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a client sends a correct retained PUBLISH to a topic with QoS 0.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
mid = 16
connect_packet = mosq_test.gen_connect("retain-qos0-test", keepalive=keepalive)
=================
279237
count:4
# Upon receiving the correct SUBSCRIBE message, the test will reply with a
# SUBACK message with the accepted QoS set to 1. On receiving the SUBACK
# message, the client should send a DISCONNECT message.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos1-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4
# The test will send a CONNACK message to the client with rc=0. Upon receiving
# the CONNACK and verifying that rc=0, the client should send a DISCONNECT
# message. If rc!=0, the client should exit with an error.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("01-con-discon-success", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4
# Upon receiving the correct SUBSCRIBE message, the test will reply with a
# SUBACK message with the accepted QoS set to 0. On receiving the SUBACK
# message, the client should send a DISCONNECT message.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos0-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

import inspect
import os
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

=================
279237
count:4
# should handle this as per the spec by sending a PUBACK message.
# The client should then exit with return code==0.

import inspect
import os
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos1-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:12
# the CONNACK and verifying that rc=0, the client should send a DISCONNECT
# message. If rc!=0, the client should exit with an error.

import inspect
import os
import socket
import ssl
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

=================
279237
count:4

# The client should connect to port 1888 with keepalive=60, clean session not
# set, and client id 01-no-clean-session.

import inspect
import os
import socket
import sys

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("01-no-clean-session", clean_session=False, keepalive=keepalive)

=================
1165552
count:1
#coding=utf-8
"""
A dictionary difference calculator
Originally posted as:
http://stackoverflow.com/questions/1165352/fast-comparison-between-two-python-dictionary/1165552#1165552
"""


class DictDiffer(object):
    """
    Calculate the difference between two dictionaries as:
    (1) items added
    (2) items removed
    (3) keys same in both but changed values
    (4) keys same in both and unchanged values
=================
279237
count:9

# Test whether a retained PUBLISH to a topic with QoS 0 is sent with
# retain=false to an already subscribed client.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
mid = 16
connect_packet = mosq_test.gen_connect("retain-qos0-fresh-test", keepalive=keepalive)
=================
279237
count:45
import ssl
import sys
import time

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-success-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

# Test whether a connection is successful with correct username and password
# when using a simple auth_plugin.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="test-username", password="cnwTICONIURW")
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:27

# Test whether a PUBLISH to a topic with QoS 2 results in the correct packet flow.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

# Test whether a UNSUBSCRIBE to a topic with QoS 0 results in the correct UNSUBACK packet.
# This doesn't assume a subscription exists.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 53
keepalive = 60
connect_packet = mosq_test.gen_connect("unsubscribe-qos0-test", keepalive=keepalive)
=================
279237
count:9

# Test whether a client subscribed to a topic receives its own message sent to that topic.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 530
keepalive = 60
connect_packet = mosq_test.gen_connect("subpub-qos2-test", keepalive=keepalive)
=================
279237
count:9
import ssl
import sys
import time

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-no-identity-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=4)
=================
279237
count:9

import subprocess
import socket
import time
from os import environ

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3265
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qos1-disco-test", keepalive=keepalive, clean_session=False)
=================
279237
count:9

# Test whether a SUBSCRIBE to a topic with QoS 2 results in the correct SUBACK packet.

import subprocess
import socket
import time
from os import environ

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3265
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qo2-timeout-test", keepalive=keepalive)
=================
279237
count:9
# Test whether a retained PUBLISH to a topic with QoS 1 is retained.
# Subscription is made with QoS 0 so the retained message should also have QoS
# 0.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("retain-qos1-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

# Test whether a clean session client has a QoS 1 message queued for it.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 109
keepalive = 60
connect_packet = mosq_test.gen_connect("clean-qos2-test", keepalive=keepalive, clean_session=False)
=================
279237
count:9

# Test whether a SUBSCRIBE to a topic with QoS 1 results in the correct SUBACK packet.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 79
keepalive = 60
connect_packet = mosq_test.gen_connect("unsubscribe-qos1-test", keepalive=keepalive)
=================
279237
count:9

# Test whether a client will is transmitted correctly.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 53
keepalive = 60
connect_packet = mosq_test.gen_connect("will-qos0-test", keepalive=keepalive)
=================
279237
count:63

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
import ssl
import sys
import time

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-cert-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:14

# Test whether a connection is denied if it provides a correct username but
# incorrect password.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="user", password="password")
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

# Test whether a clean session client has a QoS 1 message queued for it.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

def pattern_test(sub_topic, pub_topic):
    rc = 1
    keepalive = 60
    connect_packet = mosq_test.gen_connect("pattern-sub-test", keepalive=keepalive)
=================
279237
count:9
# Test whether a bridge topics work correctly after reconnection.
# Important point here is that persistence is enabled.

import os
import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("bridge-reconnect-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

# Test whether a CONNECT with a zero length client id results in the correct CONNACK packet.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("", keepalive=keepalive, proto_ver=4)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:18

import subprocess
import socket
import time
from os import environ

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3265
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qos2-disco-test", keepalive=keepalive, clean_session=False)
=================
279237
count:18
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

if ssl.OPENSSL_VERSION_NUMBER < 0x10000000:
    print("WARNING: TLS-PSK not supported on OpenSSL < 1.0")
    exit(0)


import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

env = dict(os.environ)
env['LD_LIBRARY_PATH'] = '../../lib:../../lib/cpp'
try:
    pp = env['PYTHONPATH']
=================
279237
count:9

# Test whether a client will is transmitted correctly with a null character in the middle.

import struct
import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 53
keepalive = 60
connect_packet = mosq_test.gen_connect("will-qos0-test", keepalive=keepalive)
=================
279237
count:36

# Does a bridge resend a QoS=1 message correctly after a disconnect?

import os
import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
client_id = socket.gethostname()+".bridge_sample"
connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+3)
=================
279237
count:9

# Test whether a PUBLISH to a topic with QoS 1 results in the correct PUBACK packet.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 19
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qos1-test", keepalive=keepalive)
=================
279237
count:9
# Test whether a PUBLISH to a topic with QoS 2 results in the correct packet
# flow. This test introduces delays into the flow in order to force the broker
# to send duplicate PUBREC and PUBCOMP messages.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 600
connect_packet = mosq_test.gen_connect("pub-qos2-timeout-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

import os
import subprocess
import socket
import ssl
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
client_id = socket.gethostname()+".bridge_test"
connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+3)
=================
279237
count:9

# Test whether a CONNECT with an invalid protocol number results in the correct CONNACK packet.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-invalid-test", keepalive=keepalive, proto_ver=0)
connack_packet = mosq_test.gen_connack(rc=1)
=================
279237
count:9

# Connect a client with a will, then disconnect without DISCONNECT.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive, will_topic="will/qos0/test", will_payload="will-message")
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

# Test whether a CONNECT with a zero length client id results in the correct CONNACK packet.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=2)
=================
279237
count:9

# Test whether a retained PUBLISH is cleared when a zero length retained
# message is published to a topic.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("retain-clear-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

# Test whether a retained PUBLISH to a topic with QoS 0 is actually retained
# and delivered when multiple sub/unsub operations are carried out.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
mid = 16
connect_packet = mosq_test.gen_connect("retain-qos0-rep-test", keepalive=keepalive)
=================
279237
count:9

# Test whether a SUBSCRIBE to a topic with QoS 2 results in the correct SUBACK packet.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos2-test", keepalive=keepalive)
=================
279237
count:9

# Test whether a retained PUBLISH to a topic with QoS 0 is actually retained.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
mid = 16
connect_packet = mosq_test.gen_connect("retain-qos0-test", keepalive=keepalive)
=================
279237
count:9
import ssl
import sys
import time

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-revoked-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

# Test whether a CONNECT with a zero length client id results in the correct CONNACK packet.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect(None, keepalive=keepalive)

=================
279237
count:9

# Test whether an anonymous connection is correctly denied.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-anon-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=5)
=================
279237
count:9

# Test whether a SUBSCRIBE to a topic with QoS 1 results in the correct SUBACK packet.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 79
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos1-test", keepalive=keepalive)
=================
279237
count:9
import ssl
import sys
import time

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-identity-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

# Test whether a SUBSCRIBE to a topic with QoS 0 results in the correct SUBACK packet.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 53
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos0-test", keepalive=keepalive)
=================
279237
count:9

# Test whether a PUBLISH to a topic with QoS 2 results in the correct packet flow.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qos2-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

# Test whether a SUBSCRIBE to a topic with QoS 2 results in the correct SUBACK packet.

import subprocess
import socket
import time
from os import environ

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3265
keepalive = 60
connect_packet = mosq_test.gen_connect("pub-qos1-timeout-test", keepalive=keepalive)
=================
279237
count:9

# Test whether a client subscribed to a topic receives its own message sent to that topic.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 53
keepalive = 60
connect_packet = mosq_test.gen_connect("subpub-qos0-test", keepalive=keepalive)
=================
279237
count:9

# Test whether a SUBSCRIBE to a topic with QoS 2 results in the correct SUBACK packet.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 3
keepalive = 60
connect_packet = mosq_test.gen_connect("unsubscribe-qos2-test", keepalive=keepalive)
=================
279237
count:9

import os
import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test2", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a connection is denied if it provides just a username when it
# needs a username and password.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-test", keepalive=keepalive, username="user")
connack_packet = mosq_test.gen_connack(rc=5)
=================
279237
count:9

import struct
import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("will-null-topic", keepalive=keepalive, will_topic="", will_payload=struct.pack("!4sB7s", "will", 0, "message"))
connack_packet = mosq_test.gen_connack(rc=2)
=================
279237
count:4

# Test whether a connection is denied if it provides a correct username but
# incorrect password.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="user", password="password9")
connack_packet = mosq_test.gen_connack(rc=5)
=================
279237
count:9
# Test whether a valid CONNECT results in the correct CONNACK packet.

import inspect, os, sys
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-success-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:4

# Test whether a connection is successful with correct username and password
# when using a simple auth_plugin.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="test-username", password="wrong")
connack_packet = mosq_test.gen_connack(rc=5)
=================
279237
count:9

# Connect a client with a will, then disconnect without DISCONNECT.

import struct
import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive, will_topic="will/null/test")
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9

# Test whether a client subscribed to a topic receives its own message sent to that topic.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 530
keepalive = 60
connect_packet = mosq_test.gen_connect("subpub-qos1-test", keepalive=keepalive)
=================
279237
count:9
# send a DISCONNECT message.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos1-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# client id 01-unpwd-set, username set to uname and password set to ;'[08gn=#

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("01-unpwd-set", keepalive=keepalive, username="uname", password=";'[08gn=#")

=================
279237
count:9
# After sending the PUBLISH message, the client should send a DISCONNECT message.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos0-test-np", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# Test whether a client sends a correct UNSUBSCRIBE packet.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("unsubscribe-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# "oibvvwqw" and password set to "#'^2hg9a&nm38*us".

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("01-will-unpwd-set",
        keepalive=keepalive, username="oibvvwqw", password="#'^2hg9a&nm38*us",
=================
279237
count:18
# PUBCOMP response, the client should send a DISCONNECT message.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos2-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:10

import inspect
import os
import subprocess
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)
import mosq_test

rc = 1

client_args = sys.argv[1:]
env = dict(os.environ)
env['LD_LIBRARY_PATH'] = '../../lib:../../lib/cpp'
=================
279237
count:9
# payload set to "will message", will qos set to 1 and will retain set.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("01-will-set", keepalive=keepalive, will_topic="topic/on/unexpected/disconnect", will_qos=1, will_retain=True, will_payload="will message")

=================
279237
count:9
# (4 seconds after no traffic).

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 4
connect_packet = mosq_test.gen_connect("01-keepalive-pingreq", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# message and then exit with return code=0.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos2-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:41

import inspect
import os
import subprocess
import socket
import ssl
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

if sys.version < '2.7':
    print("WARNING: SSL not supported on Python 2.6")
    exit(0)

=================
279237
count:9
# Test whether a client sends a correct PUBLISH to a topic with QoS 2 and responds to a disconnect.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos2-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# Test whether a client sends a correct PUBLISH to a topic with QoS 1, then responds correctly to a disconnect.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos1-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# After sending the PUBLISH message, the client should send a DISCONNECT message.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos0-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# message, the client should send a DISCONNECT message.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos2-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# Test whether a client sends a correct retained PUBLISH to a topic with QoS 0.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
mid = 16
connect_packet = mosq_test.gen_connect("retain-qos0-test", keepalive=keepalive)
=================
279237
count:9
# message, the client should send a DISCONNECT message.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos1-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# message. If rc!=0, the client should exit with an error.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("01-con-discon-success", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# message, the client should send a DISCONNECT message.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("subscribe-qos0-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# The client should then exit with return code==0.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("publish-qos1-test", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=0)
=================
279237
count:9
# set, and client id 01-no-clean-session.

import inspect
import os
import subprocess
import socket
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 60
connect_packet = mosq_test.gen_connect("01-no-clean-session", clean_session=False, keepalive=keepalive)

=================
23487307
count:1
# 2014-10-21T18:12+08:00

"""
Benchmark test for list & deque in Python.

This program is inspired by a question on zhihu.com: 
http://www.zhihu.com/question/26091467

Some more useful information:
http://stackoverflow.com/questions/23487307/python-deque-vs-list-performance-comparison
http://stackoverflow.com/questions/1296511/efficiency-of-using-a-python-list-as-a-queue

C++ benchmark test:
http://baptiste-wicht.com/posts/2012/12/cpp-benchmark-vector-list-deque.html
http://blog.davidecoppola.com/2014/05/20/cpp-benchmarks-vector-vs-list-vs-deque/
http://stackoverflow.com/questions/1436020/c-stl-containers-whats-the-difference-between-deque-and-list
"""

import collections
#import inspect
=================
1296511
count:1

"""
Benchmark test for list & deque in Python.

This program is inspired by a question on zhihu.com: 
http://www.zhihu.com/question/26091467

Some more useful information:
http://stackoverflow.com/questions/23487307/python-deque-vs-list-performance-comparison
http://stackoverflow.com/questions/1296511/efficiency-of-using-a-python-list-as-a-queue

C++ benchmark test:
http://baptiste-wicht.com/posts/2012/12/cpp-benchmark-vector-list-deque.html
http://blog.davidecoppola.com/2014/05/20/cpp-benchmarks-vector-vs-list-vs-deque/
http://stackoverflow.com/questions/1436020/c-stl-containers-whats-the-difference-between-deque-and-list
"""

import collections
#import inspect
import random
=================
1436020
count:1
http://www.zhihu.com/question/26091467

Some more useful information:
http://stackoverflow.com/questions/23487307/python-deque-vs-list-performance-comparison
http://stackoverflow.com/questions/1296511/efficiency-of-using-a-python-list-as-a-queue

C++ benchmark test:
http://baptiste-wicht.com/posts/2012/12/cpp-benchmark-vector-list-deque.html
http://blog.davidecoppola.com/2014/05/20/cpp-benchmarks-vector-vs-list-vs-deque/
http://stackoverflow.com/questions/1436020/c-stl-containers-whats-the-difference-between-deque-and-list
"""

import collections
#import inspect
import random
import timeit
#import types

loops = random.randint(10000, 100000)
rng = range(loops)
=================
22676
count:2
    
    bucket_size_benchmark()


# References:
# [GitHub: pybind/python_example](https://github.com/pybind/python_example)
# Matplotlib documentation
# 
# Download a file over HTTP:
# [How do I download a file over HTTP using Python?](http://stackoverflow.com/questions/22676/how-do-i-download-a-file-over-http-using-python)
=================
22905316
count:1
# coding: utf-8

# 2018-03-08T21:44+08:00

# When building MuPDF from scratch on Windows 7 with VS2010 this afternoon, I encountered several compilation errors like this:
#   >..\..\generated\SourceHanSansCN-Regular.c(3452): fatal error C1091: compiler limit: string exceeds 65535 bytes in length
#    ......
# I found these pages:
#    https://stackoverflow.com/questions/22905316/fatal-error-compiler-limit-when-building-cimg
#    https://github.com/glfw/glfw/issues/1145
#    https://sourceforge.net/p/fuego/tickets/88/
# So what I need to do is replacing code like this:
#    const unsigned char fz_resources_fonts_sil_CharisSIL_B_cff[] =
#    "\x01\x00\x04\x03\x00\x01\x01\x01\x0f\x43\x68\x61\x72\x69\x73\x53\x49\x4c\x2d"
#    "\x42\x6f\x6c\x64\x00\x01\x01\x01\x5c\xf8\x10\x00\x1c\x08\xc5\x01\x1c\x08\xc6"
#    "\x02\x1c\x08\xc7\x03\xf8\x14\x04\xfb\xf2\x0c\x03\xf7\x0c\x0c\x04\x1c\xfa\x3d"
#    "\xfe\xd8\x1c\x18\x00\x1c\x0a\x28\x05\x1e\xa0\x00\x48\x82\x80\x98\x8f\x8b\x8b"
#      ......
#    "\x3c\x1d\x88\xf7\xb3\x25\x0a\xf7\x19\x0a\xf7\x13\x66\x0a\xfd\xfe\x72\x1d\x0b"
=================
13673060
count:1
        raise SystemExit('Sub-directory \'{0}\' not found.'.format(target_dir))

    fonts_resource_files = (os.path.join(target_dir, file) for file in os.listdir(target_dir))
    for file in fonts_resource_files:
        print('Processing file', file)
        process_file(file)        
        


=================
1094717
count:1
    """
    return int(to_num(num))


if __name__ == '__main__':
    import doctest
    doctest.testmod()
    
# References:
# [Convert a string to integer with decimal in Python](http://stackoverflow.com/questions/1094717/convert-a-string-to-integer-with-decimal-in-python)
# [Convert hex string to int in Python](http://stackoverflow.com/questions/209513/convert-hex-string-to-int-in-python)
# [Invalid Token when using Octal numbers](http://stackoverflow.com/questions/1837874/invalid-token-when-using-octal-numbers)
=================
209513
count:1
    return int(to_num(num))


if __name__ == '__main__':
    import doctest
    doctest.testmod()
    
# References:
# [Convert a string to integer with decimal in Python](http://stackoverflow.com/questions/1094717/convert-a-string-to-integer-with-decimal-in-python)
# [Convert hex string to int in Python](http://stackoverflow.com/questions/209513/convert-hex-string-to-int-in-python)
# [Invalid Token when using Octal numbers](http://stackoverflow.com/questions/1837874/invalid-token-when-using-octal-numbers)
=================
1837874
count:1


if __name__ == '__main__':
    import doctest
    doctest.testmod()
    
# References:
# [Convert a string to integer with decimal in Python](http://stackoverflow.com/questions/1094717/convert-a-string-to-integer-with-decimal-in-python)
# [Convert hex string to int in Python](http://stackoverflow.com/questions/209513/convert-hex-string-to-int-in-python)
# [Invalid Token when using Octal numbers](http://stackoverflow.com/questions/1837874/invalid-token-when-using-octal-numbers)
=================
379906
count:1

if __name__ == '__main__':
    import doctest
    doctest.testmod()
    
# References:
# [Convert a string to integer with decimal in Python](http://stackoverflow.com/questions/1094717/convert-a-string-to-integer-with-decimal-in-python)
# [Convert hex string to int in Python](http://stackoverflow.com/questions/209513/convert-hex-string-to-int-in-python)
# [Invalid Token when using Octal numbers](http://stackoverflow.com/questions/1837874/invalid-token-when-using-octal-numbers)
=================
4568580
count:1
        run_subprocess(cmd_args)


if __name__ == '__main__':
    main()


# References:
#  Ongoing-Study/cpp/msvc_cmdline_args/msvc_cmdline_args.cpp
# [Python glob multiple filetypes](http://stackoverflow.com/questions/4568580/python-glob-multiple-filetypes)
=================
22351254
count:1
# 2018-05-28T10:38+08:00


def img_to_bytes(fn):
    with open(fn, "rb") as fp:
        return bytearray(fp.read())


# References:
# https://stackoverflow.com/questions/22351254/python-script-to-convert-image-into-byte-array
=================
35390187
count:1

folium = lhs - rhs
folium_idiff = sympy.idiff(folium, y, x).simplify()
print(folium_idiff)
sympy.plotting.plot_implicit(folium_idiff, title=str(folium_idiff))


# References:
# Calculus, 7ed, James.Stewart, P157
# https://stackoverflow.com/questions/35390187/using-sympy-equations-for-plotting
=================
25791425
count:1
folium = lhs - rhs
folium_idiff = sympy.idiff(folium, y, x).simplify()
print(folium_idiff)
sympy.plotting.plot_implicit(folium_idiff, title=str(folium_idiff))


# References:
# Calculus, 7ed, James.Stewart, P157
# https://stackoverflow.com/questions/35390187/using-sympy-equations-for-plotting
=================
9535732
count:1
    return ''.join(fetch_page(url, encoding))


def iurl(page_contents):
    pq = pyquery.PyQuery(page_contents)
    yield from (url.attrib.get('href') for url in pq('a') if url.attrib.get('href'))
        
        
# References:
# https://stackoverflow.com/questions/9535732/how-to-extract-all-the-urls-from-a-website
# http://pyquery.readthedocs.io/en/latest/
=================
802134
count:1

def iurl(page_contents):
    pq = pyquery.PyQuery(page_contents)
    yield from (url.attrib.get('href') for url in pq('a') if url.attrib.get('href'))
        
        
# References:
# https://stackoverflow.com/questions/9535732/how-to-extract-all-the-urls-from-a-website
# http://pyquery.readthedocs.io/en/latest/
=================
1995418
count:1
    print()
    
if __name__ == '__main__':
    main()

# References:
# [Python 3.4.3 documentation/The Python Standard Library/4.8. Binary Sequence Types — bytes, bytearray, memoryview]
# [Python 3.4.3 documentation/The Python Language Reference/6.2.9.1. Generator-iterator methods]
# [PEP 0380 -- Syntax for Delegating to a Subgenerator](https://www.python.org/dev/peps/pep-0380/)
# [Python: generator expression vs. yield](http://stackoverflow.com/questions/1995418/python-generator-expression-vs-yield)
# [Return in generator together with yield in Python 3.3](http://stackoverflow.com/questions/16780002/return-in-generator-together-with-yield-in-python-3-3)
# [What does the yield keyword do in Python?](http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python)
=================
16780002
count:1
    
if __name__ == '__main__':
    main()

# References:
# [Python 3.4.3 documentation/The Python Standard Library/4.8. Binary Sequence Types — bytes, bytearray, memoryview]
# [Python 3.4.3 documentation/The Python Language Reference/6.2.9.1. Generator-iterator methods]
# [PEP 0380 -- Syntax for Delegating to a Subgenerator](https://www.python.org/dev/peps/pep-0380/)
# [Python: generator expression vs. yield](http://stackoverflow.com/questions/1995418/python-generator-expression-vs-yield)
# [Return in generator together with yield in Python 3.3](http://stackoverflow.com/questions/16780002/return-in-generator-together-with-yield-in-python-3-3)
# [What does the yield keyword do in Python?](http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python)
=================
231767
count:1
if __name__ == '__main__':
    main()

# References:
# [Python 3.4.3 documentation/The Python Standard Library/4.8. Binary Sequence Types — bytes, bytearray, memoryview]
# [Python 3.4.3 documentation/The Python Language Reference/6.2.9.1. Generator-iterator methods]
# [PEP 0380 -- Syntax for Delegating to a Subgenerator](https://www.python.org/dev/peps/pep-0380/)
# [Python: generator expression vs. yield](http://stackoverflow.com/questions/1995418/python-generator-expression-vs-yield)
# [Return in generator together with yield in Python 3.3](http://stackoverflow.com/questions/16780002/return-in-generator-together-with-yield-in-python-3-3)
# [What does the yield keyword do in Python?](http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python)
=================
1419046
count:1
# mandatory argument
# optional argument

# So, What is the meaning of these five glossary? There difference?
# mandatory argument
# optional argument
# keyword argument
# keyword only argument
# positional argument
# http://stackoverflow.com/questions/1419046/python-normal-arguments-vs-keyword-arguments
# http://stackoverflow.com/questions/13687043/python-optional-positional-and-keyword-arguments
# PEP 3102: https://www.python.org/dev/peps/pep-3102/

# More information about: Packing and Unpacking Arguments in Python
# http://hangar.runway7.net/python/packing-unpacking-arguments

# Python >> 3.4.2 Documentation >> Python Frequently Asked Questions
# How can I pass optional or keyword parameters from one function to another?
# From this FAQ, we know that:
# With the ** specifier in the function's parameter list, all keyword arguments
=================
13687043
count:1
# optional argument

# So, What is the meaning of these five glossary? There difference?
# mandatory argument
# optional argument
# keyword argument
# keyword only argument
# positional argument
# http://stackoverflow.com/questions/1419046/python-normal-arguments-vs-keyword-arguments
# http://stackoverflow.com/questions/13687043/python-optional-positional-and-keyword-arguments
# PEP 3102: https://www.python.org/dev/peps/pep-3102/

# More information about: Packing and Unpacking Arguments in Python
# http://hangar.runway7.net/python/packing-unpacking-arguments

# Python >> 3.4.2 Documentation >> Python Frequently Asked Questions
# How can I pass optional or keyword parameters from one function to another?
# From this FAQ, we know that:
# With the ** specifier in the function's parameter list, all keyword arguments
# are packed into a dict object. And we can pass the keyword arguments to another
=================
16672856
count:1
            yield winreg.EnumKey(key_to_enum, i)

    _CloseKeyToEnum(key, key_to_enum)

# The old version of EnumSubKey looks like this:
#EnumSubKey = functools.update_wrapper(
#    functools.partial(_EnumSubKeyImpl, first_recursion = True), _EnumSubKeyImpl)
# in which case 'help(EnumSubKey)' will not work but 'print(EnumSubKey.__doc__)' works.
# So I may need some black-magic:
# http://stackoverflow.com/questions/16672856/allow-help-to-work-on-partial-function-object
# But it is even more confusing. So I rewrite it.
def EnumSubKey(key, sub_key = None, recursive = False):
    '''Enumerate all sub-keys under specified registry item.'''
    return _EnumSubKeyImpl(key, sub_key, recursive, True) # See issue #1

def EnumValue(key, sub_key = None, recursive = False):
    '''Enumerate all values under specified registry item.'''
    key_to_enum = _OpenKeyToEnum(key, sub_key)
    sub_key_cnt, val_cnt, last_modified = winreg.QueryInfoKey(key_to_enum)

=================
825678
count:1


if __name__ == '__main__':
    for file in iter_images(os.path.dirname(os.path.dirname(__file__))):
        print(file)


# References:
# [Date and Time Formats](http://www.w3.org/TR/NOTE-datetime)
# [What is the best way to generate a unique and short file name in Java](http://stackoverflow.com/questions/825678/what-is-the-best-way-to-generate-a-unique-and-short-file-name-in-java)
=================
4657974
count:1

if __name__ == '__main__':
    for file in iter_images(os.path.dirname(os.path.dirname(__file__))):
        print(file)


# References:
# [Date and Time Formats](http://www.w3.org/TR/NOTE-datetime)
# [What is the best way to generate a unique and short file name in Java](http://stackoverflow.com/questions/825678/what-is-the-best-way-to-generate-a-unique-and-short-file-name-in-java)
=================
1035340
count:1


# TODO: unittest
def get_md5(filename, block_size=1024*1024):
    """Calculate the MD5 digest of given file."""
    with open(filename, 'rb') as fp:
        md5 = hashlib.md5()

        # Read a binary file elegantly:
        # http://stackoverflow.com/questions/1035340/reading-binary-file-in-python
        # or you want to make a binary file object iterable?
        # http://stackoverflow.com/questions/4566498/python-file-iterator-over-a-binary-file-with-newer-idiom
        data = fp.read(block_size)
        while data:
            md5.update(data)
            data = fp.read(block_size)

        return md5.hexdigest()

    return ''
=================
4566498
count:1
# TODO: unittest
def get_md5(filename, block_size=1024*1024):
    """Calculate the MD5 digest of given file."""
    with open(filename, 'rb') as fp:
        md5 = hashlib.md5()

        # Read a binary file elegantly:
        # http://stackoverflow.com/questions/1035340/reading-binary-file-in-python
        # or you want to make a binary file object iterable?
        # http://stackoverflow.com/questions/4566498/python-file-iterator-over-a-binary-file-with-newer-idiom
        data = fp.read(block_size)
        while data:
            md5.update(data)
            data = fp.read(block_size)

        return md5.hexdigest()

    return ''


=================
2404430
count:1
            self.assertFalse(f.closed)
            f.seek(0, 0)
            self.assertEqual(f.read(), test_data)
            f.close()

    unittest.main()


# References:
# [Does filehandle get closed automatically in Python after it goes out of scope?](http://stackoverflow.com/questions/2404430/does-filehandle-get-closed-automatically-in-python-after-it-goes-out-of-scope)
# [Does a File Object Automatically Close when its Reference Count Hits Zero?](http://stackoverflow.com/questions/1834556/does-a-file-object-automatically-close-when-its-reference-count-hits-zero)
# [Explaining Python's '__enter__' and '__exit__'](http://stackoverflow.com/questions/1984325/explaining-pythons-enter-and-exit)
# [Is close() necessary when using iterator on a Python file object](http://stackoverflow.com/questions/1832528/is-close-necessary-when-using-iterator-on-a-python-file-object)
# [Python file with closing automatically](http://www.peterbe.com/plog/python-file-with-closing-automatically)
# [Size of an open file object](http://stackoverflow.com/questions/283707/size-of-an-open-file-object)
=================
1834556
count:1
            f.seek(0, 0)
            self.assertEqual(f.read(), test_data)
            f.close()

    unittest.main()


# References:
# [Does filehandle get closed automatically in Python after it goes out of scope?](http://stackoverflow.com/questions/2404430/does-filehandle-get-closed-automatically-in-python-after-it-goes-out-of-scope)
# [Does a File Object Automatically Close when its Reference Count Hits Zero?](http://stackoverflow.com/questions/1834556/does-a-file-object-automatically-close-when-its-reference-count-hits-zero)
# [Explaining Python's '__enter__' and '__exit__'](http://stackoverflow.com/questions/1984325/explaining-pythons-enter-and-exit)
# [Is close() necessary when using iterator on a Python file object](http://stackoverflow.com/questions/1832528/is-close-necessary-when-using-iterator-on-a-python-file-object)
# [Python file with closing automatically](http://www.peterbe.com/plog/python-file-with-closing-automatically)
# [Size of an open file object](http://stackoverflow.com/questions/283707/size-of-an-open-file-object)
=================
1984325
count:1
            self.assertEqual(f.read(), test_data)
            f.close()

    unittest.main()


# References:
# [Does filehandle get closed automatically in Python after it goes out of scope?](http://stackoverflow.com/questions/2404430/does-filehandle-get-closed-automatically-in-python-after-it-goes-out-of-scope)
# [Does a File Object Automatically Close when its Reference Count Hits Zero?](http://stackoverflow.com/questions/1834556/does-a-file-object-automatically-close-when-its-reference-count-hits-zero)
# [Explaining Python's '__enter__' and '__exit__'](http://stackoverflow.com/questions/1984325/explaining-pythons-enter-and-exit)
# [Is close() necessary when using iterator on a Python file object](http://stackoverflow.com/questions/1832528/is-close-necessary-when-using-iterator-on-a-python-file-object)
# [Python file with closing automatically](http://www.peterbe.com/plog/python-file-with-closing-automatically)
# [Size of an open file object](http://stackoverflow.com/questions/283707/size-of-an-open-file-object)
=================
1832528
count:1
            f.close()

    unittest.main()


# References:
# [Does filehandle get closed automatically in Python after it goes out of scope?](http://stackoverflow.com/questions/2404430/does-filehandle-get-closed-automatically-in-python-after-it-goes-out-of-scope)
# [Does a File Object Automatically Close when its Reference Count Hits Zero?](http://stackoverflow.com/questions/1834556/does-a-file-object-automatically-close-when-its-reference-count-hits-zero)
# [Explaining Python's '__enter__' and '__exit__'](http://stackoverflow.com/questions/1984325/explaining-pythons-enter-and-exit)
# [Is close() necessary when using iterator on a Python file object](http://stackoverflow.com/questions/1832528/is-close-necessary-when-using-iterator-on-a-python-file-object)
# [Python file with closing automatically](http://www.peterbe.com/plog/python-file-with-closing-automatically)
# [Size of an open file object](http://stackoverflow.com/questions/283707/size-of-an-open-file-object)
=================
283707
count:1
    unittest.main()


# References:
# [Does filehandle get closed automatically in Python after it goes out of scope?](http://stackoverflow.com/questions/2404430/does-filehandle-get-closed-automatically-in-python-after-it-goes-out-of-scope)
# [Does a File Object Automatically Close when its Reference Count Hits Zero?](http://stackoverflow.com/questions/1834556/does-a-file-object-automatically-close-when-its-reference-count-hits-zero)
# [Explaining Python's '__enter__' and '__exit__'](http://stackoverflow.com/questions/1984325/explaining-pythons-enter-and-exit)
# [Is close() necessary when using iterator on a Python file object](http://stackoverflow.com/questions/1832528/is-close-necessary-when-using-iterator-on-a-python-file-object)
# [Python file with closing automatically](http://www.peterbe.com/plog/python-file-with-closing-automatically)
# [Size of an open file object](http://stackoverflow.com/questions/283707/size-of-an-open-file-object)
=================
13415400
count:1
        output_fp.write(args.output_delimiter.join(extracted_columns))
        output_fp.write('\n')


if __name__ == '__main__':
    main()


# References:
# [How to parse on/off (debug) flag using argparse?](https://stackoverflow.com/questions/13415400/how-to-parse-on-off-debug-flag-using-argparse)
# [How do you find out what the “system default encoding” is?](https://stackoverflow.com/questions/7387744/how-do-you-find-out-what-the-system-default-encoding-is)
# [How can I pass a list as a command-line argument with argparse?](https://stackoverflow.com/questions/15753701/how-can-i-pass-a-list-as-a-command-line-argument-with-argparse)
# [Python: filtering lists by indices](https://stackoverflow.com/questions/11847491/python-filtering-lists-by-indices)
# [Extracting extension from filename in Python](https://stackoverflow.com/questions/541390/extracting-extension-from-filename-in-python)
# [Why are empty strings returned in split() results?](https://stackoverflow.com/questions/2197451/why-are-empty-strings-returned-in-split-results)
=================
7387744
count:1
        output_fp.write('\n')


if __name__ == '__main__':
    main()


# References:
# [How to parse on/off (debug) flag using argparse?](https://stackoverflow.com/questions/13415400/how-to-parse-on-off-debug-flag-using-argparse)
# [How do you find out what the “system default encoding” is?](https://stackoverflow.com/questions/7387744/how-do-you-find-out-what-the-system-default-encoding-is)
# [How can I pass a list as a command-line argument with argparse?](https://stackoverflow.com/questions/15753701/how-can-i-pass-a-list-as-a-command-line-argument-with-argparse)
# [Python: filtering lists by indices](https://stackoverflow.com/questions/11847491/python-filtering-lists-by-indices)
# [Extracting extension from filename in Python](https://stackoverflow.com/questions/541390/extracting-extension-from-filename-in-python)
# [Why are empty strings returned in split() results?](https://stackoverflow.com/questions/2197451/why-are-empty-strings-returned-in-split-results)
=================
15753701
count:1


if __name__ == '__main__':
    main()


# References:
# [How to parse on/off (debug) flag using argparse?](https://stackoverflow.com/questions/13415400/how-to-parse-on-off-debug-flag-using-argparse)
# [How do you find out what the “system default encoding” is?](https://stackoverflow.com/questions/7387744/how-do-you-find-out-what-the-system-default-encoding-is)
# [How can I pass a list as a command-line argument with argparse?](https://stackoverflow.com/questions/15753701/how-can-i-pass-a-list-as-a-command-line-argument-with-argparse)
# [Python: filtering lists by indices](https://stackoverflow.com/questions/11847491/python-filtering-lists-by-indices)
# [Extracting extension from filename in Python](https://stackoverflow.com/questions/541390/extracting-extension-from-filename-in-python)
# [Why are empty strings returned in split() results?](https://stackoverflow.com/questions/2197451/why-are-empty-strings-returned-in-split-results)
=================
11847491
count:1

if __name__ == '__main__':
    main()


# References:
# [How to parse on/off (debug) flag using argparse?](https://stackoverflow.com/questions/13415400/how-to-parse-on-off-debug-flag-using-argparse)
# [How do you find out what the “system default encoding” is?](https://stackoverflow.com/questions/7387744/how-do-you-find-out-what-the-system-default-encoding-is)
# [How can I pass a list as a command-line argument with argparse?](https://stackoverflow.com/questions/15753701/how-can-i-pass-a-list-as-a-command-line-argument-with-argparse)
# [Python: filtering lists by indices](https://stackoverflow.com/questions/11847491/python-filtering-lists-by-indices)
# [Extracting extension from filename in Python](https://stackoverflow.com/questions/541390/extracting-extension-from-filename-in-python)
# [Why are empty strings returned in split() results?](https://stackoverflow.com/questions/2197451/why-are-empty-strings-returned-in-split-results)
=================
541390
count:1
if __name__ == '__main__':
    main()


# References:
# [How to parse on/off (debug) flag using argparse?](https://stackoverflow.com/questions/13415400/how-to-parse-on-off-debug-flag-using-argparse)
# [How do you find out what the “system default encoding” is?](https://stackoverflow.com/questions/7387744/how-do-you-find-out-what-the-system-default-encoding-is)
# [How can I pass a list as a command-line argument with argparse?](https://stackoverflow.com/questions/15753701/how-can-i-pass-a-list-as-a-command-line-argument-with-argparse)
# [Python: filtering lists by indices](https://stackoverflow.com/questions/11847491/python-filtering-lists-by-indices)
# [Extracting extension from filename in Python](https://stackoverflow.com/questions/541390/extracting-extension-from-filename-in-python)
# [Why are empty strings returned in split() results?](https://stackoverflow.com/questions/2197451/why-are-empty-strings-returned-in-split-results)
=================
2197451
count:1
    main()


# References:
# [How to parse on/off (debug) flag using argparse?](https://stackoverflow.com/questions/13415400/how-to-parse-on-off-debug-flag-using-argparse)
# [How do you find out what the “system default encoding” is?](https://stackoverflow.com/questions/7387744/how-do-you-find-out-what-the-system-default-encoding-is)
# [How can I pass a list as a command-line argument with argparse?](https://stackoverflow.com/questions/15753701/how-can-i-pass-a-list-as-a-command-line-argument-with-argparse)
# [Python: filtering lists by indices](https://stackoverflow.com/questions/11847491/python-filtering-lists-by-indices)
# [Extracting extension from filename in Python](https://stackoverflow.com/questions/541390/extracting-extension-from-filename-in-python)
# [Why are empty strings returned in split() results?](https://stackoverflow.com/questions/2197451/why-are-empty-strings-returned-in-split-results)
=================
369755
count:1
        print(cursor.fetchall())

        cursor.execute("SELECT id, name FROM users WHERE fuzzy_match(name, 'Doctor Zhang')")
        print(cursor.fetchall())


# References:
# https://www.zhihu.com/question/65132459
# [Using Fuzzy Matching to Search by Sound with Python](https://doughellmann.com/blog/2012/03/03/using-fuzzy-matching-to-search-by-sound-with-python/)
=================
24196932
count:1
    
for interface in netifaces.interfaces():
    print(f'Interface: {interface}')
        
    addr = netifaces.ifaddresses(interface)
    print(f'Address: {addr}')


# References:
=================
5234090
count:1
            count = count + 1
    else:
        while count < stop:
            yield count
            count = count + 1


def get_the_n_next_values_of_a_generator():
    # References:
    # https://stackoverflow.com/questions/5234090/how-to-take-the-first-n-items-from-a-generator-or-list-in-python
    # https://stackoverflow.com/questions/4152376/how-to-get-the-n-next-values-of-a-generator-in-a-list-python
    assert list(itertools.islice(counter(), 5)) == [0, 1, 2, 3, 4]
    assert list(itertools.islice(counter(4), 5)) == [0, 1, 2, 3]


if __name__ == '__main__':
=================
4152376
count:1
    else:
        while count < stop:
            yield count
            count = count + 1


def get_the_n_next_values_of_a_generator():
    # References:
    # https://stackoverflow.com/questions/5234090/how-to-take-the-first-n-items-from-a-generator-or-list-in-python
    # https://stackoverflow.com/questions/4152376/how-to-get-the-n-next-values-of-a-generator-in-a-list-python
    assert list(itertools.islice(counter(), 5)) == [0, 1, 2, 3, 4]
    assert list(itertools.islice(counter(4), 5)) == [0, 1, 2, 3]


if __name__ == '__main__':
=================
22055500
count:1
    "sep = os.path.sep\n",
    "\n",
    "p(escape('.gitignore'))\n",
    "p(fnmatch('.gitignore', '.gitignore'))\n",
    "p(fnmatch('.vs' + sep, '.vs' + sep))\n",
    "p(fnmatch('.vs' + sep, '[.]vs' + sep))\n",
    "\n",
    "\n",
    "# References:\n",
    "# https://stackoverflow.com/questions/22055500/python-glob-issues-with-directory-with-in-name\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
=================
1561214
count:1

# 2017-11-02T14:36+08:00

from itertools_notes import counter
    


def reverse_a_generator():
    # References:
    # https://stackoverflow.com/questions/1561214/python-reverse-generator
    assert list(reversed(list(counter(5)))) == [4, 3, 2, 1, 0]
    assert list(reversed([0, 1, 2, 3])) == [3, 2, 1, 0]
    # It is impossible to reverse a generator like `counter(None)`


if __name__ == '__main__':
=================
6608535
count:1
    
    ecg_to_dcm(r'E:\data\1\20110607153002.dat')
    ecg_to_dcm(r'd:\20120503152310.dat')

# References:
# DICOM 2015a PS3.5 7.4 Data Element Type
# DICOM 2015a PS3.5 8.3 Waveform Data and Related Data Elements
# DICOM 2015a PS3.6 6 Registry of DICOM Data Elements
# [DICOM Waveform Generator](http://libir.tmu.edu.tw/bitstream/987654321/21661/1/B09.pdf)
# [Mandatory Tags for DICOM Instance](http://stackoverflow.com/questions/6608535/mandatory-tags-for-dicom-instance)
# [Questions regarding the DICOM file](http://fixunix.com/dicom/50267-questions-regarding-dicom-file.html)
=================
1434918
count:1
    ecg_to_dcm(r'd:\20120503152310.dat')

# References:
# DICOM 2015a PS3.5 7.4 Data Element Type
# DICOM 2015a PS3.5 8.3 Waveform Data and Related Data Elements
# DICOM 2015a PS3.6 6 Registry of DICOM Data Elements
# [DICOM Waveform Generator](http://libir.tmu.edu.tw/bitstream/987654321/21661/1/B09.pdf)
# [Mandatory Tags for DICOM Instance](http://stackoverflow.com/questions/6608535/mandatory-tags-for-dicom-instance)
# [Questions regarding the DICOM file](http://fixunix.com/dicom/50267-questions-regarding-dicom-file.html)
=================
21017698
count:1

import struct

print(struct.pack('I', num))
print("Little endian:", struct.pack('<I', num))
print("Big endian:", struct.pack('>I', num))


# References:
# [Converting int to bytes in Python 3](https://stackoverflow.com/questions/21017698/converting-int-to-bytes-in-python-3)
# [How to convert integer value to array of four bytes in python](https://stackoverflow.com/questions/6187699/how-to-convert-integer-value-to-array-of-four-bytes-in-python)
=================
6187699
count:1
import struct

print(struct.pack('I', num))
print("Little endian:", struct.pack('<I', num))
print("Big endian:", struct.pack('>I', num))


# References:
# [Converting int to bytes in Python 3](https://stackoverflow.com/questions/21017698/converting-int-to-bytes-in-python-3)
# [How to convert integer value to array of four bytes in python](https://stackoverflow.com/questions/6187699/how-to-convert-integer-value-to-array-of-four-bytes-in-python)
=================
37571622
count:1
print(np.dot([[3,1], [1,2]], [2,3]))

print(result)
plot(result)


# References:
# https://dsp.stackexchange.com/questions/11466/differences-between-python-and-matlab-filtfilt-function
# MATLAB: doc filter
=================
11430863
count:1
import re

# findall: Return all non-overlapping matches of pattern in string
print(re.findall(r'aba','cababadddd'))

# In order to do overlapping searching, we can use lookahead assertion.
print(re.findall(r'(?=(aba))','cababadddd'))

# References:
# [How to find overlapping matches with a regexp?](http://stackoverflow.com/questions/11430863/how-to-find-overlapping-matches-with-a-regexp)
# [Overlapping regex matches](http://stackoverflow.com/questions/15799332/overlapping-regex-matches)
=================
15799332
count:1

# findall: Return all non-overlapping matches of pattern in string
print(re.findall(r'aba','cababadddd'))

# In order to do overlapping searching, we can use lookahead assertion.
print(re.findall(r'(?=(aba))','cababadddd'))

# References:
# [How to find overlapping matches with a regexp?](http://stackoverflow.com/questions/11430863/how-to-find-overlapping-matches-with-a-regexp)
# [Overlapping regex matches](http://stackoverflow.com/questions/15799332/overlapping-regex-matches)
=================
5616822
count:1
# findall: Return all non-overlapping matches of pattern in string
print(re.findall(r'aba','cababadddd'))

# In order to do overlapping searching, we can use lookahead assertion.
print(re.findall(r'(?=(aba))','cababadddd'))

# References:
# [How to find overlapping matches with a regexp?](http://stackoverflow.com/questions/11430863/how-to-find-overlapping-matches-with-a-regexp)
# [Overlapping regex matches](http://stackoverflow.com/questions/15799332/overlapping-regex-matches)
=================
1035340
count:1
    '''Calculate the MD5 digest of given file.

    file_name: Specify the target file whose MD5 you want to calculate
    size: Each time read size bytes from the file
    upper: Will the result upper-case or not
    '''
    md5_inst = hashlib.md5()
    with open(file_name, 'rb') as fp:
        # Read a binary file elegantly:
        # http://stackoverflow.com/questions/1035340/reading-binary-file-in-python
        # or you want to make a binary file object iterable?
        # http://stackoverflow.com/questions/4566498/python-file-iterator-over-a-binary-file-with-newer-idiom
        data = fp.read(size)
        while data:
            md5_inst.update(data)
            data = fp.read(size)
    return md5_inst.hexdigest().upper() if upper else \
           md5_inst.hexdigest()

@utility.benchmark(1)
=================
4566498
count:1
    file_name: Specify the target file whose MD5 you want to calculate
    size: Each time read size bytes from the file
    upper: Will the result upper-case or not
    '''
    md5_inst = hashlib.md5()
    with open(file_name, 'rb') as fp:
        # Read a binary file elegantly:
        # http://stackoverflow.com/questions/1035340/reading-binary-file-in-python
        # or you want to make a binary file object iterable?
        # http://stackoverflow.com/questions/4566498/python-file-iterator-over-a-binary-file-with-newer-idiom
        data = fp.read(size)
        while data:
            md5_inst.update(data)
            data = fp.read(size)
    return md5_inst.hexdigest().upper() if upper else \
           md5_inst.hexdigest()

@utility.benchmark(1)
def put_test(conn, db, collection_name, file_name):
    md5 = get_file_md5(file_name)
=================
273192
count:1
    prog = os.path.basename(__file__)
    ResourceCrawler(prog, __version__).run()


if __name__ == '__main__':
    main()


# References:
# https://stackoverflow.com/questions/273192/how-can-i-create-a-directory-if-it-does-not-exist
# https://stackoverflow.com/questions/8357098/how-can-i-check-if-a-url-is-absolute-using-python
# Ongoing-Study/python/notes/os.path.ipynb
# https://stackoverflow.com/questions/37748105/how-to-use-progressbar-module-with-urlretrieve
# http://docopt.org/
# https://github.com/docopt/docopt
# https://stackoverflow.com/questions/4533304/python-urlretrieve-limit-rate-and-resume-partial-download
# https://stackoverflow.com/questions/2021519/download-file-using-urllib-in-python-with-the-wget-c-feature
=================
8357098
count:1
    ResourceCrawler(prog, __version__).run()


if __name__ == '__main__':
    main()


# References:
# https://stackoverflow.com/questions/273192/how-can-i-create-a-directory-if-it-does-not-exist
# https://stackoverflow.com/questions/8357098/how-can-i-check-if-a-url-is-absolute-using-python
# Ongoing-Study/python/notes/os.path.ipynb
# https://stackoverflow.com/questions/37748105/how-to-use-progressbar-module-with-urlretrieve
# http://docopt.org/
# https://github.com/docopt/docopt
# https://stackoverflow.com/questions/4533304/python-urlretrieve-limit-rate-and-resume-partial-download
# https://stackoverflow.com/questions/2021519/download-file-using-urllib-in-python-with-the-wget-c-feature
=================
37748105
count:1

if __name__ == '__main__':
    main()


# References:
# https://stackoverflow.com/questions/273192/how-can-i-create-a-directory-if-it-does-not-exist
# https://stackoverflow.com/questions/8357098/how-can-i-check-if-a-url-is-absolute-using-python
# Ongoing-Study/python/notes/os.path.ipynb
# https://stackoverflow.com/questions/37748105/how-to-use-progressbar-module-with-urlretrieve
# http://docopt.org/
# https://github.com/docopt/docopt
# https://stackoverflow.com/questions/4533304/python-urlretrieve-limit-rate-and-resume-partial-download
# https://stackoverflow.com/questions/2021519/download-file-using-urllib-in-python-with-the-wget-c-feature
=================
4533304
count:1


# References:
# https://stackoverflow.com/questions/273192/how-can-i-create-a-directory-if-it-does-not-exist
# https://stackoverflow.com/questions/8357098/how-can-i-check-if-a-url-is-absolute-using-python
# Ongoing-Study/python/notes/os.path.ipynb
# https://stackoverflow.com/questions/37748105/how-to-use-progressbar-module-with-urlretrieve
# http://docopt.org/
# https://github.com/docopt/docopt
# https://stackoverflow.com/questions/4533304/python-urlretrieve-limit-rate-and-resume-partial-download
# https://stackoverflow.com/questions/2021519/download-file-using-urllib-in-python-with-the-wget-c-feature
=================
2021519
count:1

# References:
# https://stackoverflow.com/questions/273192/how-can-i-create-a-directory-if-it-does-not-exist
# https://stackoverflow.com/questions/8357098/how-can-i-check-if-a-url-is-absolute-using-python
# Ongoing-Study/python/notes/os.path.ipynb
# https://stackoverflow.com/questions/37748105/how-to-use-progressbar-module-with-urlretrieve
# http://docopt.org/
# https://github.com/docopt/docopt
# https://stackoverflow.com/questions/4533304/python-urlretrieve-limit-rate-and-resume-partial-download
# https://stackoverflow.com/questions/2021519/download-file-using-urllib-in-python-with-the-wget-c-feature
=================
696047
count:1
            print('Save "{0}" as "{1}".'.format(res_uri, res_fullpath))


if __name__ == '__main__':
    url = 'http://www.pythonscraping.com/pages/page3.html'
    fetch_page(url, '.\\temp', False)


# References:
=================
1047580
count:1
    
    debug_print(ds)
    return ds


if __name__ == '__main__':    
    dataset = fetch_patient_info(r'testdb.configuration', criteria_arg='0002', extra_elems_dict={})

# References:
# [MS Access library for python](http://stackoverflow.com/questions/1047580/ms-access-library-for-python)
# [Microsoft Access ODBC Driver connection strings](https://www.connectionstrings.com/microsoft-access-odbc-driver/)
=================
1611799
count:1
    return ds


if __name__ == '__main__':    
    dataset = fetch_patient_info(r'testdb.configuration', criteria_arg='0002', extra_elems_dict={})

# References:
# [MS Access library for python](http://stackoverflow.com/questions/1047580/ms-access-library-for-python)
# [Microsoft Access ODBC Driver connection strings](https://www.connectionstrings.com/microsoft-access-odbc-driver/)
=================
2386772
count:1
# -*- coding: utf-8 -*-

# 2015-01-04T13:18+08:00

# A Python implementation of Kahan summation algorithm.
# I read about this algorithm on:
# http://stackoverflow.com/questions/2386772/difference-between-float-and-double
# (I read about math.fsum on this page too.)
# For more details of this algorithm, see:
# http://en.wikipedia.org/wiki/Kahan_summation_algorithm
# The doc of math.fsum in Python 3.4.2 documentation also mention this page:
# ASPN cookbook recipes for accurate floating point summation: http://code.activestate.com/recipes/393090/

# 2015-07-27T13:51+08:00
# Ongoing-Study/cpp/Boost/Accumulators/KahanSum


=================
5495492
count:1

    data = b'%\x9f\x88\x94\xa9\xc1\x08f-yG\x1d?P\x8d\xc0\xdak\xc9\xb9'
    print(base64_c.base64_encode(data))
    print(base64.b64encode(data))

    unittest.main()


# References:
=================
28941133
count:1
    do_test(b'Hello, world')
    do_test(b'Hello, world!')
    do_test(b'Hello, world!', B64F_NORMAL | B64F_NO_PADDING)
    do_test(b'\x04B<\x96\xaa\x0e\xdae\x94U{\xd5]\xaat\xb6\xd5_')
    do_test(b'\x99\x00`\xd2R\xae')
    do_test(b'\xce_{\xad')


# References:
# https://stackoverflow.com/questions/28941133/what-is-the-encoding-of-the-subprocess-module-output-in-python-2-7
# https://stackoverflow.com/questions/20950612/python-ctypes-integer-pointer
# https://stackoverflow.com/questions/26277322/passing-arrays-with-ctypes
# https://stackoverflow.com/questions/33813272/python-ctypes-pass-c-void-p-as-an-out-parameter-to-c-function
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
=================
20950612
count:1
    do_test(b'Hello, world!')
    do_test(b'Hello, world!', B64F_NORMAL | B64F_NO_PADDING)
    do_test(b'\x04B<\x96\xaa\x0e\xdae\x94U{\xd5]\xaat\xb6\xd5_')
    do_test(b'\x99\x00`\xd2R\xae')
    do_test(b'\xce_{\xad')


# References:
# https://stackoverflow.com/questions/28941133/what-is-the-encoding-of-the-subprocess-module-output-in-python-2-7
# https://stackoverflow.com/questions/20950612/python-ctypes-integer-pointer
# https://stackoverflow.com/questions/26277322/passing-arrays-with-ctypes
# https://stackoverflow.com/questions/33813272/python-ctypes-pass-c-void-p-as-an-out-parameter-to-c-function
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
=================
26277322
count:1
    do_test(b'Hello, world!', B64F_NORMAL | B64F_NO_PADDING)
    do_test(b'\x04B<\x96\xaa\x0e\xdae\x94U{\xd5]\xaat\xb6\xd5_')
    do_test(b'\x99\x00`\xd2R\xae')
    do_test(b'\xce_{\xad')


# References:
# https://stackoverflow.com/questions/28941133/what-is-the-encoding-of-the-subprocess-module-output-in-python-2-7
# https://stackoverflow.com/questions/20950612/python-ctypes-integer-pointer
# https://stackoverflow.com/questions/26277322/passing-arrays-with-ctypes
# https://stackoverflow.com/questions/33813272/python-ctypes-pass-c-void-p-as-an-out-parameter-to-c-function
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
=================
33813272
count:1
    do_test(b'\x04B<\x96\xaa\x0e\xdae\x94U{\xd5]\xaat\xb6\xd5_')
    do_test(b'\x99\x00`\xd2R\xae')
    do_test(b'\xce_{\xad')


# References:
# https://stackoverflow.com/questions/28941133/what-is-the-encoding-of-the-subprocess-module-output-in-python-2-7
# https://stackoverflow.com/questions/20950612/python-ctypes-integer-pointer
# https://stackoverflow.com/questions/26277322/passing-arrays-with-ctypes
# https://stackoverflow.com/questions/33813272/python-ctypes-pass-c-void-p-as-an-out-parameter-to-c-function
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
=================
46171507
count:1
    do_test(b'\x99\x00`\xd2R\xae')
    do_test(b'\xce_{\xad')


# References:
# https://stackoverflow.com/questions/28941133/what-is-the-encoding-of-the-subprocess-module-output-in-python-2-7
# https://stackoverflow.com/questions/20950612/python-ctypes-integer-pointer
# https://stackoverflow.com/questions/26277322/passing-arrays-with-ctypes
# https://stackoverflow.com/questions/33813272/python-ctypes-pass-c-void-p-as-an-out-parameter-to-c-function
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
# https://stackoverflow.com/questions/24912065/how-to-access-data-from-pointer-in-struct-from-python-with-ctypes
=================
16676739
count:1
    do_test(b'\xce_{\xad')


# References:
# https://stackoverflow.com/questions/28941133/what-is-the-encoding-of-the-subprocess-module-output-in-python-2-7
# https://stackoverflow.com/questions/20950612/python-ctypes-integer-pointer
# https://stackoverflow.com/questions/26277322/passing-arrays-with-ctypes
# https://stackoverflow.com/questions/33813272/python-ctypes-pass-c-void-p-as-an-out-parameter-to-c-function
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
# https://stackoverflow.com/questions/24912065/how-to-access-data-from-pointer-in-struct-from-python-with-ctypes
# https://stackoverflow.com/questions/54357920/python-ctypes-create-bytearray-from-void
=================
1546355
count:1


# References:
# https://stackoverflow.com/questions/28941133/what-is-the-encoding-of-the-subprocess-module-output-in-python-2-7
# https://stackoverflow.com/questions/20950612/python-ctypes-integer-pointer
# https://stackoverflow.com/questions/26277322/passing-arrays-with-ctypes
# https://stackoverflow.com/questions/33813272/python-ctypes-pass-c-void-p-as-an-out-parameter-to-c-function
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
# https://stackoverflow.com/questions/24912065/how-to-access-data-from-pointer-in-struct-from-python-with-ctypes
# https://stackoverflow.com/questions/54357920/python-ctypes-create-bytearray-from-void
=================
1615813
count:1
# https://stackoverflow.com/questions/28941133/what-is-the-encoding-of-the-subprocess-module-output-in-python-2-7
# https://stackoverflow.com/questions/20950612/python-ctypes-integer-pointer
# https://stackoverflow.com/questions/26277322/passing-arrays-with-ctypes
# https://stackoverflow.com/questions/33813272/python-ctypes-pass-c-void-p-as-an-out-parameter-to-c-function
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
# https://stackoverflow.com/questions/24912065/how-to-access-data-from-pointer-in-struct-from-python-with-ctypes
# https://stackoverflow.com/questions/54357920/python-ctypes-create-bytearray-from-void
=================
6221001
count:1
# https://stackoverflow.com/questions/20950612/python-ctypes-integer-pointer
# https://stackoverflow.com/questions/26277322/passing-arrays-with-ctypes
# https://stackoverflow.com/questions/33813272/python-ctypes-pass-c-void-p-as-an-out-parameter-to-c-function
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
# https://stackoverflow.com/questions/24912065/how-to-access-data-from-pointer-in-struct-from-python-with-ctypes
# https://stackoverflow.com/questions/54357920/python-ctypes-create-bytearray-from-void
=================
18679264
count:1
# https://stackoverflow.com/questions/26277322/passing-arrays-with-ctypes
# https://stackoverflow.com/questions/33813272/python-ctypes-pass-c-void-p-as-an-out-parameter-to-c-function
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
# https://stackoverflow.com/questions/24912065/how-to-access-data-from-pointer-in-struct-from-python-with-ctypes
# https://stackoverflow.com/questions/54357920/python-ctypes-create-bytearray-from-void
=================
1363163
count:1
# https://stackoverflow.com/questions/33813272/python-ctypes-pass-c-void-p-as-an-out-parameter-to-c-function
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
# https://stackoverflow.com/questions/24912065/how-to-access-data-from-pointer-in-struct-from-python-with-ctypes
# https://stackoverflow.com/questions/54357920/python-ctypes-create-bytearray-from-void
=================
15377338
count:1
# https://stackoverflow.com/questions/46171507/passing-a-byte-array-to-a-c-function-that-accepts-a-void-pointer
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
# https://stackoverflow.com/questions/24912065/how-to-access-data-from-pointer-in-struct-from-python-with-ctypes
# https://stackoverflow.com/questions/54357920/python-ctypes-create-bytearray-from-void
=================
24912065
count:1
# https://stackoverflow.com/questions/16676739/python-ctypes-how-to-pass-void-as-argument
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
# https://stackoverflow.com/questions/24912065/how-to-access-data-from-pointer-in-struct-from-python-with-ctypes
# https://stackoverflow.com/questions/54357920/python-ctypes-create-bytearray-from-void
=================
54357920
count:1
# https://stackoverflow.com/questions/1546355/using-enums-in-ctypes-structure
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
# https://stackoverflow.com/questions/24912065/how-to-access-data-from-pointer-in-struct-from-python-with-ctypes
# https://stackoverflow.com/questions/54357920/python-ctypes-create-bytearray-from-void
=================
1825715
count:1
# http://code.activestate.com/recipes/576415/
# https://github.com/ActiveState/code/blob/master/recipes/Python/576415_ctype_Enumeration_class/recipe-576415.py
# https://stackoverflow.com/questions/1615813/how-to-use-c-classes-with-ctypes
# https://stackoverflow.com/questions/6221001/calling-uname-from-libc-with-pythons-ctypes
# https://stackoverflow.com/questions/18679264/how-to-use-malloc-and-free-with-python-ctypes
# https://stackoverflow.com/questions/1363163/pointers-and-arrays-in-python-ctypes
# https://stackoverflow.com/questions/15377338/convert-ctype-byte-array-to-bytes
# https://stackoverflow.com/questions/24912065/how-to-access-data-from-pointer-in-struct-from-python-with-ctypes
# https://stackoverflow.com/questions/54357920/python-ctypes-create-bytearray-from-void
=================
952914
count:1
    #data = [num[0] for num in struct.iter_unpack('<d', raw_data)]
    #data = list(itertools.chain.from_iterable(struct.iter_unpack('<d', raw_data)))
    do_test(np.array(data), mph=0.05, mpd=100, show=True)

if __name__ == '__main__':
    main()


# References:
=================
42950256
count:1
    ind = np.array(ind)
    
    if show:
        _plot(x, mph, mpd, threshold, edge, valley, ax, np.array(ind), 'FindPeaks(C++)')

    return ind


# References:
=================
41709257
count:1
indices = np.array(indices)

plt.plot(data)
plt.plot(indices, data[indices], 'r+')

plt.show()


# References:
# https://stackoverflow.com/questions/41709257/how-to-change-the-plot-line-color-from-blue-to-black
=================
8409095
count:1

plt.plot(data)
plt.plot(indices, data[indices], 'r+')

plt.show()


# References:
# https://stackoverflow.com/questions/41709257/how-to-change-the-plot-line-color-from-blue-to-black
=================
25150955
count:1
    release_dir = os.path.join(target_dir, 'Release')
    for exe in os.listdir(release_dir):
        if exe.endswith('.exe'):
            print('{0} Run {1} {0}'.format('-' * ((79 - len(exe) - 6) // 2), exe))
            subprocess.run(os.path.join(release_dir, exe))


# References:
# Python 3.6.4 Documentation/7.2.3. Standard Encodings
# https://stackoverflow.com/questions/25150955/python-iterating-through-object-attributes
# https://stackoverflow.com/questions/18239373/python-writing-a-ucs-2-little-endian-utf-16-le-file-with-bom
# https://stackoverflow.com/questions/22459020/python-decode-utf-16-file-with-bom
# https://stackoverflow.com/questions/2492077/output-unicode-strings-in-windows-console-app
# https://www.codeproject.com/articles/34068/unicode-output-to-the-windows-console
# https://stackoverflow.com/questions/2849010/output-unicode-to-console-using-c-in-windows
=================
18239373
count:1
    for exe in os.listdir(release_dir):
        if exe.endswith('.exe'):
            print('{0} Run {1} {0}'.format('-' * ((79 - len(exe) - 6) // 2), exe))
            subprocess.run(os.path.join(release_dir, exe))


# References:
# Python 3.6.4 Documentation/7.2.3. Standard Encodings
# https://stackoverflow.com/questions/25150955/python-iterating-through-object-attributes
# https://stackoverflow.com/questions/18239373/python-writing-a-ucs-2-little-endian-utf-16-le-file-with-bom
# https://stackoverflow.com/questions/22459020/python-decode-utf-16-file-with-bom
# https://stackoverflow.com/questions/2492077/output-unicode-strings-in-windows-console-app
# https://www.codeproject.com/articles/34068/unicode-output-to-the-windows-console
# https://stackoverflow.com/questions/2849010/output-unicode-to-console-using-c-in-windows
=================
22459020
count:1
        if exe.endswith('.exe'):
            print('{0} Run {1} {0}'.format('-' * ((79 - len(exe) - 6) // 2), exe))
            subprocess.run(os.path.join(release_dir, exe))


# References:
# Python 3.6.4 Documentation/7.2.3. Standard Encodings
# https://stackoverflow.com/questions/25150955/python-iterating-through-object-attributes
# https://stackoverflow.com/questions/18239373/python-writing-a-ucs-2-little-endian-utf-16-le-file-with-bom
# https://stackoverflow.com/questions/22459020/python-decode-utf-16-file-with-bom
# https://stackoverflow.com/questions/2492077/output-unicode-strings-in-windows-console-app
# https://www.codeproject.com/articles/34068/unicode-output-to-the-windows-console
# https://stackoverflow.com/questions/2849010/output-unicode-to-console-using-c-in-windows
=================
2492077
count:1
            print('{0} Run {1} {0}'.format('-' * ((79 - len(exe) - 6) // 2), exe))
            subprocess.run(os.path.join(release_dir, exe))


# References:
# Python 3.6.4 Documentation/7.2.3. Standard Encodings
# https://stackoverflow.com/questions/25150955/python-iterating-through-object-attributes
# https://stackoverflow.com/questions/18239373/python-writing-a-ucs-2-little-endian-utf-16-le-file-with-bom
# https://stackoverflow.com/questions/22459020/python-decode-utf-16-file-with-bom
# https://stackoverflow.com/questions/2492077/output-unicode-strings-in-windows-console-app
# https://www.codeproject.com/articles/34068/unicode-output-to-the-windows-console
# https://stackoverflow.com/questions/2849010/output-unicode-to-console-using-c-in-windows
=================
2849010
count:1


# References:
# Python 3.6.4 Documentation/7.2.3. Standard Encodings
# https://stackoverflow.com/questions/25150955/python-iterating-through-object-attributes
# https://stackoverflow.com/questions/18239373/python-writing-a-ucs-2-little-endian-utf-16-le-file-with-bom
# https://stackoverflow.com/questions/22459020/python-decode-utf-16-file-with-bom
# https://stackoverflow.com/questions/2492077/output-unicode-strings-in-windows-console-app
# https://www.codeproject.com/articles/34068/unicode-output-to-the-windows-console
# https://stackoverflow.com/questions/2849010/output-unicode-to-console-using-c-in-windows
=================
279237
count:4

# Test whether a CONNECT with a too-long client id results in the correct CONNACK packet.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-invalid-id-test-", keepalive=keepalive)
connack_packet = mosq_test.gen_connack(rc=2)
=================
279237
count:5

# Test whether a connection is denied if it provides just a username when it
# needs a username and password.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-test", keepalive=keepalive, username="user")
connack_packet = mosq_test.gen_connack(rc=4)
=================
279237
count:4

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
mid = 53
keepalive = 60
connect_packet_ok = mosq_test.gen_connect("will-acl-test", keepalive=keepalive, will_topic="ok", will_payload="should be ok")
=================
279237
count:5

# Test whether a connection is denied if it provides a correct username but
# incorrect password.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="user", password="password9")
connack_packet = mosq_test.gen_connack(rc=4)
=================
279237
count:5

# Test whether a connection is successful with correct username and password
# when using a simple auth_plugin.

import subprocess
import socket
import time

import inspect, os, sys
# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

import mosq_test

rc = 1
keepalive = 10
connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="test-username", password="wrong")
connack_packet = mosq_test.gen_connack(rc=4)
=================
279237
count:8

import inspect
import os
import subprocess
import sys
import time

# From http://stackoverflow.com/questions/279237/python-import-a-module-from-a-folder
cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))
if cmd_subfolder not in sys.path:
    sys.path.insert(0, cmd_subfolder)

rc = 1

client_args = sys.argv[1:]
env = dict(os.environ)
env['LD_LIBRARY_PATH'] = '../../lib:../../lib/cpp'
try:
=================
1109536
count:1

Main source:
https://github.com/Toblerity/Shapely/blob/master/docs/code/buffer.py

Additional sources:
https://pypi.python.org/pypi/descartes/
http://toblerity.org/shapely/manual.html#object.buffer
http://stackoverflow.com/questions/1109536/an-algorithm-for-inflating-deflating-offsetting-buffering-polygons

Author: Toblerity, Perry Roth-Johnson
Last modified: August 29, 2013

"""


import numpy as np
from matplotlib import pyplot
from shapely.geometry import LineString, Polygon
=================
1109536
count:1

Main source:
https://github.com/Toblerity/Shapely/blob/master/docs/code/buffer.py

Additional sources:
https://pypi.python.org/pypi/descartes/
http://toblerity.org/shapely/manual.html#object.buffer
http://stackoverflow.com/questions/1109536/an-algorithm-for-inflating-deflating-offsetting-buffering-polygons

Author: Toblerity, Perry Roth-Johnson
Last modified: October 7, 2013

"""


import numpy as np
from matplotlib import pyplot
from shapely.geometry import LineString, Polygon
=================
3366569
count:41
   relative to the airfoil centerpoint. The magenta edge should be facing 
   inward.) If you find an element that is oriented incorrectly, note the
   element number, and look up it's element set name from the printout in the
   IPython terminal. Then, move that element set name to a different list in
   this script.
4. Repeat step 3 until your visual inspection suggests that all the edges (and
   layer plane angles) are being assigned correctly.

References:
http://stackoverflow.com/questions/3365171/calculating-the-angle-between-two-lines-without-having-to-calculate-the-slope/3366569#3366569
http://stackoverflow.com/questions/19295725/angle-less-than-180-between-two-segments-lines

"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import lib.grid as gr
reload(gr)
import lib.abaqus_utils2 as au
=================
19295725
count:41
   inward.) If you find an element that is oriented incorrectly, note the
   element number, and look up it's element set name from the printout in the
   IPython terminal. Then, move that element set name to a different list in
   this script.
4. Repeat step 3 until your visual inspection suggests that all the edges (and
   layer plane angles) are being assigned correctly.

References:
http://stackoverflow.com/questions/3365171/calculating-the-angle-between-two-lines-without-having-to-calculate-the-slope/3366569#3366569
http://stackoverflow.com/questions/19295725/angle-less-than-180-between-two-segments-lines

"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import lib.grid as gr
reload(gr)
import lib.abaqus_utils2 as au
reload(au)
=================
3366569
count:7

Author: Perry Roth-Johnson
Last modified: March 18, 2014

References:
http://stackoverflow.com/questions/3365171/calculating-the-angle-between-two-lines-without-having-to-calculate-the-slope/3366569#3366569
http://stackoverflow.com/questions/19295725/angle-less-than-180-between-two-segments-lines

"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import lib.grid as gr
reload(gr)
import lib.abaqus_utils2 as au
=================
19295725
count:7

Author: Perry Roth-Johnson
Last modified: March 18, 2014

References:
http://stackoverflow.com/questions/3365171/calculating-the-angle-between-two-lines-without-having-to-calculate-the-slope/3366569#3366569
http://stackoverflow.com/questions/19295725/angle-less-than-180-between-two-segments-lines

"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import lib.grid as gr
reload(gr)
import lib.abaqus_utils2 as au
reload(au)
=================
3366569
count:3

Author: Perry Roth-Johnson
Last modified: March 17, 2014

References:
http://stackoverflow.com/questions/3365171/calculating-the-angle-between-two-lines-without-having-to-calculate-the-slope/3366569#3366569
http://stackoverflow.com/questions/19295725/angle-less-than-180-between-two-segments-lines

"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import lib.grid as gr
reload(gr)
import lib.abaqus_utils2 as au
=================
19295725
count:3

Author: Perry Roth-Johnson
Last modified: March 17, 2014

References:
http://stackoverflow.com/questions/3365171/calculating-the-angle-between-two-lines-without-having-to-calculate-the-slope/3366569#3366569
http://stackoverflow.com/questions/19295725/angle-less-than-180-between-two-segments-lines

"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import lib.grid as gr
reload(gr)
import lib.abaqus_utils2 as au
reload(au)
=================
2745329
count:1
### parameters ###
glw=1.0            # global line width
gms=8.0           # global marker size
gmew=1.5           # global marker edge width
gmfc='None'        # global marker face color (none/empty)
mec_ms='red'       # marker edge color for monoplane spars


def extrap1d(interpolator):
    # copied from http://stackoverflow.com/questions/2745329/how-to-make-scipy-interpolate-give-a-an-extrapolated-result-beyond-the-input-ran
    xs = interpolator.x
    ys = interpolator.y
    def pointwise(x):
        if x < xs[0]:
            return ys[0]+(x-xs[0])*(ys[1]-ys[0])/(xs[1]-xs[0])
        elif x > xs[-1]:
            return ys[-1]+(x-xs[-1])*(ys[-1]-ys[-2])/(xs[-1]-xs[-2])
        else:
            return interpolator(x)
    def ufunclike(xs):
=================
6599172
count:1
    """
    source = SCRUBBER_SOURCE_FILENAME
    with TemporaryDirectory() as tmpdirname:
        # ---------------------------------------------------------------------
        # SVG to PNG
        # ---------------------------------------------------------------------
        big_png_filename = join(tmpdirname, "tmp.png")
        log.info(f"Reading source: {source}")
        log.info(f"Writing temporary PNG file: {big_png_filename}")
        # https://stackoverflow.com/questions/6589358/convert-svg-to-png-in-python/6599172#6599172
        # https://cairosvg.org/
        # default size is very big
        svg2png(url=source, write_to=big_png_filename)
        for png_filename, width, height in PNG_TARGETS:
            log.info(f"Writing 48x48 PNG to: {png_filename}")
            svg2png(url=source, write_to=png_filename,
                    output_width=width, output_height=height)

        # ---------------------------------------------------------------------
        # PNG to ICO
=================
45507
count:1
                    output_width=width, output_height=height)

        # ---------------------------------------------------------------------
        # PNG to ICO
        # ---------------------------------------------------------------------
        img = Image.open(big_png_filename)
        for favicon_filename in FAVICON_TARGETS:
            log.info(f"Writing multi-size icon to destination: "
                     f"{favicon_filename}")
            # https://stackoverflow.com/questions/45507/is-there-a-python-library-for-generating-ico-files
            # https://pillow.readthedocs.io/en/3.1.x/handbook/image-file-formats.html#ico
            # ... default sizes are good
            img.save(favicon_filename)

    log.info("... done.")


# =============================================================================
# Command-line entry point
# =============================================================================
=================
13876875
count:1
    if not shutil.which('gdebi'):
        raise AssertionError("Need gdebi (try: sudo apt-get install gdebi)")
    installer = ['sudo', 'gdebi']
    extension = 'deb'
elif LINUX_DIST in ('fedora', 'rhel', 'centos'):
    if not shutil.which('yum'):
        raise AssertionError("Need yum")
    # installer = ['sudo', 'rpm', '-U']  # -U upgrade, equivalent to -i install
    installer = ['yum', '--nogpgcheck', 'localinstall']
    # ... http://stackoverflow.com/questions/13876875
    extension = 'rpm'
else:
    raise AssertionError("Unsupported Linux distribution")

# =============================================================================
# Establish URL
# =============================================================================

if BITS_64:
    arch = 'amd64'
=================
2806897
count:1
    service_supervisord_command restart
}

"""  # noqa


# =============================================================================
# Check prerequisites
# =============================================================================
# http://stackoverflow.com/questions/2806897

if os.geteuid() == 0:
    exit("This script should not be run using sudo or as the root user")

print("Checking prerequisites")
PREREQUISITES = ["dpkg-deb"]
for cmd in PREREQUISITES:
    if shutil.which(cmd) is None:
        error(f"{cmd} command not found; stopping")
        sys.exit(1)
=================
10376206
count:1
# -----------------------------------------------------------------------------
print("Creating preinst file. Will be installed as " +
      join(INFO_DEST_DPKG_DIR, PACKAGE_FOR_DEB + '.preinst'))
# -----------------------------------------------------------------------------
with open(join(DEB_DIR, 'preinst'), 'w') as outfile:
    # NB "#!/usr/bin/env bash" is refused by Lintian; it gives errors like
    # "unknown-control-interpreter" and "forbidden-postrm-interpreter".
    # On Debian, Bash is always /bin/bash.
    # See also
    # https://stackoverflow.com/questions/10376206/what-is-the-preferred-bash-shebang  # noqa
    print(f"""#!/bin/bash
set -e  # Exit on any errors. (Lintian strongly advises this.)

{BASHFUNC}

echo '{PACKAGE_FOR_DEB}: preinst file executing'

stop_supervisord

echo '{PACKAGE_FOR_DEB}: preinst file finished'
=================
10653590
count:1
    # noinspection PyPep8
    print(f"""

; IF YOU EDIT THIS FILE, run:
;       sudo service supervisor restart
; TO MONITOR SUPERVISOR, run:
;       sudo service supervisorctl status
; NOTES:
; - You can't put quotes around the directory variable
;   http://stackoverflow.com/questions/10653590
; - Programs like celery and gunicorn that are installed within a virtual
;   environment use the virtualenv's python via their shebang.

[program:crate-celery-worker]

command = {DEST_VIRTUALENV}/bin/celery worker --app=crate_anon.crateweb.consent --loglevel=info
directory = {DEST_DJANGO_ROOT}
environment = {CRATEWEB_CONFIG_ENV_VAR}="{DEST_CRATEWEB_CONF_FILE}"
# ... no longer used: PYTHONPATH="{DEST_ROOT}"
user = {CRATE_USER}
=================
18969093
count:1
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# https://stackoverflow.com/questions/18969093/how-to-include-the-toctree-in-the-sidebar-of-each-page
html_sidebars = {
    '**': ['globaltoc.html', 'relations.html', 'sourcelink.html',
           'searchbox.html']
}

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'CRATEdoc'

=================
23462494
count:1
# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -----------------------------------------------------------------------------
# RNC: add CSS
# -----------------------------------------------------------------------------
# https://stackoverflow.com/questions/23462494/how-to-add-a-custom-css-file-to-sphinx

def setup(app: Sphinx) -> None:
    app.add_css_file('css/crate_docs.css')  # may also be an URL


# -----------------------------------------------------------------------------
# RNC: autodoc
# -----------------------------------------------------------------------------
# http://www.sphinx-doc.org/en/stable/ext/autodoc.html#confval-autodoc_mock_imports  # noqa
# https://stackoverflow.com/questions/36228537/django-settings-module-not-defined-when-building-sphinx-documentation
=================
36228537
count:1

def setup(app: Sphinx) -> None:
    app.add_css_file('css/crate_docs.css')  # may also be an URL


# -----------------------------------------------------------------------------
# RNC: autodoc
# -----------------------------------------------------------------------------
# http://www.sphinx-doc.org/en/stable/ext/autodoc.html#confval-autodoc_mock_imports  # noqa
# https://stackoverflow.com/questions/36228537/django-settings-module-not-defined-when-building-sphinx-documentation

autodoc_mock_imports = [
    "servicemanager",  # Windows only
    "win32event",  # Windows only
    "win32service",  # Windows only
    "win32serviceutil",  # Windows only
    "winerror",  # Windows only
]

# If extensions (or modules to document with autodoc) are in another directory,
=================
5599254
count:1
# documentation root, use os.path.abspath to make it absolute, like shown here.

# sys.path.insert(0, os.path.join(os.path.abspath('.'), '../../myproj'))

# ... see crate_anon/crateweb/config/settings.py
os.environ['DJANGO_SETTINGS_MODULE'] = 'crate_anon.crateweb.config.settings'
django.setup()


# https://stackoverflow.com/questions/5599254/how-to-use-sphinxs-autodoc-to-document-a-classs-init-self-method  # noqa
autoclass_content = "both"

# To prevent Pyramid SETTINGS breaking:
os.environ["_SPHINX_AUTODOC_IN_PROGRESS"] = "true"

# For "Command killed due to excessive memory consumption" on readthedocs.org:
=================
388595
count:1
    r = requests.post(url, data=request_data, headers=headers,
                      auth=HTTPBasicAuth(username, password))
    # -------------------------------------------------------------------------
    # Process response
    # -------------------------------------------------------------------------
    # - Note that the "requests" module automatically handles "gzip" and
    #   "deflate" transfer-encodings from the server; see
    #   http://docs.python-requests.org/en/master/user/quickstart/.
    # - The difference between gzip and deflate:
    #   https://stackoverflow.com/questions/388595/why-use-deflate-instead-of-gzip-for-text-files-served-by-apache  # noqa
    log.debug(f"Reply has status_code={r.status_code}, headers={r.headers!r}, "
              f"text={r.text!r}")
    try:
        response = NlprpResponse(data=r.text)
        # "r.text" automatically does gzip decode
    except ValueError:  # includes simplejson.errors.JSONDecodeError, json.decoder.JSONDecodeError  # noqa
        fail("Reply was not JSON")
        response = None  # for type checker
    log.debug(f"Response JSON decoded to: {response.dict!r}")
    try:
=================
21666229
count:1
from crate_anon.common.exceptions import call_main_with_exception_reporting
from crate_anon.crateweb.config.constants import CRATEWEB_CELERY_APP_NAME


THIS_DIR = os.path.dirname(os.path.abspath(__file__))
DJANGO_ROOT = os.path.abspath(os.path.join(THIS_DIR, os.pardir, "crateweb"))
WINDOWS = platform.system() == 'Windows'


# http://stackoverflow.com/questions/21666229/celery-auto-reload-on-any-changes
# HOWEVER: autoreload appears (a) not to work, and (b) to prevent processing!


def inner_main() -> None:
    """
    Command-line parser. See command-line help.
    """
    # noinspection PyTypeChecker
    parser = argparse.ArgumentParser(
        description="Launch CRATE Celery processes. "
=================
5033547
count:1
        VARCHAR(MAX_DOCPROC_ID_LEN), primary_key=True,
        comment="Primary key (UUID) for the document/processor pair; also "
                "used as the Celery task ID"
    )  # type: str
    document_id = Column(
        "document_id",
        VARCHAR(MAX_DOC_ID_LEN),
        ForeignKey("documents.document_id", ondelete='CASCADE'),
        # ... delete DocProcRequests when their Documents are deleted
        # ... https://stackoverflow.com/questions/5033547/sqlalchemy-cascade-delete  # noqa
        # ... https://docs.sqlalchemy.org/en/13/orm/collections.html#using-passive-deletes  # noqa
        nullable=False,
        comment="Document ID (FK to documents.document_id)"
    )  # type: str
    processor_id = Column(
        "processor_id",
        VARCHAR(MAX_PROCESSOR_ID_LEN),
        nullable=False,
        comment="Processor ID, in '<name>_<version>' format"
    )  # type: str
=================
909155
count:1
.. code-block:: none

    - AuditTrail
        SequenceID -- PK for AuditTrail
        UserNumber -- FK to GenUser.UserNumber
        ActionDateTime
        AuditAction -- 2 = insert, 3 = update
        RowID -- row number -- how does that work?
            ... cheerfully, SQL Server doesn't have an automatic row ID;
            http://stackoverflow.com/questions/909155/equivalent-of-oracles-rowid-in-sql-server  # noqa
            ... so is it the PK we've already identified and called crate_pk?
        TableNumber -- FK to GenTable.Code
        ClientID -- FK to ClientIndex.ClientID
        ...


"""

import argparse
import logging
=================
2043259
count:1
        basetable: name of the base table from which to look up information
        basecolumn: name of the column in the base table that maps to the PK
            in the lookup table

    Returns:
        an SQL string

    See

    - http://stackoverflow.com/questions/2043259/sql-server-how-to-join-to-first-row
    - http://stackoverflow.com/questions/9275132/real-life-example-when-to-use-outer-cross-apply-in-sql
    """  # noqa
    return (
        f"OUTER APPLY (SELECT TOP 1 {', '.join(lookup_fields)} "
        f"FROM {lookup_table} "
        f"WHERE {lookup_table}.{lookup_key} = {basetable}.{basecolumn}) "
        f"{aliased_lookup_table}"
    )


=================
9275132
count:1
        basecolumn: name of the column in the base table that maps to the PK
            in the lookup table

    Returns:
        an SQL string

    See

    - http://stackoverflow.com/questions/2043259/sql-server-how-to-join-to-first-row
    - http://stackoverflow.com/questions/9275132/real-life-example-when-to-use-outer-cross-apply-in-sql
    """  # noqa
    return (
        f"OUTER APPLY (SELECT TOP 1 {', '.join(lookup_fields)} "
        f"FROM {lookup_table} "
        f"WHERE {lookup_table}.{lookup_key} = {basetable}.{basecolumn}) "
        f"{aliased_lookup_table}"
    )


def simple_lookup_join(viewmaker: ViewMaker,
=================
7778444
count:1
                    'basecolumn': 'Specialty',
                    'lookup_table': 'GenSpecialty',
                    'column_prefix': 'Specialty',  # RCEP
                    'internal_alias_prefix': 'sp',
                }
            },
            {
                'function': simple_view_expr,
                'kwargs': {
                    # http://stackoverflow.com/questions/7778444
                    'expr': 'CAST((MovementTypeFlag & 1) AS BIT)',
                    'alias': 'Consultant_Change_Flag',
                },
            },
            {
                'function': simple_view_expr,
                'kwargs': {
                    'expr': 'CAST((MovementTypeFlag & 2) AS BIT)',
                    'alias': 'Bed_Change_Flag',
                },
=================
449560
count:1
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with CRATE. If not, see <http://www.gnu.org/licenses/>.

===============================================================================

Calculate the size of objects in memory (fast).

From https://stackoverflow.com/questions/449560/how-do-i-determine-the-size-of-an-object-in-python

"""  # noqa

from gc import get_referents
from sys import getsizeof
from types import ModuleType, FunctionType
from typing import Any, List, Set

# Custom objects know their class.
# Function objects seem to know way too much, including modules.
=================
449560
count:1
# Custom objects know their class.
# Function objects seem to know way too much, including modules.
# Exclude modules as well.
DENYLIST = type, ModuleType, FunctionType


def getsize(obj: Any, assume_none_denied: bool = False) -> int:
    """
    Return the total size (in bytes) of the object and its members.
    From https://stackoverflow.com/questions/449560/how-do-i-determine-the-size-of-an-object-in-python
    
    Args:
        obj:
            Object to check.
        assume_none_denied:
            Skip checks for classes/modules/functions. Assume that all objects
            should be checked (typically, meaning that the caller guarantees
            not to pass stuff that doesn't need checking).
    """  # noqa
    if not assume_none_denied:
=================
1611799
count:1
        Args:
            case_sensitive:
                Make the parser case-sensitive for option names?
        """
        kwargs['interpolation'] = None
        kwargs['inline_comment_prefixes'] = ('#', ';')
        # 'converters': Python 3.5 and up
        super().__init__(*args, **kwargs)
        if case_sensitive:
            # https://stackoverflow.com/questions/1611799/preserve-case-in-configparser  # noqa
            self.optionxform = str

    # Use the underlying ConfigParser class for e.g.
    #       getboolean(section, option)

    @staticmethod
    def raise_missing(section: str,
                      option: str) -> None:
        """
        Raise :exc:`ValueError` to complain about a missing parameter.
=================
1835018
count:1
            a list

        """
        default = default or []
        strvalue = self.get(section, option, fallback=None)
        if not strvalue:
            return default
        pyvalue = ast.literal_eval(strvalue)
        # Now, make sure it's a list:
        # http://stackoverflow.com/questions/1835018
        if not isinstance(pyvalue, list):
            configfail(f"Option {option} must evaluate to a Python list "
                       f"using ast.literal_eval()")
        return pyvalue

    def get_database(self,
                     section: str,
                     dbname: str = None,
                     srccfg: "DatabaseSafeConfig" = None,
                     with_session: bool = False,
=================
14630288
count:1
    that do not (e.g. Windows stdout, sometimes).

    Args:
        *objects: things to print
        sep: separator between those objects
        end: print this at the end
        file: file-like object to print to

    See
    http://stackoverflow.com/questions/14630288/unicodeencodeerror-charmap-codec-cant-encode-character-maps-to-undefined

    Examples:

    - Linux, Python 3.6.8 console: ``sys.stdout.encoding == "UTF-8"``
    - Windows, Python 3.7.4 console: ``sys.stdout.encoding == "utf-8"``
    - Windows, Python 3.7.4, from script: ``sys.stdout.encoding == "cp1252"``
    """  # noqa
    enc = file.encoding.lower()
    if enc == 'utf-8':
        print(*objects, sep=sep, end=end, file=file)
=================
11618277
count:1
    - In PostgreSQL, schemas live within databases. Tables can be referred to
      as ``table``, ``schema.table``, or ``database.schema.table``.

      - https://www.postgresql.org/docs/current/static/ddl-schemas.html
      - The default schema is named ``public``.

    - In MySQL, "database" and "schema" are synonymous. Tables can be referred
      to as ``table`` or ``database.table`` (= ``schema.table``).

      - https://stackoverflow.com/questions/11618277/difference-between-schema-database-in-mysql

    """  # noqa
    def __init__(self, db: str = '', schema: str = '') -> None:
        """
        Args:
            db: database name
            schema: schema name
        """
        assert "." not in db, (
            f"Bad database name ({db!r}); can't include '.'"
=================
2523676
count:1

      - i.e. "COLUMN" optional, parentheses required for >1, multiple OK
      - http://dev.mysql.com/doc/refman/5.7/en/alter-table.html

    - MS SQL Server: ``ALTER TABLE ADD COLUMN a INT, B VARCHAR(32);``

      - i.e. no "COLUMN", no parentheses, multiple OK
      - https://msdn.microsoft.com/en-us/library/ms190238.aspx
      - https://msdn.microsoft.com/en-us/library/ms190273.aspx
      - http://stackoverflow.com/questions/2523676

    This function therefore operates one at a time.

    SQLAlchemy doesn't provide a shortcut for this.

    """
    existing_column_names = get_column_names(engine, tablename=table.name,
                                             to_lower=True)
    column_defs = []  # type: List[str]
    for column in columns:
=================
18534919
count:1
    Args:
        engine: SQLAlchemy database Engine
        viewname: view name
        select_sql: SQL SELECT statement for this view
    """
    if engine.dialect.name == 'mysql':
        # MySQL has CREATE OR REPLACE VIEW.
        sql = f"CREATE OR REPLACE VIEW {viewname} AS {select_sql}"
    else:
        # SQL Server doesn't: http://stackoverflow.com/questions/18534919
        drop_view(engine, viewname, quiet=True)
        sql = f"CREATE VIEW {viewname} AS {select_sql}"
    log.info(f"Creating view: {repr(viewname)}")
    execute(engine, sql)


def assert_view_has_same_num_rows(engine: Engine,
                                  basetable: str,
                                  viewname: str) -> None:
    """
=================
2000045
count:1
        viewmaker: optional :class:`ViewMaker`

    Returns:
        modified SQL expression

    *Notes*

    Conversion to INT:

    - http://stackoverflow.com/questions/2000045
    - http://stackoverflow.com/questions/14719760 (this one in particular!)
    - http://stackoverflow.com/questions/14692131

      - see LIKE example.
      - see ISNUMERIC();
        https://msdn.microsoft.com/en-us/library/ms186272.aspx;
        but that includes non-integer numerics

    - https://msdn.microsoft.com/en-us/library/ms174214(v=sql.120).aspx;
      relates to the SQL Server Management Studio "Find and Replace"
=================
14719760
count:1

    Returns:
        modified SQL expression

    *Notes*

    Conversion to INT:

    - http://stackoverflow.com/questions/2000045
    - http://stackoverflow.com/questions/14719760 (this one in particular!)
    - http://stackoverflow.com/questions/14692131

      - see LIKE example.
      - see ISNUMERIC();
        https://msdn.microsoft.com/en-us/library/ms186272.aspx;
        but that includes non-integer numerics

    - https://msdn.microsoft.com/en-us/library/ms174214(v=sql.120).aspx;
      relates to the SQL Server Management Studio "Find and Replace"
      dialogue box, not to SQL itself!
=================
14692131
count:1
    Returns:
        modified SQL expression

    *Notes*

    Conversion to INT:

    - http://stackoverflow.com/questions/2000045
    - http://stackoverflow.com/questions/14719760 (this one in particular!)
    - http://stackoverflow.com/questions/14692131

      - see LIKE example.
      - see ISNUMERIC();
        https://msdn.microsoft.com/en-us/library/ms186272.aspx;
        but that includes non-integer numerics

    - https://msdn.microsoft.com/en-us/library/ms174214(v=sql.120).aspx;
      relates to the SQL Server Management Studio "Find and Replace"
      dialogue box, not to SQL itself!

=================
29206404
count:1
      - see LIKE example.
      - see ISNUMERIC();
        https://msdn.microsoft.com/en-us/library/ms186272.aspx;
        but that includes non-integer numerics

    - https://msdn.microsoft.com/en-us/library/ms174214(v=sql.120).aspx;
      relates to the SQL Server Management Studio "Find and Replace"
      dialogue box, not to SQL itself!

    - http://stackoverflow.com/questions/29206404/mssql-regular-expression

    Note that the regex-like expression supported by LIKE is extremely limited.

    - https://msdn.microsoft.com/en-us/library/ms179859.aspx

    - The only things supported are:

      .. code-block:: none

        %   any characters
=================
712580
count:1
        CASE
            WHEN LTRIM(RTRIM(something)) LIKE '%[^0-9]%' THEN NULL
            ELSE CAST(something AS BIGINT)
        END

    That only works for positive integers.

    LTRIM/RTRIM are not ANSI SQL.
    Nor are unusual LIKE clauses; see
    http://stackoverflow.com/questions/712580/list-of-special-characters-for-sql-like-clause

    The other, for SQL Server 2012 or higher, is TRY_CAST:

    .. code-block:: sql

        TRY_CAST(something AS BIGINT)

    ... which returns NULL upon failure; see
    https://msdn.microsoft.com/en-us/library/hh974669.aspx

=================
5601590
count:1
        CursorWrapper.fetchone = replacement_sqlserver_pyodbc_cursorwrapper_fetchone  # noqa
    except ImportError:
        return


if getattr(
        settings,
        SettingsKeys.DISABLE_DJANGO_PYODBC_AZURE_CURSOR_FETCHONE_NEXTSET,
        True):
    # http://stackoverflow.com/questions/5601590/how-to-define-a-default-value-for-a-custom-django-setting  # noqa
    hack_django_pyodbc_azure_cursorwrapper()


@django_cache_function(timeout=None)
def database_last_updated(dbname: str) -> Optional[datetime.datetime]:
    """
    Returns a datetime object specifying when the database was last run.

    If there are any tables with a column specifying last updated time
    (based on the column name provided in the config file) but all dates
=================
1455126
count:1
    def __repr__(self) -> str:
        return simple_repr(self, ['id', 'user', 'sql', 'args', 'raw', 'qmark',
                                  'active', 'created', 'deleted', 'audited'])

    def save(self, *args, **kwargs) -> None:
        """
        Custom save method. Ensures that only one :class:`Query` has ``active
        == True`` for a given user. Also sets the hash.
        """
        # http://stackoverflow.com/questions/1455126/unique-booleanfield-value-in-django  # noqa
        if self.active:
            Query.objects.filter(user=self.user, active=True)\
                         .update(active=False)
        self.set_formatted_sql()
        self.sql_hash = hash64(self.sql)
        super().save(*args, **kwargs)

    # -------------------------------------------------------------------------
    # SQL queries
    # -------------------------------------------------------------------------
=================
12158463
count:1
        db_column=PatientInfoConstants.MRID_FIELDNAME,
        max_length=get_longest_supported_hasher_output_length())
    trid = models.PositiveIntegerField(
        db_column=PatientInfoConstants.TRID_FIELDNAME)

    class Meta:
        managed = False
        db_table = PatientInfoConstants.SECRET_MAP_TABLENAME

    # https://stackoverflow.com/questions/12158463/how-can-i-make-a-model-read-only  # noqa
    def save(self, *args, **kwargs) -> None:
        return

    def delete(self, *args, **kwargs) -> None:
        return


def get_pid_lookup(dbinfo: SingleResearchDatabase,
                   pid: Union[int, str] = None,
                   mpid: Union[int, str] = None,
=================
49925
count:1
    *Development notes:*

    - Patient ID query

      - Single database is easy; we can use RID or TRID, and therefore TRID for
        performance.

        Note that ``UNION`` gives only ``DISTINCT`` results by default (``UNION
        ALL`` gives everything); see
        http://stackoverflow.com/questions/49925/what-is-the-difference-between-union-and-union-all.

        .. code-block:: sql

            -- Clear, but extensibility of boolean logic less clear:
            SELECT trid
                FROM diagnosis_table
                WHERE diagnosis LIKE 'F20%'
            INTERSECT
            SELECT trid
                FROM progress_note_table
=================
1869753
count:1
        WHERE trid IN ( ... patient_id_query ... )
        ORDER BY trid

      This means we will repeat the patient_id_query, which may be inefficient.
      Options:

      - store the TRIDs in Python, then pass them as arguments

        - at which point the SQL string/packet length becomes relevant;
        - http://stackoverflow.com/questions/1869753/maximum-size-for-a-sql-server-query-in-clause-is-there-a-better-approach
        - http://stackoverflow.com/questions/16335011/what-is-maximum-query-size-for-mysql
        - http://stackoverflow.com/questions/96553/practical-limit-to-length-of-sql-query-specifically-mysql

      - let the database worry about it

        - probably best for now!

    - Display

      - One patient per page, with multiple results tables.
=================
16335011
count:1
        ORDER BY trid

      This means we will repeat the patient_id_query, which may be inefficient.
      Options:

      - store the TRIDs in Python, then pass them as arguments

        - at which point the SQL string/packet length becomes relevant;
        - http://stackoverflow.com/questions/1869753/maximum-size-for-a-sql-server-query-in-clause-is-there-a-better-approach
        - http://stackoverflow.com/questions/16335011/what-is-maximum-query-size-for-mysql
        - http://stackoverflow.com/questions/96553/practical-limit-to-length-of-sql-query-specifically-mysql

      - let the database worry about it

        - probably best for now!

    - Display

      - One patient per page, with multiple results tables.

=================
96553
count:1

      This means we will repeat the patient_id_query, which may be inefficient.
      Options:

      - store the TRIDs in Python, then pass them as arguments

        - at which point the SQL string/packet length becomes relevant;
        - http://stackoverflow.com/questions/1869753/maximum-size-for-a-sql-server-query-in-clause-is-there-a-better-approach
        - http://stackoverflow.com/questions/16335011/what-is-maximum-query-size-for-mysql
        - http://stackoverflow.com/questions/96553/practical-limit-to-length-of-sql-query-specifically-mysql

      - let the database worry about it

        - probably best for now!

    - Display

      - One patient per page, with multiple results tables.

    - Boolean logic on patient selection
=================
13197574
count:1

    def get_xlsx_binary(self) -> bytes:
        """
        Returns an XLSX (Excel) file containing spreadsheets, one for each
        table in our :attr:`patient_multiquery`.

        Other notes:

        - cell size: see
          http://stackoverflow.com/questions/13197574/python-openpyxl-column-width-size-adjust;
          and the "auto_size" / "bestFit" options don't really do the job,
          according to the interweb.

        """  # noqa
        wb = Workbook()
        wb.remove_sheet(wb.active)  # remove the autocreated blank sheet
        sqlsheet_rows = [["Table", "SQL", "Args", "Executed_at"]]
        for tsa in self.patient_multiquery.all_queries():
            table_id = tsa.table_id
            sql = tsa.sql
=================
812925
count:1
    Audit log for access to an archive template.
    """
    id = models.AutoField(primary_key=True)  # automatic
    user = models.ForeignKey(settings.AUTH_USER_MODEL,
                             on_delete=models.CASCADE)
    when = models.DateTimeField(auto_now_add=True)
    patient_id = models.CharField(max_length=ARCHIVE_PATIENT_ID_MAX_LENGTH)
    query_string = models.TextField()
    # ... no max length; see
    # https://stackoverflow.com/questions/812925/what-is-the-maximum-possible-length-of-a-query-string  # noqa

    def __str__(self) -> str:
        return f"<ArchiveTemplateAudit id={self.id}>"


class ArchiveAttachmentAudit(models.Model):
    """
    Audit log for access to an archive attachment.
    """
    id = models.AutoField(primary_key=True)  # automatic
=================
9692665
count:1
                                    qparams: Dict[str, Any]) -> None:
    """
    Adds a file's timestamp to the query parameters that will make up a URL.

    Why? So that if the file is edited, a new URL is generated, and caching
    browsers will automatically refresh.

    See

    - https://stackoverflow.com/questions/9692665/cache-busting-via-params
    - https://docs.python.org/3/library/os.path.html#os.path.getmtime

    Args:
        filepath: full path to file
        qparams: parameter dictionary, which will be modified
    """
    if not isfile(filepath):
        log.error(
            f"add_file_timestamp_to_url_query: nonexistent file {filepath!r}")
        return
=================
866272
count:1

    def get_cleaned_where_value(self) -> Any:
        # Only call this if you've already cleaned/validated the form!
        return self.cleaned_data[self.get_value_fieldname()]

    def clean(self) -> None:
        # Check the WHERE information is sufficient.
        if 'submit_select' in self.data or 'submit_select_star' in self.data:
            # Form submitted via the "Add" method, so no checks required.
            # http://stackoverflow.com/questions/866272/how-can-i-build-multiple-submit-buttons-django-form  # noqa
            return
        if not self.offering_where():
            return
        cleaned_data = super().clean()
        if not cleaned_data['where_op']:
            self.add_error('where_op',
                           forms.ValidationError("Must specify comparison"))

        # No need for a value for NULL-related comparisons. But otherwise:
        where_op = cleaned_data['where_op']
=================
16280918
count:1
        Returns:
            tuple: ``sql, args``

        Notes:

        - SQL Server ``INFORMATION_SCHEMA.COLUMNS``: see
          https://msdn.microsoft.com/en-us/library/ms188348.aspx
        - Re fulltext indexes:

          - http://stackoverflow.com/questions/16280918/how-to-find-full-text-indexing-on-database-in-sql-server-2008
          - ``sys.fulltext_indexes``: https://msdn.microsoft.com/en-us/library/ms186903.aspx
          - ``sys.fulltext_catalogs``: https://msdn.microsoft.com/en-us/library/ms188779.aspx
          - ``sys.fulltext_index_columns``: https://msdn.microsoft.com/en-us/library/ms188335.aspx

        """  # noqa
        if not schema_names:
            raise ValueError("No schema_names specified (for SQL Server "
                             "database)")
        schema_placeholder = ",".join(["?"] * len(schema_names))
        sql = translate_sql_qmark_to_percent(f"""
=================
10335561
count:1
        Args:
            schema_names: a list of schema names within the database

        Returns:
            tuple: ``sql, args``

        Notes:

        - A PostgreSQL connection is always to a single database; see
          http://stackoverflow.com/questions/10335561/use-database-name-command-in-postgresql
        - http://dba.stackexchange.com/questions/75015
        - http://stackoverflow.com/questions/14713774
        - Note that creating a GIN index looks like:

          .. code-block:: sql

            ALTER TABLE t ADD COLUMN tsv_mytext TSVECTOR;
            UPDATE t SET tsv_mytext = to_tsvector(mytext);
            CREATE INDEX idx_t_mytext_gin ON t USING GIN(tsv_mytext);

=================
14713774
count:1

        Returns:
            tuple: ``sql, args``

        Notes:

        - A PostgreSQL connection is always to a single database; see
          http://stackoverflow.com/questions/10335561/use-database-name-command-in-postgresql
        - http://dba.stackexchange.com/questions/75015
        - http://stackoverflow.com/questions/14713774
        - Note that creating a GIN index looks like:

          .. code-block:: sql

            ALTER TABLE t ADD COLUMN tsv_mytext TSVECTOR;
            UPDATE t SET tsv_mytext = to_tsvector(mytext);
            CREATE INDEX idx_t_mytext_gin ON t USING GIN(tsv_mytext);

        - PostgreSQL ``INFORMATION_SCHEMA.COLUMNS``: see
          https://www.postgresql.org/docs/9.1/static/infoschema-columns.html
=================
907806
count:1
            log.warning(
                f"SingleResearchDatabase.get_schema_infodictlist(): no "
                f"results for database/schema {self.schema_identifier!r} "
                f"database - misconfigured?")
        return results
        # Re passing multiple values to SQL via args:
        # - Don't circumvent the parameter protection against SQL injection.
        # - Too much hassle to use Django's ORM model here, though that would
        #   also be possible.
        # - http://stackoverflow.com/questions/907806
        # - Similarly via SQLAlchemy reflection/inspection.


@register_for_json(method=METHOD_NO_ARGS)
class ResearchDatabaseInfo(object):
    """
    Fetches schema information from the research databases. There can be
    several, and this class represents the whole collection.

    Notes:
=================
3151469
count:1
        dict: a dictionary with core information about the request, like the
        currently selected query/Patient Explorer ID for the user.

    Notes:

    - Try to minimize SQL here, as these calls will be used for EVERY
      request.

      - This problem can be circumvented with a per-request cache; see
        http://stackoverflow.com/questions/3151469/per-request-cache-in-django

    """
    query_id = Query.get_active_query_id_or_none(request)
    pe_id = PatientExplorer.get_active_pe_id_or_none(request)
    return {
        'query_selected': query_id is not None,
        'current_query_id': query_id,
        'pe_selected': pe_id is not None,
        'current_pe_id': pe_id,
    }
=================
13090907
count:1
    #
    # - Could switch away from pyodbc, e.g. to Django-mssql [8, 9].
    #   But, as per the CRATE manual, there were version incompatibilities
    #   here. Tried again with v1.8, but it gave configuration errors
    #   (ADODB.Connection; Provider cannot be found. It may not be properly
    #   installed.) Anyway, pyodbc is good enough for SQLAlchemy.
    #
    # [1] https://github.com/michiya/django-pyodbc-azure/blob/azure-1.10/sql_server/pyodbc/base.py  # noqa
    # [2] https://github.com/mkleehammer/pyodbc/blob/master/tests2/informixtests.py  # noqa
    # [3] http://stackoverflow.com/questions/13090907
    # [4] https://docs.python.org/3/c-api/bytes.html
    # [5] https://docs.python.org/3/c-api/unicode.html
    # [6] https://documentation.progress.com/output/DataDirect/DataDirectCloud/index.html#page/queries/microsoft-sql-server-data-types.html  # noqa
    # [7] https://github.com/mkleehammer/pyodbc/wiki/Data-Types
    # [8] https://docs.djangoproject.com/en/1.10/ref/databases/#using-a-3rd-party-database-backend  # noqa
    # [9] https://django-mssql.readthedocs.io/en/latest/

    # Screw it, let's use a hash. We can use our hash64() function and
    # a Django BigIntegerField.

=================
5440657
count:1
            the HTML string to use for database ``NULL`` (Python ``None``)
            values

    Returns:
        str: HTML

    """  # noqa
    # Considered but not implemented: hiding table columns
    # ... see esp "tr > *:nth-child(n)" at
    # http://stackoverflow.com/questions/5440657/how-to-hide-columns-in-html-table  # noqa
    nlptable = False
    if FN_NLPDEF in fieldnames:
        srcdb_ind = srctable_ind = srcfield_ind = None
        srcpkfield_ind = srcpkval_ind = srcpkstr_ind = None
        for i, field in enumerate(fieldnames):
            if field == FN_SRCDB:
                srcdb_ind = i
            elif field == FN_SRCTABLE:
                srctable_ind = i
            elif field == FN_SRCFIELD:
=================
3297048
count:1
            list of PIDs to look up from
        mpids:
            list of MPIDs to look up from

    Returns:
        a :class:`django.http.response.HttpResponse`
    """  # noqa
    # if not request.user.superuser:
    #    return HttpResponse('Forbidden', status=403)
    #    # http://stackoverflow.com/questions/3297048/403-forbidden-vs-401-unauthorized-http-responses  # noqa
    trids = [] if trids is None else trids
    rids = [] if rids is None else rids
    mrids = [] if mrids is None else mrids
    pids = [] if pids is None else pids
    mpids = [] if mpids is None else mpids

    assert dbinfo.secret_lookup_db
    lookups = PidLookup.objects.using(dbinfo.secret_lookup_db).filter(
        Q(trid__in=trids) |
        Q(rid__in=rids) |
=================
12881294
count:1

    Args:
        request: the :class:`django.http.request.HttpRequest`
        pe_id: string form of the integer PK of a
            :class:`crate_anon.crateweb.research.models.PatientExplorer`

    Returns:
        a :class:`django.http.response.HttpResponse`
    """
    # http://stackoverflow.com/questions/12881294/django-create-a-zip-of-multiple-files-and-make-it-downloadable  # noqa
    pe = get_object_or_404(PatientExplorer, id=pe_id)  # type: PatientExplorer
    try:
        response = file_response(
            pe.get_zipped_tsv_binary(),
            content_type=ContentType.ZIP,
            filename="crate_pe_{num}_{datetime}.zip".format(
                num=pe.id,
                datetime=datetime_iso_for_filename(),
            )
        )
=================
16750464
count:1


def login_view(request: HttpRequest) -> HttpResponse:
    """
    Main login view.
    """
    # don't call it login (name clash with django.contrib.auth.login)
    # https://www.fir3net.com/Web-Development/Django/django.html
    # http://www.flagonwiththedragon.com/2011/06/16/django-authenticationform-for-user-login/  # noqa
    # http://stackoverflow.com/questions/16750464/django-redirect-after-login-not-working-next-not-posting  # noqa

    # Where to after a successful login?
    # noinspection PyCallByClass,PyTypeChecker
    nextpage = request.GET.get(UrlKeys.NEXT, reverse(UrlNames.HOME))
    nextpage_quoted = quote_plus(nextpage)
    # log.debug(f"login_view: nextpage: {nextpage}")
    # log.debug(f"login_view: nextpage_quoted: {nextpage_quoted}")

    if request.user.is_authenticated:
        # Authenticated, en route somewhere else.
=================
3151469
count:1
    return {
        'CRATE_DOCS_URL': CRATE_DOCS_URL,
        'HelpUrl': HelpUrl,
        'nav_on_main_menu': False,
        'RESEARCH_DB_TITLE': settings.RESEARCH_DB_TITLE,
    }
    # Try to minimize SQL here (ideally none!), as these calls will be used for
    # EVERY request.
    # This problem can partially be circumvented with a per-request cache; see
    # http://stackoverflow.com/questions/3151469/per-request-cache-in-django
=================
2805701
count:1
        'get_sent', 'get_transmissions',
    )
    fields = readonly_fields  # or other things appear
    date_hierarchy = 'created_at'
    list_display = ('id', 'created_at', 'recipient', 'subject', 'get_sent')
    list_filter = (EmailSentListFilter, )
    search_fields = ('recipient', 'subject')
    actions = ['resend']
    # ... alternative method (per instance):
    # http://stackoverflow.com/questions/2805701/is-there-a-way-to-get-custom-django-admin-actions-to-appear-on-the-change-view  # noqa

    # - We can't use list_select_related for things that have a foreign key to
    #   us (rather than things we have an FK to).
    # - prefetch_related (in the queryset) just uses Python, not SQL.
    # - http://blog.roseman.org.uk/2010/01/11/django-patterns-part-2-efficient-reverse-lookups/  # noqa
    # Anyway, premature optimization is the root of all evil, and all that.

    def get_view_msg_html(self, obj: Email) -> str:
        url = reverse(UrlNames.VIEW_EMAIL_HTML, args=[obj.id])
        return mark_safe(
=================
991926
count:1
                    'study', 'contact_request',
                    'sent_manually_at')
    list_filter = (LetterSendingStatusFilter,
                   'to_clinician', 'to_researcher', 'to_patient')
    list_select_related = (
        'study__lead_researcher',
        'contact_request',
    )
    date_hierarchy = 'created_at'
    # ... see also http://stackoverflow.com/questions/991926/custom-filter-in-django-admin-on-django-1-3-or-below  # noqa
    actions = ['mark_sent']

    def mark_sent(self, request: HttpRequest, queryset: QuerySet) -> None:
        ids = []  # type: List[int]
        for letter in queryset:
            letter.mark_sent()
            ids.append(letter.id)
        self.message_user(
            request,
            f"{len(ids)} letter(s) were marked as sent: IDs {str(ids)}.")
=================
4938491
count:1
    enough_info_for_researcher.short_description = (
        "Enough researcher info?"
    )
    enough_info_for_researcher.boolean = True


# =============================================================================
# Assemble main admin site
# =============================================================================
# http://stackoverflow.com/questions/4938491/django-admin-change-header-django-administration-text  # noqa
# http://stackoverflow.com/questions/3400641/how-do-i-inline-edit-a-django-user-profile-in-the-admin-interface  # noqa

class MgrAdminSite(admin.AdminSite):
    """
    RDBM admin site.
    """
    # Text to put at the end of each page's <title>.
    site_title = ugettext_lazy(settings.RESEARCH_DB_TITLE + ' manager admin')
    # Text to put in each page's <h1>.
    site_header = ugettext_lazy(settings.RESEARCH_DB_TITLE + ": manager admin")
=================
3400641
count:1
        "Enough researcher info?"
    )
    enough_info_for_researcher.boolean = True


# =============================================================================
# Assemble main admin site
# =============================================================================
# http://stackoverflow.com/questions/4938491/django-admin-change-header-django-administration-text  # noqa
# http://stackoverflow.com/questions/3400641/how-do-i-inline-edit-a-django-user-profile-in-the-admin-interface  # noqa

class MgrAdminSite(admin.AdminSite):
    """
    RDBM admin site.
    """
    # Text to put at the end of each page's <title>.
    site_title = ugettext_lazy(settings.RESEARCH_DB_TITLE + ' manager admin')
    # Text to put in each page's <h1>.
    site_header = ugettext_lazy(settings.RESEARCH_DB_TITLE + ": manager admin")
    # URL for the "View site" link at the top of each admin page.
=================
4938491
count:1
mgr_admin_site.register(QueryAudit, QueryMgrAdmin)
mgr_admin_site.register(Study, StudyMgrAdmin)
mgr_admin_site.register(TeamRep, TeamRepMgrAdmin)
mgr_admin_site.register(User, ExtendedUserMgrAdmin)


# =============================================================================
# Assemble secondary (developer) admin site
# =============================================================================
# http://stackoverflow.com/questions/4938491/django-admin-change-header-django-administration-text  # noqa
# http://stackoverflow.com/questions/3400641/how-do-i-inline-edit-a-django-user-profile-in-the-admin-interface  # noqa

class DevAdminSite(admin.AdminSite):
    """
    Developer admin site.
    """
    site_title = ugettext_lazy(settings.RESEARCH_DB_TITLE + ' dev admin')
    site_header = ugettext_lazy(settings.RESEARCH_DB_TITLE +
                                ": developer admin")
    site_url = settings.FORCE_SCRIPT_NAME + "/"
=================
3400641
count:1
mgr_admin_site.register(Study, StudyMgrAdmin)
mgr_admin_site.register(TeamRep, TeamRepMgrAdmin)
mgr_admin_site.register(User, ExtendedUserMgrAdmin)


# =============================================================================
# Assemble secondary (developer) admin site
# =============================================================================
# http://stackoverflow.com/questions/4938491/django-admin-change-header-django-administration-text  # noqa
# http://stackoverflow.com/questions/3400641/how-do-i-inline-edit-a-django-user-profile-in-the-admin-interface  # noqa

class DevAdminSite(admin.AdminSite):
    """
    Developer admin site.
    """
    site_title = ugettext_lazy(settings.RESEARCH_DB_TITLE + ' dev admin')
    site_header = ugettext_lazy(settings.RESEARCH_DB_TITLE +
                                ": developer admin")
    site_url = settings.FORCE_SCRIPT_NAME + "/"
    index_title = ugettext_lazy(settings.RESEARCH_DB_TITLE +
=================
1929707
count:1
res_admin_site.disable_action('delete_selected')
res_admin_site.register(Study, StudyResAdmin)
res_admin_site.register(Leaflet, LeafletResAdmin)
res_admin_site.register(Email, EmailResAdmin)
res_admin_site.register(Letter, LetterResAdmin)
res_admin_site.register(ContactRequest, ContactRequestResAdmin)

"""
Problem with non-superusers not seeing any apps:
- http://stackoverflow.com/questions/1929707/django-admin-not-seeing-any-app-permission-problem  # noqa
  ... but django.contrib.auth.backends.ModelBackend won't load in INSTALLED_APPS  # noqa
- log.debug(f"registered: {res_admin_site.is_registered(Leaflet)!r}")
  ... OK
  ... and anyway, it works for superusers
- app_list is blank in the template; this is set in AdminSite.index()
  (in django/contrib/admin/sites.py)
  So the failure is either in
        model_admin.has_module_permission(request)
            return request.user.has_module_perms(self.opts.app_label)
    or  model_admin.get_model_perms(request)
=================
43893853
count:1
    Returns:
        the URL with query parameters

    Note:

        This does not currently sort query parameters. Doing that might be
        slightly advantageous for caching, i.e. to ensure that
        "path?a=1&b=2" is treated as identical to "path?b=2&a=1". However, it
        is legal for servers to treat them as ordered. See
        https://stackoverflow.com/questions/43893853/http-cache-control-and-params-order.
    """  # noqa
    # Get initial query parameters, if any.
    # log.critical(f"IN: path={path!r}, querydict={querydict!r}, "
    #              f"kwargs={kwargs!r}")
    pr = urllib.parse.urlparse(path)  # type: urllib.parse.ParseResult
    qd = QueryDict(mutable=True)
    if pr.query:
        for k, values in urllib.parse.parse_qs(pr.query).items():
            for v in values:
                qd[k] = v
=================
26221669
count:1
    # Calculate the query string
    if qd:
        querystring = qd.urlencode()
        # for kwargs: querystring = urllib.parse.urlencode(kwargs)
    else:
        querystring = ""

    # Return the final rebuilt URL.
    # You can't write to a urllib.parse.ParseResult. So, as per
    # https://stackoverflow.com/questions/26221669/how-do-i-replace-a-query-with-a-new-value-in-urlparse  # noqa
    # we have do to this:

    components = list(pr)
    components[4] = querystring
    url = urllib.parse.urlunparse(components)
    # log.critical(f"OUT: {url}")
    return url


def site_absolute_url(path: str) -> str:
=================
4150258
count:1
            # ... which is context-dependent: see below

    We need to generate links to our site outside the request environment, e.g.
    for inclusion in e-mails, even when we're generating the e-mails offline
    via Celery. There's no easy way to do this automatically (site path
    information comes in only via requests), so we put it in the settings.

    See also:

    - http://stackoverflow.com/questions/4150258/django-obtaining-the-absolute-url-without-access-to-a-request-object
    - https://fragmentsofcode.wordpress.com/2009/02/24/django-fully-qualified-url/

    **IMPORTANT**

    BEWARE: :func:`reverse` will produce something different inside a request
    and outside it.

    - http://stackoverflow.com/questions/32340806/django-reverse-returns-different-values-when-called-from-wsgi-or-shell

    So the only moderately clean way of doing this is to do this in the Celery
=================
32340806
count:1

    - http://stackoverflow.com/questions/4150258/django-obtaining-the-absolute-url-without-access-to-a-request-object
    - https://fragmentsofcode.wordpress.com/2009/02/24/django-fully-qualified-url/

    **IMPORTANT**

    BEWARE: :func:`reverse` will produce something different inside a request
    and outside it.

    - http://stackoverflow.com/questions/32340806/django-reverse-returns-different-values-when-called-from-wsgi-or-shell

    So the only moderately clean way of doing this is to do this in the Celery
    backend jobs, for anything that uses Django URLs (e.g. :func:`reverse`) --
    NOT necessary for anything using only static URLs (e.g. pictures in PDFs).

    .. code-block:: python

        from django.conf import settings
        from django.urls import set_script_prefix

=================
2636536
count:1
    ENVVAR_GENERATING_CRATE_DOCS,
    RUNNING_WITHOUT_CONFIG,
)
from crate_anon.common.dockerfunc import warn_if_not_within_docker_dir
from crate_anon.crateweb.config.constants import (
    CRATEWEB_CONFIG_ENV_VAR,
    UrlNames,
)

# http://stackoverflow.com/questions/2636536/how-to-make-django-work-with-unsupported-mysql-drivers-such-as-gevent-mysql-or-c  # noqa
try:
    import pymysql
    pymysql.install_as_MySQLdb()
except ImportError:
    pymysql = None

log = logging.getLogger(__name__)


# =============================================================================
=================
6791911
count:1
    res_admin_site,
)
import crate_anon.crateweb.core.auth_views as core_auth_views
import crate_anon.crateweb.core.views as core_views
import crate_anon.crateweb.consent.views as consent_views
import crate_anon.crateweb.research.views as research_views
import crate_anon.crateweb.userprofile.views as userprofile_views

# This is the place for one-time startup code.
# http://stackoverflow.com/questions/6791911/execute-code-when-django-starts-once-only  # noqa
# So we cache things here that we don't want the user to have to wait for:
from crate_anon.crateweb.research.research_db_info import research_database_info  # noqa

research_database_info.get_colinfolist()

log = logging.getLogger(__name__)


urlpatterns = [
    # -------------------------------------------------------------------------
=================
32111203
count:1
    # Other test views
    # -------------------------------------------------------------------------
    # url(r'^404/$', django.views.defaults.page_not_found, ),
]


if settings.DEBUG:
    # Debug toolbar
    # - https://github.com/jazzband/django-debug-toolbar/issues/529
    # - http://stackoverflow.com/questions/32111203/what-is-the-benefit-of-using-django-conf-urls-patterns-versus-a-list-of-url-in-d  # noqa
    urlpatterns += [
        url(r'^__debug__/', include(debug_toolbar.urls)),
    ]

    # Silk
    #
    # urlpatterns += patterns('', url(r'^silk/',
    #                                 include('silk.urls', namespace='silk')))

    # Serve static files for development
=================
11206884
count:1
    decisions.append(f"{len(clinicians)} total past/present "
                     f"clinician(s)/team(s) found: {clinicians!r}.")
    current_clinicians = [c for c in clinicians if c.current()]
    if current_clinicians:
        lookup.pt_discharged = False
        lookup.pt_discharge_date = None
        decisions.append("Patient not discharged.")
        contactable_curr_clin = [c for c in current_clinicians
                                 if c.contactable()]
        # Sorting by two keys: http://stackoverflow.com/questions/11206884
        # LOW priority: most recent clinician. (Goes first in sort.)
        # HIGH priority: preferred type of clinician. (Goes last in sort.)
        # Sort order is: most preferred first.
        contactable_curr_clin.sort(key=attrgetter('start_date'), reverse=True)
        contactable_curr_clin.sort(key=attrgetter('clinician_preference_order'))  # noqa
        decisions.append(f"{len(contactable_curr_clin)} contactable active "
                         f"clinician(s) found.")
        if contactable_curr_clin:
            chosen_clinician = contactable_curr_clin[0]
            lookup.set_from_clinician_info_holder(chosen_clinician)
=================
17313532
count:1

- http://docs.celeryproject.org/en/latest/faq.html#faq-acks-late-vs-retry

- We'll stick with the default (slightly less reliable but won't be run more
  than once).


**Circular imports:**

- http://stackoverflow.com/questions/17313532/django-import-loop-between-celery-tasks-and-my-models

- The potential circularity is:

    - At launch, Celery must import tasks, which could want to import models.

    - At launch, Django loads models, which may use tasks.

- Simplest solution is to keep tasks very simple (as below) and use delayed
  imports here.

=================
26862942
count:1
    (1) existing object
    (2) amend with form
    (3) save()
    (4) call function.delay(obj.id)

  Object is received by Celery in the state before save() at step 3.

- http://celery.readthedocs.org/en/latest/userguide/tasks.html#database-transactions

- http://stackoverflow.com/questions/26862942/django-related-objects-are-missing-from-celery-task-race-condition

- https://code.djangoproject.com/ticket/14051

- https://github.com/aaugustin/django-transaction-signals

- SOLUTION:
  https://docs.djangoproject.com/en/dev/topics/db/transactions/#django.db.transaction.on_commit

  .. code-block:: python

=================
8609192
count:1
        max_upload_size=settings.MAX_UPLOAD_SIZE_BYTES,
        upload_to=study_details_upload_to)
    subject_form_template_pdf = ContentTypeRestrictedFileField(
        blank=True,
        storage=privatestorage,
        content_types=[ContentType.PDF],
        max_upload_size=settings.MAX_UPLOAD_SIZE_BYTES,
        upload_to=study_form_upload_to)
    # http://nemesisdesign.net/blog/coding/django-private-file-upload-and-serving/  # noqa
    # http://stackoverflow.com/questions/8609192/differentiate-null-true-blank-true-in-django  # noqa
    AUTODELETE_OLD_FILE_FIELDS = ['study_details_pdf',
                                  'subject_form_template_pdf']

    class Meta:
        verbose_name_plural = "studies"

    def __str__(self) -> str:
        # noinspection PyUnresolvedReferences
        return (
            f"[Study {self.id}] {self.institutional_id}: "
=================
12822847
count:1
    YELLOW = 'yellow'
    GREEN = 'green'

    VALID_CONSENT_MODES = [RED, YELLOW, GREEN]
    CONSENT_MODE_CHOICES = (
        (RED, 'red'),
        (YELLOW, 'yellow'),
        (GREEN, 'green'),
    )
    # ... http://stackoverflow.com/questions/12822847/best-practice-for-python-django-constants  # noqa

    SOURCE_USER_ENTRY = "crate_user_entry"
    SOURCE_AUTOCREATED = "crate_auto_created"
    SOURCE_LEGACY = "legacy"  # default, for old versions

    nhs_number = models.BigIntegerField(verbose_name="NHS number")
    current = models.BooleanField(default=False)
    # see save() and process_change() below
    created_at = models.DateTimeField(
        verbose_name="When was this record created?",
=================
1455126
count:1
        Custom save method. Ensures that only one :class:`ConsentMode` has
        ``current == True`` for a given patient.

        This is better than a ``get_latest_by`` clause, because with a flag
        like this, we can have a simple query that says "get the current
        records for all patients" -- which is harder if done by date (group by
        patient, order by patient/date, pick last one for each patient...).

        See
        http://stackoverflow.com/questions/1455126/unique-booleanfield-value-in-django
        """  # noqa
        if self.current:
            ConsentMode.objects\
                       .filter(nhs_number=self.nhs_number, current=True)\
                       .update(current=False)
        super().save(*args, **kwargs)

    def __str__(self) -> str:
        return (
            f"[ConsentMode {self.id}] "
=================
11721818
count:1
            'consent_mode': self,
            'patient_lookup': patient_lookup,
            'settings': settings,
            # URLs
            # 'red_img_url': site_absolute_url(static('red.png')),
            # 'yellow_img_url': site_absolute_url(static('yellow.png')),
            # 'green_img_url': site_absolute_url(static('green.png')),
        }
        # 1. Building a static URL in code:
        #    http://stackoverflow.com/questions/11721818/django-get-the-static-files-url-in-view  # noqa
        # 2. Making it an absolute URL means that wkhtmltopdf will also see it
        #    (by fetching it from this web server).
        # 3. Works with Django testing server.
        # 4. Works with Apache, + proxying to backend, + SSL
        return render_pdf_html_to_string('letter_patient_confirm_traffic.html',
                                         context, patient=True)

    def notify_rdbm_of_work(self,
                            letter: LETTER_FWD_REF,
                            to_researcher: bool = False) -> None:
=================
7908349
count:1
    Args:
        request: the :class:`django.http.request.HttpRequest`

    Returns:
        a :class:`DummyObjectCollection`

    We want to create these objects in memory, without saving to the DB.
    However, Django is less good at SQLAlchemy for this, and saves.

    - http://stackoverflow.com/questions/7908349/django-making-relationships-in-memory-without-saving-to-db  # noqa
    - https://code.djangoproject.com/ticket/17253
    - http://stackoverflow.com/questions/23372786/django-models-assigning-foreignkey-object-without-saving-to-database  # noqa
    - http://stackoverflow.com/questions/7121341/django-adding-objects-to-a-related-set-without-saving-to-db  # noqa

    A simple method works for an SQLite backend database but fails with
    an IntegrityError for MySQL/SQL Server. For example:

    .. code-block:: none

        IntegrityError at /draft_traffic_light_decision_form/-1/html/
=================
23372786
count:1

    Returns:
        a :class:`DummyObjectCollection`

    We want to create these objects in memory, without saving to the DB.
    However, Django is less good at SQLAlchemy for this, and saves.

    - http://stackoverflow.com/questions/7908349/django-making-relationships-in-memory-without-saving-to-db  # noqa
    - https://code.djangoproject.com/ticket/17253
    - http://stackoverflow.com/questions/23372786/django-models-assigning-foreignkey-object-without-saving-to-database  # noqa
    - http://stackoverflow.com/questions/7121341/django-adding-objects-to-a-related-set-without-saving-to-db  # noqa

    A simple method works for an SQLite backend database but fails with
    an IntegrityError for MySQL/SQL Server. For example:

    .. code-block:: none

        IntegrityError at /draft_traffic_light_decision_form/-1/html/
        (1452, 'Cannot add or update a child row: a foreign key constraint
        fails (`crate_django`.`consent_study_researchers`, CONSTRAINT
=================
7121341
count:1
    Returns:
        a :class:`DummyObjectCollection`

    We want to create these objects in memory, without saving to the DB.
    However, Django is less good at SQLAlchemy for this, and saves.

    - http://stackoverflow.com/questions/7908349/django-making-relationships-in-memory-without-saving-to-db  # noqa
    - https://code.djangoproject.com/ticket/17253
    - http://stackoverflow.com/questions/23372786/django-models-assigning-foreignkey-object-without-saving-to-database  # noqa
    - http://stackoverflow.com/questions/7121341/django-adding-objects-to-a-related-set-without-saving-to-db  # noqa

    A simple method works for an SQLite backend database but fails with
    an IntegrityError for MySQL/SQL Server. For example:

    .. code-block:: none

        IntegrityError at /draft_traffic_light_decision_form/-1/html/
        (1452, 'Cannot add or update a child row: a foreign key constraint
        fails (`crate_django`.`consent_study_researchers`, CONSTRAINT
        `consent_study_researchers_study_id_19bb255f_fk_consent_study_id`
=================
5329586
count:1
        study = self.fields['study']  # type: forms.ModelChoiceField
        rids = self.fields['rids']  # type: MultipleWordAreaField
        mrids = self.fields['mrids']  # type: MultipleWordAreaField

        study.queryset = Study.filter_studies_for_researcher(
            queryset=Study.get_queryset_possible_contact_studies(),
            user=user
        )
        # https://docs.djangoproject.com/en/1.8/ref/models/querysets/#field-lookups  # noqa
        # http://stackoverflow.com/questions/5329586/django-modelchoicefield-filtering-query-set-and-setting-default-value-as-an-obj  # noqa
        rids.label = f"{dbinfo.rid_field} ({dbinfo.rid_description}) (RID)"
        mrids.label = f"{dbinfo.mrid_field} ({dbinfo.mrid_description}) (MRID)"


class ClinicianSubmitContactRequestForm(AbstractContactRequestForm):
    """
    Form for clinician to request that a patient of their's gets contacted
    about a study.
    """
    study = forms.ModelChoiceField(
=================
2049502
count:1
    if not forename or not surname:  # in case one is empty
        return default
    if len(forename) == 1:
        # Initial only; that won't do.
        return default
    # Other duff things we see: John Smith (CALT), where "Smith (CALT)" is the
    # surname and CALT is Cambridge Adult Locality Team. This can map to
    # something unpredictable, like JohnSmithOT@cpft.nhs.uk, so we can't use
    # it.
    # Formal definition is at http://stackoverflow.com/questions/2049502/what-characters-are-allowed-in-email-address  # noqa
    # See also: http://emailregex.com/
    attempt = f"{forename}.{surname}@{domain}"
    if APPROX_EMAIL_REGEX.match(attempt):
        return attempt
    else:
        return default


def make_cpft_email_address(forename: str, surname: str,
                            default: str = '') -> str:
=================
24519559
count:1
            pong

Improvement if you run the Celery worker with "--concurrency=4" (up from its
default of 1). Flower talks to the nodes. The tasks appear in the worker's
task list. Both "celery status" and "celery inspect ping" work. But tasks
still go into the "Reserved" list.

The ``-Ofair`` option didn't fix it:

- http://stackoverflow.com/questions/24519559

And then it screwed up again, and became unresponsive to the status things.
Argh!

- Close all Celery things.
- Hard reset of RabbitMQ:

.. code-block:: bash

    rabbitmqctl stop_app
=================
20309954
count:1
  ... now works
- But tasks are still going into the reserved queue.

People have achieved this with Win10:

- https://github.com/hotdogee/django-blast/Windows-Development-Environment-Setup  # noqa

Aha! Using ``--pool=solo`` made it work!

- https://stackoverflow.com/questions/20309954


**See also...**

See also :mod:`crate_anon.crateweb.consent.tasks`, with more notes.

"""

import os

=================
3068843
count:1

    .. code-block:: none

        my_admin_site.index_template = 'admin/viewchange_admin_index.html'

    ... to give a modified admin/index.html that says "View/change" not
    "Change".

    """
    # http://stackoverflow.com/questions/3068843/permission-to-view-but-not-to-change-django  # noqa
    # See also http://stackoverflow.com/questions/6680631/django-admin-separate-read-only-view-and-change-view  # noqa
    # django/contrib/admin/templates/admin/change_form.html
    # django/contrib/admin/templatetags/admin_modify.py
    # https://docs.djangoproject.com/en/1.8/ref/contrib/admin/#django.contrib.ModelAdmin.change_view  # noqa

    # Remove the tickbox for deletion, and the top/bottom action bars:
    actions = None

    # When you drill down into a single object, use a custom template
    # that removes the 'save' buttons:
=================
6680631
count:1
    .. code-block:: none

        my_admin_site.index_template = 'admin/viewchange_admin_index.html'

    ... to give a modified admin/index.html that says "View/change" not
    "Change".

    """
    # http://stackoverflow.com/questions/3068843/permission-to-view-but-not-to-change-django  # noqa
    # See also http://stackoverflow.com/questions/6680631/django-admin-separate-read-only-view-and-change-view  # noqa
    # django/contrib/admin/templates/admin/change_form.html
    # django/contrib/admin/templatetags/admin_modify.py
    # https://docs.djangoproject.com/en/1.8/ref/contrib/admin/#django.contrib.ModelAdmin.change_view  # noqa

    # Remove the tickbox for deletion, and the top/bottom action bars:
    actions = None

    # When you drill down into a single object, use a custom template
    # that removes the 'save' buttons:
    change_form_template = 'admin/readonly_view_form.html'
=================
7860612
count:1

    def has_delete_permission(self, request: HttpRequest, obj=None) -> bool:
        return False

    def get_changelist(self, request: HttpRequest, **kwargs) \
            -> Type[ChangeList]:
        return ReadOnlyChangeList

    # This is an add-but-not-edit class.
    # http://stackoverflow.com/questions/7860612/django-admin-make-field-editable-in-add-but-not-edit  # noqa
    def get_readonly_fields(self, request: HttpRequest, obj=None) -> List[str]:
        if obj:  # obj is not None, so this is an edit
            # self.__class__ is the derived class
            if hasattr(self.__class__, 'fields_for_viewing'):
                # noinspection PyUnresolvedReferences,PyTypeChecker
                return self.__class__.fields_for_viewing
            elif hasattr(self.__class__, 'readonly_fields'):
                return self.__class__.readonly_fields
            else:
                return self.__class__.fields
=================
14345303
count:1
    This is used for:

    - stuff the user might edit, e.g. per_page
    - a representation of the user as a researcher (or maybe clinician)
    """
    user = models.OneToOneField(settings.AUTH_USER_MODEL,
                                primary_key=True,
                                on_delete=models.CASCADE,
                                related_name="profile")
    # http://stackoverflow.com/questions/14345303/creating-a-profile-model-with-both-an-inlineadmin-and-a-post-save-signal-in-djan  # noqa

    # first_name: in Django User model
    # last_name: in Django User model
    # email: in Django User model

    N_PAGE_CHOICES = (
        (10, '10'),
        (20, '20'),
        (50, '50'),
        (100, '100'),
=================
19406859
count:1
                    f"Table {dbname}.{sourcetable}: not fetching more than "
                    f"{debuglimit} rows (in total for this process) "
                    f"due to debugging limits")
                config.warned_re_limits[db_table_tuple] = True
            result.close()  # http://docs.sqlalchemy.org/en/latest/core/connections.html  # noqa
            return
        config.notify_src_bytes_read(sys.getsizeof(row))  # ... approximate!
        yield list(row)
        # yield dict(zip(row.keys(), row))
        # see also http://stackoverflow.com/questions/19406859
        config.rows_inserted_per_table[db_table_tuple] += 1


def count_rows(dbname: str,
               sourcetable: str,
               pid: Union[int, str] = None) -> int:
    """
    Count the number of rows in a table for a given PID.

    Args:
=================
7443366
count:1
    visible to ``ps``.

    Disadvantage: how do you override with a command-line (argparse) setting?
    .. though: who cares?

    To print a config using that file: raise an exception on nonexistent
    config, and catch it with a special entry point script.

-   See also
    http://stackoverflow.com/questions/7443366/argument-passing-strategy-environment-variables-vs-command-line

"""  # noqa

# =============================================================================
# Imports
# =============================================================================

import fnmatch
from io import StringIO
import logging
=================
5424942
count:1

===============================================================================

**SQLAlchemy ORM models for the CRATE anonymiser, representing information it
stores in its admin database.**

To create a SQLAlchemy Table programmatically:

- http://docs.sqlalchemy.org/en/latest/core/schema.html
- http://stackoverflow.com/questions/5424942/sqlalchemy-model-definition-at-execution
- http://stackoverflow.com/questions/2580497/database-on-the-fly-with-scripting-languages/2580543#2580543

To create a SQLAlchemy ORM programmatically:

- http://stackoverflow.com/questions/2574105/sqlalchemy-dynamic-mapping/2575016#2575016
"""  # noqa

import logging
import random
from typing import Optional, TYPE_CHECKING, Union
=================
2580543
count:1
===============================================================================

**SQLAlchemy ORM models for the CRATE anonymiser, representing information it
stores in its admin database.**

To create a SQLAlchemy Table programmatically:

- http://docs.sqlalchemy.org/en/latest/core/schema.html
- http://stackoverflow.com/questions/5424942/sqlalchemy-model-definition-at-execution
- http://stackoverflow.com/questions/2580497/database-on-the-fly-with-scripting-languages/2580543#2580543

To create a SQLAlchemy ORM programmatically:

- http://stackoverflow.com/questions/2574105/sqlalchemy-dynamic-mapping/2575016#2575016
"""  # noqa

import logging
import random
from typing import Optional, TYPE_CHECKING, Union

=================
2575016
count:1

To create a SQLAlchemy Table programmatically:

- http://docs.sqlalchemy.org/en/latest/core/schema.html
- http://stackoverflow.com/questions/5424942/sqlalchemy-model-definition-at-execution
- http://stackoverflow.com/questions/2580497/database-on-the-fly-with-scripting-languages/2580543#2580543

To create a SQLAlchemy ORM programmatically:

- http://stackoverflow.com/questions/2574105/sqlalchemy-dynamic-mapping/2575016#2575016
"""  # noqa

import logging
import random
from typing import Optional, TYPE_CHECKING, Union

from cardinal_pythonlib.sqlalchemy.orm_query import exists_orm
from sqlalchemy import (
    Column,
    MetaData,
=================
12297156
count:1

        Args:
            session: SQLAlchemy database session for the secret admin database
            pid: PID of the patient who is opting out
        """
        log.debug(f"Adding opt-out for PID {pid}")
        # noinspection PyArgumentList
        newthing = cls(pid=pid)
        session.merge(newthing)
        # http://stackoverflow.com/questions/12297156/fastest-way-to-insert-object-if-it-doesnt-exist-with-sqlalchemy  # noqa


class OptOutMpid(AdminBase):
    """
    Records the MPID values of patients opting out of the anonymised database.
    """
    __tablename__ = 'opt_out_mpid'
    __table_args__ = TABLE_KWARGS

    mpid = Column(
=================
1803628
count:1
    along with CRATE. If not, see <http://www.gnu.org/licenses/>.

===============================================================================

**Script to fetch wordlists from Internet sources, such as lists of forenames
and surnames.**

See:

- https://stackoverflow.com/questions/1803628/raw-list-of-person-names
- http://www.dicts.info/dictionaries.php

For the Moby project:

- https://en.wikipedia.org/wiki/Moby_Project
- https://www.gutenberg.org/ebooks/3201
- https://www.gutenberg.org/files/3201/3201.txt -- explains other files

and default URLs in command-line parameters

=================
13243766
count:1
        fields: list of source fields containing ``scrub_src`` information
        pid: patient ID

    Yields:
         rows, where each row is a list of values that matches ``fields``.
    """
    cfg = config.sources[dbname].srccfg
    if not cfg.ddgen_per_table_pid_field:
        return
        # return in a generator: http://stackoverflow.com/questions/13243766
    log.debug(
        f"gen_all_values_for_patient: PID {pid}, "
        f"table {dbname}.{tablename}, fields: {','.join(fields)}")
    session = config.sources[dbname].session
    query = (
        select([column(f) for f in fields]).
        where(column(cfg.ddgen_per_table_pid_field) == pid).
        select_from(table(tablename))
    )
    result = session.execute(query)
=================
356100
count:1
    You should have received a copy of the GNU General Public License
    along with CRATE. If not, see <http://www.gnu.org/licenses/>.

===============================================================================

**Launch the CRATE anonymiser in multiprocess mode.**

Previous bash version: see

- http://stackoverflow.com/questions/356100
- http://stackoverflow.com/questions/1644856
- http://stackoverflow.com/questions/8903239
- http://stackoverflow.com/questions/1951506
- Note: ``$!`` is the process ID of last process launched in background
- http://stackoverflow.com/questions/59895

Python version: see

- http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel
- http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program
=================
1644856
count:1
    along with CRATE. If not, see <http://www.gnu.org/licenses/>.

===============================================================================

**Launch the CRATE anonymiser in multiprocess mode.**

Previous bash version: see

- http://stackoverflow.com/questions/356100
- http://stackoverflow.com/questions/1644856
- http://stackoverflow.com/questions/8903239
- http://stackoverflow.com/questions/1951506
- Note: ``$!`` is the process ID of last process launched in background
- http://stackoverflow.com/questions/59895

Python version: see

- http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel
- http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program
- http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python
=================
8903239
count:1

===============================================================================

**Launch the CRATE anonymiser in multiprocess mode.**

Previous bash version: see

- http://stackoverflow.com/questions/356100
- http://stackoverflow.com/questions/1644856
- http://stackoverflow.com/questions/8903239
- http://stackoverflow.com/questions/1951506
- Note: ``$!`` is the process ID of last process launched in background
- http://stackoverflow.com/questions/59895

Python version: see

- http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel
- http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program
- http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python
"""  # noqa
=================
1951506
count:1
===============================================================================

**Launch the CRATE anonymiser in multiprocess mode.**

Previous bash version: see

- http://stackoverflow.com/questions/356100
- http://stackoverflow.com/questions/1644856
- http://stackoverflow.com/questions/8903239
- http://stackoverflow.com/questions/1951506
- Note: ``$!`` is the process ID of last process launched in background
- http://stackoverflow.com/questions/59895

Python version: see

- http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel
- http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program
- http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python
"""  # noqa

=================
59895
count:1
**Launch the CRATE anonymiser in multiprocess mode.**

Previous bash version: see

- http://stackoverflow.com/questions/356100
- http://stackoverflow.com/questions/1644856
- http://stackoverflow.com/questions/8903239
- http://stackoverflow.com/questions/1951506
- Note: ``$!`` is the process ID of last process launched in background
- http://stackoverflow.com/questions/59895

Python version: see

- http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel
- http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program
- http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python
"""  # noqa

import argparse
import logging
=================
23611396
count:1
- http://stackoverflow.com/questions/356100
- http://stackoverflow.com/questions/1644856
- http://stackoverflow.com/questions/8903239
- http://stackoverflow.com/questions/1951506
- Note: ``$!`` is the process ID of last process launched in background
- http://stackoverflow.com/questions/59895

Python version: see

- http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel
- http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program
- http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python
"""  # noqa

import argparse
import logging
import multiprocessing
import sys
import time
from typing import List
=================
320232
count:1
- http://stackoverflow.com/questions/1644856
- http://stackoverflow.com/questions/8903239
- http://stackoverflow.com/questions/1951506
- Note: ``$!`` is the process ID of last process launched in background
- http://stackoverflow.com/questions/59895

Python version: see

- http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel
- http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program
- http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python
"""  # noqa

import argparse
import logging
import multiprocessing
import sys
import time
from typing import List

=================
641420
count:1
- http://stackoverflow.com/questions/8903239
- http://stackoverflow.com/questions/1951506
- Note: ``$!`` is the process ID of last process launched in background
- http://stackoverflow.com/questions/59895

Python version: see

- http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel
- http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program
- http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python
"""  # noqa

import argparse
import logging
import multiprocessing
import sys
import time
from typing import List

from cardinal_pythonlib.logs import configure_logger_for_colour
=================
287757
count:1
    VERSION=CRATE_VERSION,
    VERSION_DATE=CRATE_VERSION_DATE,
)

# For the style:
#       [source_databases]
#       source1 = blah
#       source2 = thing
# ... you can't have multiple keys with the same name.
=================
9662346
count:1
            return None

    @staticmethod
    def _html_untag_func(text: str) -> str:
        """
        Removes HTML tags.
        """
        # Lots of ways...
        # -- xml.etree, for well-formed XML
        #    http://stackoverflow.com/questions/9662346
        # return ''.join(xml.etree.ElementTree.fromstring(text).itertext())
        # -- html.parser
        #    http://stackoverflow.com/questions/753052
        # -- lxml (but needs source build on Windows):
        #    http://www.neuraladvance.com/removing-html-from-python-strings.html
        #    http://lxml.de/
        # -- regex/re
        #    http://stackoverflow.com/questions/3662142
        return HTML_TAG_RE.sub('', text)

=================
753052
count:1
    def _html_untag_func(text: str) -> str:
        """
        Removes HTML tags.
        """
        # Lots of ways...
        # -- xml.etree, for well-formed XML
        #    http://stackoverflow.com/questions/9662346
        # return ''.join(xml.etree.ElementTree.fromstring(text).itertext())
        # -- html.parser
        #    http://stackoverflow.com/questions/753052
        # -- lxml (but needs source build on Windows):
        #    http://www.neuraladvance.com/removing-html-from-python-strings.html
        #    http://lxml.de/
        # -- regex/re
        #    http://stackoverflow.com/questions/3662142
        return HTML_TAG_RE.sub('', text)

    def _extract_text_func(
            self, value: Any, row: List[Any],
            ddrows: List["DataDictionaryRow"]) -> Tuple[Optional[str], bool]:
=================
3662142
count:1
        # -- xml.etree, for well-formed XML
        #    http://stackoverflow.com/questions/9662346
        # return ''.join(xml.etree.ElementTree.fromstring(text).itertext())
        # -- html.parser
        #    http://stackoverflow.com/questions/753052
        # -- lxml (but needs source build on Windows):
        #    http://www.neuraladvance.com/removing-html-from-python-strings.html
        #    http://lxml.de/
        # -- regex/re
        #    http://stackoverflow.com/questions/3662142
        return HTML_TAG_RE.sub('', text)

    def _extract_text_func(
            self, value: Any, row: List[Any],
            ddrows: List["DataDictionaryRow"]) -> Tuple[Optional[str], bool]:
        """
        Take a field's value and return extracted text, for file-related
        fields, where the DD row indicated that this field contains a filename
        or a BLOB.

=================
2831212
count:1
        self.max_errors = max_errors
        self.regex_method = regex_method
        self._regex = None  # type: Optional[Pattern[str]]
        self._processor = None  # type: Optional[KeywordProcessorFixed]
        self._cached_hash = None  # type: Optional[str]
        self._built = False

        self.words = set()  # type: Set[str]
        # Sets are faster than lists for "is x in s" operations:
        # http://stackoverflow.com/questions/2831212/python-sets-vs-lists
        # noinspection PyTypeChecker
        for f in filenames:
            self.add_file(f, clear_cache=False)
        # noinspection PyTypeChecker
        for w in words:
            self.add_word(w, clear_cache=False)
        # log.debug(f"Created wordlist with {len(self.words)} words")

    def clear_cache(self) -> None:
        """
=================
10017147
count:1
                self._alter_methods.append(AlterMethod(
                    config=self.config,
                    hash_=True,
                    hash_config_section=cfg_section
                ))

        # ---------------------------------------------------------------------
        # Manipulate the destination table name?
        # ---------------------------------------------------------------------
        # http://stackoverflow.com/questions/10017147
        self.dest_table = table
        if dbconf.ddgen_force_lower_case:
            self.dest_table = self.dest_table.lower()
        if dbconf.ddgen_convert_odd_chars_to_underscore:
            self.dest_table = str(self.dest_table)
            # ... if this fails, there's a Unicode problem
            self.dest_table = self.dest_table.translate(ODD_CHARS_TRANSLATE)
        for suffix in dbconf.ddgen_rename_tables_remove_suffixes:
            if self.dest_table.endswith(suffix):
                self.dest_table = self.dest_table[:-len(suffix)]  # remove it
=================
3512471
count:1
            ensure that all regexes begin and end with a word boundary
            requirement

    Returns:
        the list of regular expression strings, as above
    """
    # Reminders: ? zero or one, + one or more, * zero or more
    # Non-capturing groups: (?:...)
    # ... https://docs.python.org/2/howto/regex.html
    # ... http://stackoverflow.com/questions/3512471/non-capturing-group
    # Day, allowing leading zeroes and e.g. "1st, 2nd"
    day = "0*" + str(dt.day) + "(?:st|nd|rd|th)?"
    # Month, allowing leading zeroes for numeric and e.g. Feb/February
    month_numeric = "0*" + str(dt.month)
    # month_word = dt.strftime("%B")  # can't cope with years < 1900
    month_word = calendar.month_name[dt.month]
    month_word = month_word[0:3] + "(?:" + month_word[3:] + ")?"
    month = "(?:" + month_numeric + "|" + month_word + ")"
    # Year
    year = str(dt.year)
=================
15099150
count:1
        separators = OPTIONAL_NON_NEWLINE_WHITESPACE
    else:
        separators = ""
    s = separators.join([c for c in chars])  # ... can appear anywhere
    if at_word_boundaries_only:
        return [WB + s + WB]
    else:
        if at_numeric_boundaries_only:
            # http://www.regular-expressions.info/lookaround.html
            # http://stackoverflow.com/questions/15099150/regex-find-one-digit-number  # noqa
            return [NOT_DIGIT_LOOKBEHIND + s + NOT_DIGIT_LOOKAHEAD]
        else:
            return [s]


def get_number_of_length_n_regex_elements(
        n: int,
        liberal: bool = True,
        very_liberal: bool = False,
        at_word_boundaries_only: bool = True) -> List[str]:
=================
164979
count:1
        at_word_boundaries_only:
            Boolean. If set, ensure that the regex begins and ends with a word
            boundary requirement.

    Returns:
        a list of regular expression strings

    See:
    
    - https://stackoverflow.com/questions/164979/regex-for-matching-uk-postcodes
    """  # noqa
    # -------------------------------------------------------------------------
    # Old
    # -------------------------------------------------------------------------

    # e = [
    #     "AN NAA",
    #     "ANN NAA",
    #     "AAN NAA",
    #     "AANN NAA",
=================
361975
count:1

    That form of the FileWriter constructor, ``FileWriter(String fileName)``,
    uses the "default character encoding", as per
    https://docs.oracle.com/javase/7/docs/api/java/io/FileWriter.html

    That default is given by ``System.getProperty("file.encoding")``. However,
    we don't have to do something daft like asking the Java to report its file
    encoding to Python through a pipe; instead, we can set the Java default
    encoding. It can't be done dynamically, but it can be done at JVM launch:
    http://stackoverflow.com/questions/361975/setting-the-default-java-character-encoding.

    Therefore, we should have a Java parameter specified in the config file as
    ``-Dfile.encoding=UTF-8``.

"""  # noqa

import logging
import os
import shlex
import subprocess
=================
834788
count:1
# $ wc -L filename  # shows length of longest line
# $ egrep -n "^.{$(wc -L < filename)}$" filename  # shows longest line
#   ... possibly this gets a bit confused by tabs, can also put a length in:
# $ egrep -n "^.{302}$" filename  # shows lines of length 302
# And we find a drug of length 286:
#   1-oxa-7-azacyclopentadecan-15-one,13-((2,6-dideoy-3-c-methyl-3-o-methyl-alpha-l-ribo-hexopyranosyl)oxy)-2-ethyl-3,4,10-trihydroxy 3,5,8,10,12,14-hexamethyl-7-propyl-11-((3,4,6-trideoxy-3-(dimethylamino)-beta-d-xylo-hexopyranosyl)oxy)-, ((2r*, 3s*,4r*,5s*,8r*,10r*,11r*,12s*,13s*,14r*))-  # noqa
# Then there are multivitamin things in brand_generic with length >600.
# So we should use an unlimited field; SQLAlchemy helpfully seems to translate
# Text to VARCHAR(MAX) under SQL Server, which is the more efficient:
# http://stackoverflow.com/questions/834788/using-varcharmax-vs-text-on-sql-server  # noqa
MEDEX_MAX_FORM_LENGTH = 255  # guess; "Powder For Oral Suspension" (26) is one
MEDEX_MAX_STRENGTH_LENGTH = 50  # guess
MEDEX_MAX_DOSE_AMOUNT_LENGTH = 50  # guess
MEDEX_MAX_ROUTE_LENGTH = 50  # guess
MEDEX_MAX_FREQUENCY_LENGTH = 50  # guess
MEDEX_MAX_DURATION_LENGTH = 50  # guess
MEDEX_MAX_NECESSITY_LENGTH = 50  # guess


# =============================================================================
=================
179085
count:1
        """
        Returns the core indexes to be applied to the destination tables.
        Primarily, these are for columns that refer to the source.

        Returns:
            a list of SQLAlchemy :class:`Index` objects

        See

        - http://stackoverflow.com/questions/179085/multiple-indexes-vs-multi-column-indexes
        """  # noqa
        return [
            Index('_idx_srcref',
                  # Remember, order matters; more to less specific
                  # See also BaseNlpParser.delete_dest_record
                  FN_SRCPKVAL,
                  FN_NLPDEF,
                  FN_SRCFIELD,
                  FN_SRCTABLE,
                  FN_SRCDB,
=================
11436469
count:1
        query = (
            session.query(NlpRecord).
            filter(NlpRecord.srcdb == self._srcdb).
            filter(NlpRecord.srctable == self._srctable).
            filter(NlpRecord.srcpkval == srcpkval).
            filter(NlpRecord.srcfield == self._srcfield).
            filter(NlpRecord.nlpdef == self._nlpdef.name)
            # Order not important (though the order of the index certainly
            # is; see NlpRecord.__table_args__).
            # http://stackoverflow.com/questions/11436469/does-order-of-where-clauses-matter-in-sql  # noqa
        )
        if srcpkstr is not None:
            query = query.filter(NlpRecord.srcpkstr == srcpkstr)
        # log.critical(query)
        with MultiTimerContext(timer, TIMING_PROGRESS_DB_SELECT):
            # This was surprisingly slow under SQL Server testing.
            return query.one_or_none()

    def gen_src_pks(self) -> Generator[Tuple[int, Optional[str]], None, None]:
        """
=================
2292662
count:1
            #  index fields:
            'srcpkval',   # integer and most specific
            'nlpdef',     # usually >1 NLP def to 1 db/table/field combo
            'srcfield',   # } roughly, more to less specific?
            'srctable',   # }
            'srcdb',      # }
            'srcpkstr',   # last as we may not use it
            # - performance is critical here
            # - put them in descending order of specificity
            #   http://stackoverflow.com/questions/2292662/how-important-is-the-order-of-columns-in-indexes  # noqa
            # - start with srcpkval, as it's (a) specific and (b) integer
            # - srcpkfield: don't need to index, because the source table
            #   can only have one PK
            # - srcpkstr: must include, since srcpkval can be non-unique,
            #   due to hash collisions, if we're using a string
            #   ... but ?should be last because we may not use it in
            #   queries (for tables with integer PK)
            unique=True
            # Despite having a NULL field in a UNIQUE index, this is OK for
            # SQL Server 2008+ (http://stackoverflow.com/questions/767657) and
=================
767657
count:1
            # - start with srcpkval, as it's (a) specific and (b) integer
            # - srcpkfield: don't need to index, because the source table
            #   can only have one PK
            # - srcpkstr: must include, since srcpkval can be non-unique,
            #   due to hash collisions, if we're using a string
            #   ... but ?should be last because we may not use it in
            #   queries (for tables with integer PK)
            unique=True
            # Despite having a NULL field in a UNIQUE index, this is OK for
            # SQL Server 2008+ (http://stackoverflow.com/questions/767657) and
            # MySQL also seems happy.
        ),
        TABLE_KWARGS
    )
    # http://stackoverflow.com/questions/6626810/multiple-columns-index-when-using-the-declarative-orm-extension-of-sqlalchemy  # noqa
    # http://docs.sqlalchemy.org/en/latest/orm/extensions/declarative/table_config.html  # noqa

    pk = Column(
        'pk', BigInteger, primary_key=True, autoincrement=True,
        comment="PK of NLP record (no specific use)")
=================
6626810
count:1
            #   ... but ?should be last because we may not use it in
            #   queries (for tables with integer PK)
            unique=True
            # Despite having a NULL field in a UNIQUE index, this is OK for
            # SQL Server 2008+ (http://stackoverflow.com/questions/767657) and
            # MySQL also seems happy.
        ),
        TABLE_KWARGS
    )
    # http://stackoverflow.com/questions/6626810/multiple-columns-index-when-using-the-declarative-orm-extension-of-sqlalchemy  # noqa
    # http://docs.sqlalchemy.org/en/latest/orm/extensions/declarative/table_config.html  # noqa

    pk = Column(
        'pk', BigInteger, primary_key=True, autoincrement=True,
        comment="PK of NLP record (no specific use)")
    srcdb = Column(
        'srcdb', SqlTypeDbIdentifier, comment="Source database"
        # primary_key=True
    )
    srctable = Column(
=================
7356108
count:1
      SQL parameter slots. -- This is now happening; error looks like:
      pyodbc.ProgrammingError: ('The SQL contains 30807 parameter parkers, but
      2717783 parameters were supplied', 'HY000')

    A better way might be:

    - for each table, make a temporary table in the same database
    - populate that table with (source PK integer/hash, source PK string) pairs
    - delete where pairs don't match -- is that portable SQL?
      http://stackoverflow.com/questions/7356108/sql-query-for-deleting-rows-with-not-in-using-2-columns  # noqa

    More efficient would be to make one table per destination database.

    On the "delete where multiple fields don't match":

    - Single field syntax is

      .. code-block:: sql

        DELETE FROM a WHERE a1 NOT IN (SELECT b1 FROM b)
=================
14600619
count:1

        DELETE FROM a WHERE NOT EXISTS (
            SELECT 1 FROM b
            WHERE a.a1 = b.b1
            AND a.a2 = b.b2
        )

    - In SQLAlchemy, :func:`exists`:

      - http://stackoverflow.com/questions/14600619
      - http://docs.sqlalchemy.org/en/latest/core/selectable.html

    - Furthermore, in SQL ``NULL = NULL`` is false (it's null), and ``NULL <>
      NULL`` is also false (it's null), so we have to do an explicit null
      check. You do that with ``field == None``. See
      http://stackoverflow.com/questions/21668606. We're aiming, therefore,
      for:

      .. code-block:: sql

=================
21668606
count:1

    - In SQLAlchemy, :func:`exists`:

      - http://stackoverflow.com/questions/14600619
      - http://docs.sqlalchemy.org/en/latest/core/selectable.html

    - Furthermore, in SQL ``NULL = NULL`` is false (it's null), and ``NULL <>
      NULL`` is also false (it's null), so we have to do an explicit null
      check. You do that with ``field == None``. See
      http://stackoverflow.com/questions/21668606. We're aiming, therefore,
      for:

      .. code-block:: sql

        DELETE FROM a WHERE NOT EXISTS (
            SELECT 1 FROM b
            WHERE a.a1 = b.b1
            AND (
                a.a2 = b.b2
                OR (a.a2 IS NULL AND b.b2 IS NULL)
=================
35655257
count:1
    Returns all non-abstract subclasses of ``cls``.

    Args:
        cls: class into which to recurse

    Returns:
        list of classes
    """
    # Type hinting, but not quite:
    #   http://stackoverflow.com/questions/35655257
    # Getting derived subclasses: http://stackoverflow.com/questions/3862310
    all_subclasses = []  # List[ClassType]
    # noinspection PyArgumentList
    for subclass in cls.__subclasses__():
        if not isabstract(subclass):
            all_subclasses.append(subclass)
        # else:
        #     log.critical(f"Skipping abstract class: {subclass.__name__}")
        all_subclasses.extend(get_all_subclasses(subclass))  # recursive
    all_subclasses.sort(key=lambda c: c.__name__.lower())
=================
3862310
count:1

    Args:
        cls: class into which to recurse

    Returns:
        list of classes
    """
    # Type hinting, but not quite:
    #   http://stackoverflow.com/questions/35655257
    # Getting derived subclasses: http://stackoverflow.com/questions/3862310
    all_subclasses = []  # List[ClassType]
    # noinspection PyArgumentList
    for subclass in cls.__subclasses__():
        if not isabstract(subclass):
            all_subclasses.append(subclass)
        # else:
        #     log.critical(f"Skipping abstract class: {subclass.__name__}")
        all_subclasses.extend(get_all_subclasses(subclass))  # recursive
    all_subclasses.sort(key=lambda c: c.__name__.lower())
    return all_subclasses
=================
2020014
count:1
        """
        return cls.__name__

    @classmethod
    def fully_qualified_classname(cls) -> str:
        """
        Returns the class's fully qualified name.
        """
        # This may be imperfect; see
        # https://stackoverflow.com/questions/2020014/get-fully-qualified-class-name-of-an-object-in-python  # noqa
        # https://www.python.org/dev/peps/pep-3155/
        return ".".join([cls.__module__,
                         cls.__qualname__])

    @classmethod
    def print_info(cls, file: TextIO = sys.stdout) -> None:
        """
        Print general information about this NLP processor.

        Args:
=================
27387415
count:1
        assert sql_dialect in ALL_SQL_DIALECTS, (
            f"Unknown SQL dialect {sql_dialect!r}; must be one of "
            f"{ALL_SQL_DIALECTS}"
        )
        dialect = registry.load(sql_dialect)()  # type: Dialect
        # log.critical(f"dialect: {dialect}")
        # dialect = MSDialect()
        column_type = column.type.compile(dialect)
        data_type = column_type.partition("(")[0]
        # ... https://stackoverflow.com/questions/27387415/how-would-i-get-everything-before-a-in-a-string-python  # noqa
        return {
            NlprpKeys.COLUMN_NAME: column.name,
            NlprpKeys.COLUMN_TYPE: column_type,
            NlprpKeys.DATA_TYPE: data_type,
            NlprpKeys.IS_NULLABLE: column.nullable,
            NlprpKeys.COLUMN_COMMENT: column.comment,
        }

    def nlprp_schema_info(self, sql_dialect: str = None) -> Dict[str, Any]:
        """
=================
2077897
count:1
        """
        Returns the processor's description for use in response to the NLPRP
        :ref:`list_processors <nlprp_list_processors>` command.

        Uses each processor's docstring, and reformats it slightly.
        """
        # PyCharm thinks that __doc__ is bytes, but it's str!
        docstring = str(cls.__doc__)
        docstring = docstring.replace("\n", " ")
        # https://stackoverflow.com/questions/2077897/substitute-multiple-whitespace-with-single-whitespace-in-python
        return " ".join(docstring.split())

    def nlprp_server_processor(self, sql_dialect: str = None) \
            -> NlprpServerProcessor:
        schema_info = self.nlprp_schema_info(sql_dialect)
        return NlprpServerProcessor(
            name=self.nlprp_name(),
            title=self.nlprp_title(),
            version=self.nlprp_version(),
            is_default_version=self.nlprp_is_default_version(),
=================
5917082
count:1
PLUS_SIGN = r"\+"  # don't forget to escape it
MINUS_SIGN = r"[-−–]"  # any of: ASCII hyphen-minus, Unicode minus, en dash
SIGN = fr"(?: {PLUS_SIGN} | {MINUS_SIGN} )"

NO_MINUS_SIGN_LOOKAHEAD = fr"(?!{MINUS_SIGN})"
# ... (?! something ) is a negative lookahead assertion
# ... (?<! something ) is a negative lookbehind assertion

PLAIN_INTEGER = r"(?:\d+)"
# Numbers with commas: http://stackoverflow.com/questions/5917082
# ... then modified a little, because that fails with Python's regex module;
# (a) the "\d+" grabs things like "12,000" and thinks "aha, 12", so we have to
#     fix that by putting the "thousands" bit first; then
# (b) that has to be modified to contain at least one comma/thousands grouping
#     (or it will treat "9800" as "980").

PLAIN_INTEGER_W_THOUSAND_COMMAS = r"(?: (?: \d{1,3} (?:,\d{3})+ ) | \d+ )"
# ... plain integer allowing commas as a thousands separator
#       (1) a number with thousands separators, or
#       (2) a plain number
=================
1056323
count:1
    "Unit of Time"      unit_of_time
{NlpOutputConfigKeys.NULL_LITERALS} =
    null
    ""
{NlpOutputConfigKeys.DESTFIELDS} =
    # Found by (a) manual inspection of BRC GATE pharmacotherapy output from
    # the GATE console; (b) inspection of
    # application-resources/schemas/Prescription.xml
    # Note preference for DECIMAL over FLOAT/REAL; see
    # https://stackoverflow.com/questions/1056323
    # Note that not all annotations appear for all texts. Try e.g.:
    #   Please start haloperidol 5mg tds.
    #   I suggest you start haloperidol 5mg tds for one week.
    rule            VARCHAR(100)  Rule yielding this drug. Not in XML but is present in a subset: e.g. "weanOff"; max length unclear
    drug            VARCHAR(200)  Drug name. Required string; e.g. "haloperidol"; max length 47 from "wc -L BNF_generic.lst", 134 from BNF_trade.lst
    drug_type       VARCHAR(100)  Type of drug name. Required string; from "drug-type"; e.g. "BNF_generic"; ?length of longest drug ".lst" filename
    dose            VARCHAR(100)  Dose text. Required string; e.g. "5mg"; max length unclear
    dose_value      DECIMAL       Numerical dose value. Required numeric; from "dose-value"; "double" in the XML but DECIMAL probably better; e.g. 5.0
    dose_unit       VARCHAR(100)  Text of dose units. Required string; from "dose-unit"; e.g. "mg"; max length unclear
    dose_multiple   INT           Dose count (multiple). Required integer; from "dose-multiple"; e.g. 1
=================
356100
count:1

===============================================================================

**Launch the NLP processor in multiprocess mode.**

"""

# Previous bash version:
#
# http://stackoverflow.com/questions/356100
# http://stackoverflow.com/questions/1644856
# http://stackoverflow.com/questions/8903239
# http://stackoverflow.com/questions/1951506
# Note: $! is the process ID of last process launched in background
# http://stackoverflow.com/questions/59895
#
# Python version:
#
# http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel  # noqa
# http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program  # noqa
=================
1644856
count:1
===============================================================================

**Launch the NLP processor in multiprocess mode.**

"""

# Previous bash version:
#
# http://stackoverflow.com/questions/356100
# http://stackoverflow.com/questions/1644856
# http://stackoverflow.com/questions/8903239
# http://stackoverflow.com/questions/1951506
# Note: $! is the process ID of last process launched in background
# http://stackoverflow.com/questions/59895
#
# Python version:
#
# http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel  # noqa
# http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program  # noqa
# http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python  # noqa
=================
8903239
count:1

**Launch the NLP processor in multiprocess mode.**

"""

# Previous bash version:
#
# http://stackoverflow.com/questions/356100
# http://stackoverflow.com/questions/1644856
# http://stackoverflow.com/questions/8903239
# http://stackoverflow.com/questions/1951506
# Note: $! is the process ID of last process launched in background
# http://stackoverflow.com/questions/59895
#
# Python version:
#
# http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel  # noqa
# http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program  # noqa
# http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python  # noqa

=================
1951506
count:1
**Launch the NLP processor in multiprocess mode.**

"""

# Previous bash version:
#
# http://stackoverflow.com/questions/356100
# http://stackoverflow.com/questions/1644856
# http://stackoverflow.com/questions/8903239
# http://stackoverflow.com/questions/1951506
# Note: $! is the process ID of last process launched in background
# http://stackoverflow.com/questions/59895
#
# Python version:
#
# http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel  # noqa
# http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program  # noqa
# http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python  # noqa

import argparse
=================
59895
count:1
"""

# Previous bash version:
#
# http://stackoverflow.com/questions/356100
# http://stackoverflow.com/questions/1644856
# http://stackoverflow.com/questions/8903239
# http://stackoverflow.com/questions/1951506
# Note: $! is the process ID of last process launched in background
# http://stackoverflow.com/questions/59895
#
# Python version:
#
# http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel  # noqa
# http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program  # noqa
# http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python  # noqa

import argparse
import logging
import multiprocessing
=================
23611396
count:1
# http://stackoverflow.com/questions/356100
# http://stackoverflow.com/questions/1644856
# http://stackoverflow.com/questions/8903239
# http://stackoverflow.com/questions/1951506
# Note: $! is the process ID of last process launched in background
# http://stackoverflow.com/questions/59895
#
# Python version:
#
# http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel  # noqa
# http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program  # noqa
# http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python  # noqa

import argparse
import logging
import multiprocessing
import sys
import time
from typing import List

=================
320232
count:1
# http://stackoverflow.com/questions/1644856
# http://stackoverflow.com/questions/8903239
# http://stackoverflow.com/questions/1951506
# Note: $! is the process ID of last process launched in background
# http://stackoverflow.com/questions/59895
#
# Python version:
#
# http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel  # noqa
# http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program  # noqa
# http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python  # noqa

import argparse
import logging
import multiprocessing
import sys
import time
from typing import List

from cardinal_pythonlib.logs import configure_logger_for_colour
=================
641420
count:1
# http://stackoverflow.com/questions/8903239
# http://stackoverflow.com/questions/1951506
# Note: $! is the process ID of last process launched in background
# http://stackoverflow.com/questions/59895
#
# Python version:
#
# http://stackoverflow.com/questions/23611396/python-execute-cat-subprocess-in-parallel  # noqa
# http://stackoverflow.com/questions/320232/ensuring-subprocesses-are-dead-on-exiting-python-program  # noqa
# http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python  # noqa

import argparse
import logging
import multiprocessing
import sys
import time
from typing import List

from cardinal_pythonlib.logs import configure_logger_for_colour
from cardinal_pythonlib.subproc import (
=================
546433
count:1
"""
# - you often get | characters when people copy/paste tables
# - blood test abnormality markers can look like e.g.
#       17 (H), 17 (*), 17 HH
# - you can also see things like "CRP (5)"
# - However, if there's a right parenthesis only, that's less good, e.g.
#   "Present: Nicola Adams (NA). 1.0. Minutes of the last meeting."
#   ... which we don't want to be interpreted as "sodium 1.0".
#   HOW BEST TO DO THIS?
# - http://stackoverflow.com/questions/546433/regular-expression-to-match-outer-brackets  # noqa
#   http://stackoverflow.com/questions/7898310/using-regex-to-balance-match-parenthesis  # noqa
# - ... simplest is perhaps: base ignorables, or those with brackets, as above
# - ... even better than a nested thing is just a list of alternatives
"""

OPTIONAL_POC = r"""
    (?: ,? \s* POC )?           # OPTIONAL_POC: "point-of-care testing"
"""
"""
... e.g. "Glucose, POC"; "Potassium, POC".
=================
7898310
count:1
# - you often get | characters when people copy/paste tables
# - blood test abnormality markers can look like e.g.
#       17 (H), 17 (*), 17 HH
# - you can also see things like "CRP (5)"
# - However, if there's a right parenthesis only, that's less good, e.g.
#   "Present: Nicola Adams (NA). 1.0. Minutes of the last meeting."
#   ... which we don't want to be interpreted as "sodium 1.0".
#   HOW BEST TO DO THIS?
# - http://stackoverflow.com/questions/546433/regular-expression-to-match-outer-brackets  # noqa
#   http://stackoverflow.com/questions/7898310/using-regex-to-balance-match-parenthesis  # noqa
# - ... simplest is perhaps: base ignorables, or those with brackets, as above
# - ... even better than a nested thing is just a list of alternatives
"""

OPTIONAL_POC = r"""
    (?: ,? \s* POC )?           # OPTIONAL_POC: "point-of-care testing"
"""
"""
... e.g. "Glucose, POC"; "Potassium, POC".
Seen in CUH for
=================
2715847
count:1

log = logging.getLogger(__name__)


# =============================================================================
# Process handling
# =============================================================================
# Have Python host the client process, communicating with stdin/stdout?
#   http://eyalarubas.com/python-subproc-nonblock.html
#   http://stackoverflow.com/questions/2715847/python-read-streaming-input-from-subprocess-communicate  # noqa
# Java process could be a network server.
#   http://docs.oracle.com/javase/tutorial/networking/sockets/clientServer.html
#   http://www.tutorialspoint.com/java/java_networking.htm
# OK, first one works; that's easier.

class Gate(BaseNlpParser):
    """
    Class controlling an external process, typically our Java interface to
    GATE programs, ``CrateGatePipeline.java`` (but it could be any external
    program).
=================
286614
count:1

    - PROBLEM when attempting to use KConnect (Bio-YODIE): its source code is
      full of direct calls to ``System.out.println()``.

      POTENTIAL SOLUTIONS:

      - named pipes:

        - ``os.mkfifo()`` - Unix only.
        - ``win32pipe`` - http://stackoverflow.com/questions/286614

      - ZeroMQ with some sort of security

        - ``pip install zmq``
        - some sort of Java binding (``jzmq``, ``jeromq``...)

      - redirect ``stdout`` in our Java handler

        - ``System.setOut()``... yes, that works.
        - Implemented and exposed as ``--suppress_gate_stdout``.
=================
82831
count:1
        filename: cache filename (pickle format)

    Returns:
        the result

    Raises:
        :exc:`FileNotFoundError` if it doesn't exist.

    See
    https://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists-without-exceptions

    """  # noqa
    assert filename
    try:
        log.info(f"Reading from cache: {filename}")
        result = pickle.load(open(filename, "rb"))
        log.info("... done")
        return result
    except FileNotFoundError:
        log.info("... cache not found")
=================
12992165
count:1
                    freq = max(float(freq_str), min_frequency)
                    metaphone = get_metaphone(name)
                    if by_gender:
                        name_key = name, gender
                        metaphone_key = metaphone, gender
                    else:
                        name_key = name
                        metaphone_key = metaphone
                    name_freq[name_key] = freq
                    # https://stackoverflow.com/questions/12992165/python-dictionary-increment  # noqa
                    metaphone_freq[metaphone_key] = (
                        metaphone_freq.get(metaphone_key, 0) + freq
                    )
            log.info("... done")
            # Save to cache
            cache_save(cache_filename, [name_freq, metaphone_freq])

    def name_frequency(self, name: str, gender: str = "",
                       prestandardized: bool = True) -> float:
        """
=================
18671528
count:1
      10k * 10k set (= 15 probands/sec).
    - down to 22.5 seconds with DOB shortlisting, and that is with a highly
      self-similar sample, so that may improve dramatically.
    - retried multithreading with ThreadPoolExecutor: 20.9 seconds for 400,
      compared to 23.58 with single-threading; pretty minimal difference.
    - retried multiprocessing with ProcessPoolExecutor: maybe 2/8 cores at high
      usage at any given time? Not properly profiled.
    - then with multiprocessing.Pool...

      - https://stackoverflow.com/questions/18671528/processpoolexecutor-from-concurrent-futures-way-slower-than-multiprocessing-pool
      - https://helpful.knobs-dials.com/index.php/Python_usage_notes/Multiprocessing_notes
      - slow, but then added ``chunksize = n_probands // n_workers`` (I think
        it's the interprocess communication/setup that is slow)...

      - 147.168 seconds -- but for all 10k rows, so that is equivalent to
        5.88 seconds for 400, and much better.
      - Subsequently reached 111.8 s for 10k probands (and 10k sample),
        for 89 probands/sec.

    - This is an O(n^2) algorithm, in that its time grows linearly with the
=================
19087189
count:1
    Args:
        cfg:
            the master :class:`MatchConfig` object
        set_breakpoint:
            set a pdb breakpoint to explore objects from the Python console?
        speedtest:
            run speed tests only?
    """
    log.warning("Running basic unit tests...")
    # https://stackoverflow.com/questions/19087189/python-unittest-testcase-object-has-no-attribute-runtest  # noqa
    suite = unittest.defaultTestLoader.loadTestsFromTestCase(TestTemporalIdentifier)  # noqa
    result = unittest.TextTestRunner().run(suite)
    assert not result.failures

    log.warning("Building test conditions...")
    p1 = TemporalIdentifier(
        "CB2 0QQ",  # Addenbrooke's Hospital
        Date(2000, 1, 1), Date(2010, 1, 1)
    )
    p2 = TemporalIdentifier(
=================
1958219
count:1
        Still tricky, though.

    - We need to return people with no postcodes.

    - We must deal with a profusion of invalid postcodes -- and SQL Server
      doesn't support proper regular expressions.

    SQLAlchemy Core query to Python dict:

    - https://stackoverflow.com/questions/1958219/convert-sqlalchemy-row-object-to-python-dict
    
    SQL Server doesn't permit "SELECT EXISTS":
    
    - https://stackoverflow.com/questions/2759756/is-it-possible-to-select-exists-directly-as-a-bit

    """  # noqa
    log.critical("validate_2_fetch_rio: needs to be checked")
    sql = text("""

        -- We use the original raw RiO database, not the CRATE-processed one.
=================
2759756
count:1
    - We must deal with a profusion of invalid postcodes -- and SQL Server
      doesn't support proper regular expressions.

    SQLAlchemy Core query to Python dict:

    - https://stackoverflow.com/questions/1958219/convert-sqlalchemy-row-object-to-python-dict
    
    SQL Server doesn't permit "SELECT EXISTS":
    
    - https://stackoverflow.com/questions/2759756/is-it-possible-to-select-exists-directly-as-a-bit

    """  # noqa
    log.critical("validate_2_fetch_rio: needs to be checked")
    sql = text("""

        -- We use the original raw RiO database, not the CRATE-processed one.

        SELECT
            ci.ClientID AS rio_client_id,
            CAST(ci.NNN AS BIGINT) AS nhs_number,
=================
7522250
count:1
    packages=find_packages(),
    # finds all the .py files in subdirectories, as long as there are
    # __init__.py files

    package_data={
        "crate_anon": extra_files,
    },

    include_package_data=True,  # use MANIFEST.in during install?
    # https://stackoverflow.com/questions/7522250/how-to-include-package-data-with-setuptools-distribute  # noqa

    install_requires=INSTALL_REQUIRES,

    entry_points={
        "console_scripts": [
            # Format is "script=module:function".

            # Documentation

            "crate_help=crate_anon.tools.launch_docs:main",
=================
1015307
count:2

    Args:
       self (object): class instance
       func : some function whos first arugment is a class instance
       method_name (str) : default=func.__name__, if specified renames the method
       class_ (type) : if func is an unbound method of this class


    References:
        http://stackoverflow.com/questions/1015307/python-bind-an-unbound-method
    """
    if override is not None:
        # TODO depcirate allow_override
        allow_override = override
    if method_name is None:
        method_name = get_funcname(func)
    if force:
        allow_override = True
        allow_main = True
    old_method = getattr(self, method_name, None)
=================
13850114
count:2
    setattr(self, method_name, new_method)


def inject_func_as_property(self, func, method_name=None, class_=None):
    """
    WARNING:
        properties are more safely injected using metaclasses

    References:
        http://stackoverflow.com/questions/13850114/dynamically-adding-methods-with-or-without-metaclass-in-python
    """
    if method_name is None:
        method_name = get_funcname(func)
    #new_method = func.__get__(self, self.__class__)
    new_property = property(func)
    setattr(self.__class__, method_name, new_property)


def inject_func_as_unbound_method(class_, func, method_name=None):
    """ This is actually quite simple """
=================
8122734
count:2
    return ForwardingMetaclass


def test_reloading_metaclass():
    r"""
    CommandLine:
        python -m utool.util_class --test-test_reloading_metaclass

    References:
        http://stackoverflow.com/questions/8122734/pythons-imp-reload-function-is-not-working

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_class import *  # NOQA
        >>> result = test_reloading_metaclass()
        >>> print(result)
    """
    import utool as ut
    testdir = ut.ensure_app_cache_dir('utool', 'metaclass_tests')
    testfoo_fpath = ut.unixjoin(testdir, 'testfoo.py')
=================
27914204
count:2
        parent_globals (None):
        exec_lines (None):
        remove_pyqt_hook (bool):
        N (int):

    CommandLine:
        python -m utool.util_dbg --test-embed

    References:
       http://stackoverflow.com/questions/27911570/can-you-specify-a-command-to-run-after-you-embed-into-ipython/27914204#27914204
       http://stackoverflow.com/questions/15167200/how-do-i-embed-an-ipython-interpreter-into-an-application-running-in-an-ipython

    Notes:
        Use cases I want to achieve

        1) Simply stop execution and embed in an IPython terminal session
        2) Like case 1, but execute a specific set of command (eg '%gui qt')
           AFTER IPython has started
        3) Embed and pause GUI execution (this is just case 1)
        3) Embed and let GUI execution continue while embeded. (basically just need case 2)
=================
15167200
count:2
        exec_lines (None):
        remove_pyqt_hook (bool):
        N (int):

    CommandLine:
        python -m utool.util_dbg --test-embed

    References:
       http://stackoverflow.com/questions/27911570/can-you-specify-a-command-to-run-after-you-embed-into-ipython/27914204#27914204
       http://stackoverflow.com/questions/15167200/how-do-i-embed-an-ipython-interpreter-into-an-application-running-in-an-ipython

    Notes:
        Use cases I want to achieve

        1) Simply stop execution and embed in an IPython terminal session
        2) Like case 1, but execute a specific set of command (eg '%gui qt')
           AFTER IPython has started
        3) Embed and pause GUI execution (this is just case 1)
        3) Embed and let GUI execution continue while embeded. (basically just need case 2)

=================
15411967
count:2
def quit(num=None, embed_=False):
    frame = get_parent_frame()
    return quitflag(num, embed_=embed_,
                    parent_locals=frame.f_globals,
                    parent_globals=frame.f_locals)


def in_jupyter_notebook():
    """
    http://stackoverflow.com/questions/15411967/how-can-i-check-if-code-is-executed-in-the-ipython-notebook
    """
    try:
        cfg = get_ipython().config
        #print('cfg = %s' % (ut.repr4(cfg),))
        #x = cfg['IPKernelApp']['parent_appname']
        # might not work if using jupyter-console
        if cfg['IPKernelApp']['connection_file'].count('jupyter'):
            return True
        else:
            return False
=================
2663612
count:2
        ctx.flags[decimal.Inexact] = False
        ctx.prec *= 2
        result = ctx.divide(numerator, denominator)
    return result


def sigfig_str(number, sigfig):
    """
    References:
        http://stackoverflow.com/questions/2663612/nicely-repr-float-in-python
    """
    assert(sigfig > 0)
    try:
        d = decimal.Decimal(number)
    except TypeError:
        d = float_to_decimal(float(number))
    sign, digits, exponent = d.as_tuple()
    if len(digits) < sigfig:
        digits = list(digits)
        digits.extend([0] * (sigfig - len(digits)))
=================
8906926
count:2

def get_timedelta_str(timedelta, exclude_zeros=False):
    """
    get_timedelta_str

    Returns:
        str: timedelta_str, formated time string

    References:
        http://stackoverflow.com/questions/8906926/formatting-python-timedelta-objects

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_time import *  # NOQA
        >>> timedelta = get_unix_timedelta(10)
        >>> timedelta_str = get_timedelta_str(timedelta)
        >>> result = (timedelta_str)
        >>> print(result)
        10 seconds
    """
=================
434287
count:2
    r"""
    generates successive n-sized chunks from ``iterable``.

    Args:
        iterable (list): input to iterate over
        chunksize (int): size of sublist to return
        bordermode (str): None, 'cycle', or 'replicate'

    References:
        http://stackoverflow.com/questions/434287/iterate-over-a-list-in-chunks

    SeeAlso:
        util_progress.get_num_chunks

    CommandLine:
        python -m utool.util_iter --exec-ichunks --show

    Timeit:
        >>> import utool as ut
        >>> setup = ut.codeblock('''
=================
434287
count:2

def ichunks_list(list_, chunksize):
    """
    input must be a list.

    SeeAlso:
        ichunks

    References:
        http://stackoverflow.com/questions/434287/iterate-over-a-list-in-chunks
    """
    return (list_[ix:ix + chunksize] for ix in range(0, len(list_), chunksize))
    #return (list_[sl] for sl in ichunk_slices(len(list_), chunksize))


def ichunk_slices(total, chunksize):
    for ix in range(0, total, chunksize):
        yield slice(ix, ix + chunksize)


=================
12561063
count:2
    """
    if isinstance(str_, __STR__):
        return str_
    else:
        try:
            return __STR__(str_)
        except UnicodeDecodeError:
            if str_.startswith(codecs.BOM_UTF8):
                # Can safely remove the utf8 marker
                # http://stackoverflow.com/questions/12561063/python-extract-data-from-file
                str_ = str_[len(codecs.BOM_UTF8):]
            return str_.decode('utf-8')
    #if not isinstance(str_, __STR__) and is_byte_encoded_unicode(str_):
    #    return str_.decode('utf-8')
    #else:
=================
24873302
count:2
        >>> ut.quit_if_noshow()
    """
    import webbrowser
    import utool as ut
    pref_list = ut.ensure_iterable(pref_list)
    error_list = []

    # Hack for finding chrome on win32
    if ut.WIN32:
        # http://stackoverflow.com/questions/24873302/webbrowser-chrome-exe-does-not-work
        win32_chrome_fpath = 'C:/Program Files (x86)/Google/Chrome/Application/chrome.exe'
        win32_chrome_browsername = win32_chrome_fpath + ' %s'
        win32_map = {
            'chrome': win32_chrome_browsername,
            'google-chrome': win32_chrome_browsername,
        }
        for browsername, win32_browsername in win32_map.items():
            index = ut.listfind(pref_list, browsername)
            if index is not None and True:  # ut.checkpath(win32_browsername):
                pref_list.insert(index + 1, win32_browsername)
=================
15644964
count:2

    Args:
        url (str): url to download
        filename (str): path to download to. Defaults to basename of url
        spoof (bool): if True pretends to by Firefox
        iri_fallback : falls back to requests get call if there is a UnicodeError

    References:
        http://blog.moleculea.com/2012/10/04/urlretrieve-progres-indicator/
        http://stackoverflow.com/questions/15644964/python-progress-bar-and-downloads
        http://stackoverflow.com/questions/16694907/how-to-download-large-file-in-python-with-requests-py

    TODO:
        Delete any partially downloaded files

    Ignore:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_grabdata import *  # NOQA
        >>> url = 'http://www.jrsoftware.org/download.php/ispack.exe'
        >>> fpath = download_url(url)
=================
16694907
count:2
    Args:
        url (str): url to download
        filename (str): path to download to. Defaults to basename of url
        spoof (bool): if True pretends to by Firefox
        iri_fallback : falls back to requests get call if there is a UnicodeError

    References:
        http://blog.moleculea.com/2012/10/04/urlretrieve-progres-indicator/
        http://stackoverflow.com/questions/15644964/python-progress-bar-and-downloads
        http://stackoverflow.com/questions/16694907/how-to-download-large-file-in-python-with-requests-py

    TODO:
        Delete any partially downloaded files

    Ignore:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_grabdata import *  # NOQA
        >>> url = 'http://www.jrsoftware.org/download.php/ispack.exe'
        >>> fpath = download_url(url)
        >>> print(fpath)
=================
1112343
count:2
    """
    data = url_read(url, verbose)
    text = data.decode('utf8')
    return text


def experiment_download_multiple_urls(url_list):
    r"""
    References:
        http://stackoverflow.com/questions/1112343/capture-sigint-in-python
        http://stackoverflow.com/questions/16694907/download-large-file-requests
        GracefulInterruptHandler

    Ignore:
        import signal
        import sys
        def signal_handler(signal, frame):
                print('You pressed Ctrl+C!')
                sys.exit(0)
        signal.signal(signal.SIGINT, signal_handler)
=================
16694907
count:2
    data = url_read(url, verbose)
    text = data.decode('utf8')
    return text


def experiment_download_multiple_urls(url_list):
    r"""
    References:
        http://stackoverflow.com/questions/1112343/capture-sigint-in-python
        http://stackoverflow.com/questions/16694907/download-large-file-requests
        GracefulInterruptHandler

    Ignore:
        import signal
        import sys
        def signal_handler(signal, frame):
                print('You pressed Ctrl+C!')
                sys.exit(0)
        signal.signal(signal.SIGINT, signal_handler)
        print('Press Ctrl+C')
=================
23149218
count:2
    Returns if a value is a python builtin function

    Args:
        item (object):

    Returns:
        bool: flag

    References:
        http://stackoverflow.com/questions/23149218/check-if-a-python-function-is-builtin

    CommandLine:
        python -m utool._internal.meta_util_six is_builtin

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool._internal.meta_util_six import *  # NOQA
        >>> item = zip
        >>> flag = is_bateries_included(item)
        >>> result = ('flag = %s' % (str(flag),))
=================
7456933
count:2
    #import ast
    #astdump.indented(pt)
    #print(ast.dump(pt, include_attributes=True))
    print(astor.dump(pt))


def special_parse_process_python_code(sourcecode):
    r"""
    pip install redbaron
    http://stackoverflow.com/questions/7456933/python-ast-with-preserved-comments

    CommandLine:
        python -m utool.util_inspect special_parse_process_python_code --show

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_inspect import *  # NOQA
        >>> import utool as ut
        >>> sourcecode = ut.read_from(ut.util_inspect.__file__)
        >>> result = special_parse_process_python_code(sourcecode)
=================
20445733
count:2
        sourcecode (str):

    Returns:
        list: func_names

    CommandLine:
        python -m utool.util_inspect parse_import_names

    References:
        https://stackoverflow.com/questions/20445733/how-to-tell-which-modules-have-been-imported-in-some-source-code

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_inspect import *  # NOQA
        >>> import utool as ut
        >>> fpath = ut.util_inspect.__file__.replace('.pyc', '.py')
        >>> #fpath = ut.truepath('~/code/bintrees/bintrees/avltree.py')
        >>> sourcecode = ut.readfrom(fpath)
        >>> func_names = parse_import_names(sourcecode)
        >>> result = ('func_names = %s' % (ut.repr2(func_names),))
=================
23576681
count:2
        #if ut.SUPER_STRICT:
        #    raise
    return child_funcnamess
    #print('child_funcnamess = %r' % (child_funcnamess,))


def is_valid_python(code, reraise=True, ipy_magic_workaround=False):
    """
    References:
        http://stackoverflow.com/questions/23576681/python-check-syntax
    """
    import ast
    try:
        if ipy_magic_workaround:
            code = '\n'.join(['pass' if re.match(r'\s*%[a-z]*', line) else line for line in code.split('\n')])
        ast.parse(code)
    except SyntaxError:
        if reraise:
            import utool as ut
            print('Syntax Error')
=================
4801403
count:2
        elif isinstance(self.value, list):
            for v in self.value:
                for x in v.itertype(type_):
                    yield x


def parse_nestings2(string, nesters=['()', '[]', '<>', "''", '""'], escape='\\'):
    r"""
    References:
        http://stackoverflow.com/questions/4801403/pyparsing-nested-mutiple-opener-clo

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_gridsearch import *  # NOQA
        >>> import utool as ut
        >>> string = r'lambda u: sign(u) * abs(u)**3.0 * greater(u, 0)'
        >>> parsed_blocks = parse_nestings2(string)
        >>> print('parsed_blocks = {!r}'.format(parsed_blocks))
        >>> string = r'lambda u: sign("\"u(\'fdfds\')") * abs(u)**3.0 * greater(u, 0)'
        >>> parsed_blocks = parse_nestings2(string)
=================
4801403
count:2
            print('PARSED_BLOCKS = ' + ut.repr3(parsed_blocks, nl=1))
    else:
        parsed_blocks = []
    return parsed_blocks


def parse_nestings(string, only_curl=False):
    r"""
    References:
        http://stackoverflow.com/questions/4801403/pyparsing-nested-mutiple-opener-clo

    CommandLine:
        python -m utool.util_gridsearch parse_nestings:1 --show

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_gridsearch import *  # NOQA
        >>> import utool as ut
        >>> string = r'lambda u: sign(u) * abs(u)**3.0 * greater(u, 0)'
        >>> parsed_blocks = parse_nestings(string)
=================
4801403
count:2
        if debug_:
            print('PARSED_BLOCKS = ' + ut.repr3(parsed_blocks, nl=1))
    else:
        parsed_blocks = []
    return parsed_blocks


def parse_cfgstr3(string, debug=None):
    r"""
    http://stackoverflow.com/questions/4801403/how-can-i-use-pyparsing-to-parse-nested-expressions-that-have-mutiple-opener-clo

    Ignore:
        >>> from utool.util_gridsearch import *  # NOQA
        cfgopt_strs = 'f=2,c=[(1,2),(3,4)],d=1,j=[[1,2],[3,4]],foobar,x="[fdsfds",y="]fdsfds",e=[[1,2],[3,4]],[]'
        string  =  cfgopt_strs
        parse_cfgstr3(string)

    CommandLine:
        python -m utool.util_gridsearch parse_cfgstr3 --show

=================
16945518
count:2

def argmax(input_, multi=False):
    """
    Returns index / key of the item with the largest value.

    Args:
        input_ (dict or list):

    References:
        http://stackoverflow.com/questions/16945518/python-argmin-argmax

    Ignore:
        list_ = np.random.rand(10000).tolist()
        %timeit list_.index(max(list_))
        %timeit max(enumerate(list_), key=operator.itemgetter(1))[0]
        %timeit max(enumerate(list_), key=lambda x: x[1])[0]
        %timeit max(range(len(list_)), key=list_.__getitem__)

        input_ = dict_
        list_ = np.random.rand(100000).tolist()
=================
7352684
count:2
            valx += 1
    return missing_values


def group_consecutives(data, stepsize=1):
    """
    Return list of consecutive lists of numbers from data (number list).

    References:
        http://stackoverflow.com/questions/7352684/how-to-find-the-groups-of-consecutive-elements-from-an-array-in-numpy
    """
    run = []
    result = [run]
    expect = None
    for item in data:
        if (item == expect) or (expect is None):
            run.append(item)
        else:
            run = [item]
            result.append(run)
=================
7352684
count:2

    Args:
        data (?):
        stepsize (int):

    Returns:
        list: list of ndarrays

    References:
        http://stackoverflow.com/questions/7352684/how-to-find-the-groups-of-consecutive-elements-from-an-array-in-numpy

    CommandLine:
        python -m utool.util_list --test-group_consecutives

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_list import *  # NOQA
        >>> # build test data
        >>> data = np.array([  0,   1,   2,   3,   4, 320, 636, 637, 638, 639])
        >>> stepsize = 1
=================
9457832
count:2

    Args:
        list_ (list):
        n (int):

    Returns:
        list:

    References:
        http://stackoverflow.com/questions/9457832/python-list-rotation

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_list import *  # NOQA
        >>> list_ = [1, 2, 3, 4, 5]
        >>> n = 2
        >>> result = list_roll(list_, n)
        >>> print(result)
        [4, 5, 1, 2, 3]

=================
15047116
count:2
def fibonacci_iterative(n):
    """
    Args:
        n (int):

    Returns:
        int: the n-th fibonacci number

    References:
        http://stackoverflow.com/questions/15047116/iterative-alg-fib

    CommandLine:
        python -m utool.util_alg fibonacci_iterative

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_alg import *  # NOQA
        >>> import utool as ut
        >>> with ut.Timer('fib iter'):
        >>>     series = [fibonacci_iterative(n) for n in range(20)]
=================
141779
count:2

    Returns:
        tuple: (total_value, items_subset) - a pair whose first element is the
            sum of values in the most valuable subsequence, and whose second
            element is the subsequence. Subset may be different depending on
            implementation (ie top-odwn recusrive vs bottom-up iterative)

    References:
        http://codereview.stackexchange.com/questions/20569/dynamic-programming-solution-to-knapsack-problem
        http://stackoverflow.com/questions/141779/solving-the-np-complete-problem-in-xkcd
        http://www.es.ele.tue.nl/education/5MC10/Solutions/knapsack.pdf

    CommandLine:
        python -m utool.util_alg --test-knapsack

        python -m utool.util_alg --test-knapsack:0
        python -m utool.util_alg --exec-knapsack:1

    Ignore:
        annots_per_view = 2
=================
3433486
count:2
        >>> def func(x, a, b, c, d):
        >>>     return a * np.exp(-c * x) + d
        >>> #a*x**3 + b*x**2 +c*x + d
        >>> y = np.array(time_list)
        >>> y = np.array(ut.cumsum(y))
        >>> x = np.arange(len(y))
        >>> #popt, pcov = curve_fit(func, x, y, p0=(1, 1e-6, 1))
        >>> #print('pcov = %r' % (pcov,))
        >>> #print('popt = %r' % (popt,))
        >>> # http://stackoverflow.com/questions/3433486/-curve-fitting-in-python
        >>> pt.plt.plot(x[::num//50], y[::num//50], 'rx', label='measured data')
        >>> #x2 = np.arange(len(y) * 2)
        >>> #pt.plt.plot(x2, func(x2, *popt), 'b', label="Fitted Curve") #same as line above \/
        >>> #pt.plt.legend(loc='upper left')
        >>> ut.show_if_requested()
    """
    import utool as ut
    #time_list = []
    for x in range(0, num):
        with ut.Timer(verbose=False) as t:
=================
6800193
count:2
    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_alg import *  # NOQA
        >>> import utool as ut
        >>> result = sorted(ut.factors(10))
        >>> print(result)
        [1, 2, 5, 10]

    References:
        http://stackoverflow.com/questions/6800193/finding-all-the-factors
    """
    return set(reduce(list.__add__,
                      ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0)))


if __name__ == '__main__':
    """
    CommandLine:
        python -m utool.util_alg
        python -m utool.util_alg --allexamples
=================
7436801
count:2
def is_local_port_open(port):
    """
    Args:
        port (int):

    Returns:
        bool:

    References:
        http://stackoverflow.com/questions/7436801/identifying-listening-ports-using-python

    CommandLine:
        python -m utool.util_web is_local_port_open --show

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_web import *  # NOQA
        >>> port = 32183
        >>> assert is_local_port_open(80) is False, 'port 80 should always be closed'
        >>> assert is_local_port_open(port) is True, 'maybe this port is actually used?'
=================
14775916
count:2
        raise ValueError('module_name or module must be exclusively specified')
    if register is True:
        _add_injected_module(module)
    return module


def colored_pygments_excepthook(type_, value, tb):
    """
    References:
        https://stackoverflow.com/questions/14775916/color-exceptions-python

    CommandLine:
        python -m utool.util_inject --test-colored_pygments_excepthook

    """
    tbtext = ''.join(traceback.format_exception(type_, value, tb))
    try:
        from utool import util_str
        formatted_text = util_str.highlight_text(tbtext, lexer_name='pytb',
                                                 stripall=True)
=================
18007995
count:2
    # multiple lines
    """
    #import jedi
    #script = jedi.Script(text, line=1, column=None, path='')
    def parentesis_are_balanced(line):
        """
        helper

        References:
            http://stackoverflow.com/questions/18007995/recursive-paren-balance
        """
        def balanced(str_, i=0, cnt=0, left='(', right=')'):
            if i == len(str_):
                return cnt == 0
            if cnt < 0:
                return False
            if str_[i] == left:
                return  balanced(str_, i + 1, cnt + 1)
            elif str_[i] == right:
                return  balanced(str_, i + 1, cnt - 1)
=================
1526794
count:2
        assert repo.is_gitrepo(), 'cannot pull a nongit repo'
        _syscmd('git pull')
        if has_submods:
            _syscmd('git submodule init')
            _syscmd('git submodule update')

    def rename_branch(repo, old_branch_name, new_branch_name, remote='origin'):
        r"""
        References:
            http://stackoverflow.com/questions/1526794/rename?answertab=votes#tab-top
            http://stackoverflow.com/questions/9524933/renaming-a-branch-in-github

        CommandLine:
            python -m utool.util_git --test-rename_branch --old=mymaster --new=ibeis_master

        Example:
            >>> # DISABLE_DOCTEST
            >>> # SCRIPT
            >>> from utool.util_git import *  # NOQA
            >>> repo = ut.get_argval('--repo', str, '.')
=================
9524933
count:2
        _syscmd('git pull')
        if has_submods:
            _syscmd('git submodule init')
            _syscmd('git submodule update')

    def rename_branch(repo, old_branch_name, new_branch_name, remote='origin'):
        r"""
        References:
            http://stackoverflow.com/questions/1526794/rename?answertab=votes#tab-top
            http://stackoverflow.com/questions/9524933/renaming-a-branch-in-github

        CommandLine:
            python -m utool.util_git --test-rename_branch --old=mymaster --new=ibeis_master

        Example:
            >>> # DISABLE_DOCTEST
            >>> # SCRIPT
            >>> from utool.util_git import *  # NOQA
            >>> repo = ut.get_argval('--repo', str, '.')
            >>> remote = ut.get_argval('--remote', str, 'origin')
=================
8226278
count:2
            pick c612e98 wip
            pick b298598 Fixed tablename error
            pick 1120a87 wip
            pick f6c4838 wip
            pick 7f92575 wip
            ''')

    Ignore:
        def squash_consecutive_commits_with_same_message():
            # http://stackoverflow.com/questions/8226278/git-alias-to-squash-all-commits-with-a-particular-commit-message
            # Can do interactively with this. Can it be done automatically and pay attention to
            # Timestamps etc?
            git rebase --interactive HEAD~40 --autosquash
            git rebase --interactive $(git merge-base HEAD master) --autosquash

            # Lookbehind correct version
            %s/\([a-z]* [a-z0-9]* wip\n\)\@<=pick \([a-z0-9]*\) wip/squash \2 wip/gc

           # THE FULL NON-INTERACTIVE AUTOSQUASH SCRIPT
           # TODO: Dont squash if there is a one hour timedelta between commits
=================
41048643
count:2
    pickling, and copying.

    Howver, try to never assign this value to a persistant variable.  Use this
    class sparingly.

    CommandLine:
        python -m utool.util_const _NoParamType

    References:
        http://stackoverflow.com/questions/41048643/a-second-none

    Example:
        >>> # DISABLE_DOCTEST
        >>> import utool as ut
        >>> from utool import util_const
        >>> from utool.util_const import _NoParamType, NoParam
        >>> from six.moves import cPickle as pickle
        >>> import copy
        >>> id_ = id(NoParam)
        >>> versions = {
=================
6760685
count:2
#         if cls not in cls._instances:
#             cls._instances[cls] = super(Singleton, cls).__call__(*args, **kwargs)
#         return cls._instances[cls]


# import six
# @six.add_metaclass(Singleton)
# class _NoParamType2(object):
#     """
#     http://stackoverflow.com/questions/6760685/creating-a-singleton-in-python

#     CommandLine:
#         python -m utool.util_const _NoParamType2

#     Example:
#         >>> # DISABLE_DOCTEST
#         >>> from utool.util_const import _NoParamType2
#         >>> import utool as ut
#         >>> from six.moves import cPickle as pickle
#         >>> import copy
=================
938733
count:2
        utime = resource.getrusage(resource.RUSAGE_SELF).ru_utime
        return utime

    def peak_memory():
        """Returns the resident set size (the portion of
        a process's memory that is held in RAM.)
        """
        # MAXRSS is expressed in kilobytes. Convert to bytes
        # FIXME: MAXRSS is NOT expressed in kilobytes. use resource.getpagesize to Convert to bytes
        # References: http://stackoverflow.com/questions/938733/total-memory-used-by-python-process
        #resource.getpagesize
        maxrss = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss * 1024
        return maxrss

    def get_resource_limits():
        #rlimit_keys = [key for key in six.iterkeys(resource.__dict__) if key.startswith('RLIMIT_')]
        #print('\n'.join(['(\'%s\', resource.%s),' % (key.replace('RLIMIT_', ''), key) for key in rlimit_keys]))
        rlim_keytups = [
            ('MEMLOCK', resource.RLIMIT_MEMLOCK),
            ('NOFILE', resource.RLIMIT_NOFILE),
=================
1331471
count:2
        ('[psutil] available = %s' % util_str.byte_str2(available_memory())),
        ('[psutil] used      = %s' % util_str.byte_str2(used_memory())),
        ('[psutil] current   = %s' % util_str.byte_str2(current_memory_usage())),
    ])


def get_python_datastructure_sizes():
    """
    References:
        http://stackoverflow.com/questions/1331471/in-memory-size-of-python-stucture

    CommandLine:
        python -m utool.util_resources --test-get_python_datastructure_sizes

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_resources import *  # NOQA
        >>> import utool as ut  # NOQA
        >>> type_sizes = get_python_datastructure_sizes()
        >>> result = ut.repr4(type_sizes, sorted_=True)
=================
18625510
count:2

#class copy_argspec(object):
#    """
#    copy_argspec is a signature modifying decorator.
#    Specifically, it copies the signature from `source_func` to the wrapper, and
#    the wrapper will call the original function (which should be using *args,
#    **kwds).  The argspec, docstring, and default values are copied from
#    src_func, and __module__ and __dict__ from tgt_func.
#    .. References
#    http://stackoverflow.com/questions/18625510/how-can-i-programmatically-change-the-argspec-of-a-function-not-in-a-python-de
#    """
#    def __init__(self, src_func):
#        self.argspec = inspect.getargspec(src_func)
#        self.src_doc = src_func.__doc__
#        self.src_defaults = src_func.func_defaults
#    def __call__(self, tgt_func):
#        try:
#            tgt_argspec = inspect.getargspec(tgt_func)
#            need_self = False
#            if len(tgt_argspec) > 0 and len(tgt_argspec[0]) > 0 and tgt_argspec[0][0] == 'self':
=================
1697501
count:2
        return func
    return dummy_args_closure


class classproperty(property):
    """
    Decorates a method turning it into a classattribute

    References:
        https://stackoverflow.com/questions/1697501/python-staticmethod-with-property
    """
    def __get__(self, cls, owner):
        return classmethod(self.fget).__get__(None, owner)()


if __name__ == '__main__':
    """
    CommandLine:
        python -c "import utool, utool.util_decor; utool.doctest_funcs(utool.util_decor)"
        python -m utool.util_decor
=================
24207353
count:2
    return (markdown_header + '\n' +
            ut.indent(repr_single_for_md(markdown), ' ' * 2) +
            '\n' + markdown_footer)


def make_notebook(cell_list):
    """
    References:
        # Change cell width
        http://stackoverflow.com/questions/21971449/how-do-i-increase-the-cell-width-of-the-ipython-notebook-in-my-browser/24207353#24207353
    """
    import utool as ut
    header = ut.codeblock(
        '''
        {
         "cells": [
        '''
    )

    footer = ut.codeblock(
=================
16259923
count:2
def escape_latex(text):
    r"""
    Args:
        text (str): a plain text message

    Returns:
        str: the message escaped to appear correctly in LaTeX

    References:
        http://stackoverflow.com/questions/16259923/how-can-i-escape-characters
    """
    conv = {
        '&': r'\&',
        '%': r'\%',
        '$': r'\$',
        '#': r'\#',
        '_': r'\_',
        '{': r'\{',
        '}': r'\}',
        '~': r'\textasciitilde{}',
=================
2892931
count:2
        \end{figure}
        '''
    )
    figure_str = figure_fmtstr % (figure_body)
    return figure_str


def long_substr(strlist):
    # Longest common substring
    # http://stackoverflow.com/questions/2892931/longest-common-substring-from-more-than-two-strings-python
    substr = ''
    if len(strlist) > 1 and len(strlist[0]) > 0:
        for i in range(len(strlist[0])):
            for j in range(len(strlist[0]) - i + 1):
                if j > len(substr) and is_substr(strlist[0][i:i + j], strlist):
                    substr = strlist[0][i:i + j]
    return substr


def is_substr(find, strlist):
=================
28455982
count:2

#     id(_typelessdata[-1])
#     id(_typelessdata[0])


#     from numpy.core.numeric import _typelessdata
#     _typelessdata

#     References:
#         http://stackoverflow.com/questions/28455982/why-are-there-two-np-int64s
#         -in-numpy-core-numeric-typelessdata-why-is-numpy-in/28461928#28461928
#     """
#     data = arr
#     strvals = kwargs.get('strvals', False)
#     # precision = kwargs.get('precision', None)
#     # suppress_small = kwargs.get('supress_small', None)
#     # max_line_width = kwargs.get('max_line_width', None)
#     # with_dtype = kwargs.get('with_dtype', not strvals)
#     newlines = kwargs.pop('nl', kwargs.pop('newlines', 1))

=================
2247205
count:2
        itemstr_list = ut.take(itemstr_list, sortx)
    return itemstr_list


def utf8_len(str_):
    """
    returns num printed characters in utf8

    Returns:
        http://stackoverflow.com/questions/2247205/python-returning-the-wrong-length-of-string-when-using-special-characters
    """
    import unicodedata
    return len(unicodedata.normalize('NFC', ensure_unicode(str_)))


def horiz_string(*args, **kwargs):
    """
    Horizontally concatenates strings reprs preserving indentation

    Concats a list of objects ensuring that the next item in the list
=================
14693701
count:2
    # the pos-th character to align
    lpos = pos
    rpos = lpos + 1

    tup_list = [line.split(character) for line in line_list]

    handle_ansi = True
    if handle_ansi:
        # Remove ansi from length calculation
        # References: http://stackoverflow.com/questions/14693701remove-ansi
        ansi_escape = re.compile(r'\x1b[^m]*m')

    # Find how much padding is needed
    maxlen = 0
    for tup in tup_list:
        if len(tup) >= rpos + 1:
            if handle_ansi:
                tup = [ansi_escape.sub('', x) for x in tup]
            left_lenlist = list(map(len, tup[0:rpos]))
            left_len = sum(left_lenlist) + lpos * len(replchar)
=================
14693701
count:2
        else:
            new_lines.append(replchar.join(tup))
    return new_lines


def strip_ansi(text):
    """
    Removes all ansi directives from the string
    Helper to remove ansi from length calculation
    References: http://stackoverflow.com/questions/14693701remove-ansi
    """
    ansi_escape = re.compile(r'\x1b[^m]*m')
    return ansi_escape.sub('', text)


# FIXME: HASHLEN is a global var in util_hash
def long_fname_format(fmt_str, fmt_dict, hashable_keys=[], max_len=64,
                      hashlen=16, ABS_MAX_LEN=255, hack27=False):
    r"""
    DEPRICATE
=================
1175208
count:2
        for count, word in enumerate(words)
    ]
    title_str = ' '.join(words2)
    return title_str


def to_underscore_case(camelcase_str):
    r"""
    References:
        http://stackoverflow.com/questions/1175208/convert-camelcase

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_str import *  # NOQA
        >>> camelcase_str = 'UnderscoreFuncname'
        >>> camel_case_str = to_underscore_case(camelcase_str)
        >>> result = ('underscore_str = %s' % (str(camel_case_str),))
        >>> print(result)
        underscore_str = underscore_funcname
    """
=================
427472
count:2
    if ut.get_argflag('--list-testfuncs'):
        print('Listing testfuncs')
        test_tuples = ut.get_package_testables(module)
        result = ut.repr3(test_tuples)
        print(result)

    #autocomplete_hook(module)

    if ut.get_argflag('--update-bashcomplete'):
        # http://stackoverflow.com/questions/427472/line-completion-with-custom-commands
        print('Listing testfuncs')
        testnames = get_module_completions(module)
        modname = module if isinstance(module, six.string_types) else module.__name__
        line = 'complete -W "%s" "%s"' % (' '.join(testnames), modname)
        bash_completer = ut.unixjoin(ut.ensure_app_resource_dir('ibeis'), 'ibeis_bash_complete.sh')
        ut.writeto(bash_completer, line)
        print('ADD TO BASHRC\nsource %s' % (bash_completer,))
        #print(line)
        sys.exit(ut.EXIT_SUCCESS)

=================
427472
count:2
        modname = module if isinstance(module, six.string_types) else module.__name__
        line = 'complete -W "%s" "%s"' % (' '.join(testnames), modname)
        bash_completer = ut.unixjoin(ut.ensure_app_resource_dir('ibeis'), 'ibeis_bash_complete.sh')
        ut.writeto(bash_completer, line)
        print('ADD TO BASHRC\nsource %s' % (bash_completer,))
        #print(line)
        sys.exit(ut.EXIT_SUCCESS)

    if ut.get_argflag('--make-bashcomplete'):
        # http://stackoverflow.com/questions/427472/line-completion-with-custom-commands
        print('Listing testfuncs')
        testnames = get_module_completions(module)
        modname = module if isinstance(module, six.string_types) else module.__name__
        line = 'complete -W "%s" "%s"' % (' '.join(testnames), modname)
        print('add the following line to your bashrc')
        print(line)
        sys.exit(ut.EXIT_SUCCESS)

    test_funcname = ut.get_argval(
        ('--test-func', '--tfunc', '--tf', '--testfunc'),
=================
11063458
count:2
    """
    Copies text to the clipboard

    CommandLine:
        pip install pyperclip
        sudo apt-get install xclip
        sudo apt-get install xsel

    References:
        http://stackoverflow.com/questions/11063458/python-script-to-copy-text-to-clipboard
        http://stackoverflow.com/questions/579687/how-do-i-copy-a-string-to-the-clipboard-on-windows-using-python

    Ignore:
        import pyperclip
        # Qt is by far the fastest, followed by xsel, and then xclip
        #
        backend_order = ['xclip', 'xsel', 'qt', 'gtk']
        backend_order = ['qt', 'xsel', 'xclip', 'gtk']
        for be in backend_order:
            print('be = %r' % (be,))
=================
579687
count:2
    Copies text to the clipboard

    CommandLine:
        pip install pyperclip
        sudo apt-get install xclip
        sudo apt-get install xsel

    References:
        http://stackoverflow.com/questions/11063458/python-script-to-copy-text-to-clipboard
        http://stackoverflow.com/questions/579687/how-do-i-copy-a-string-to-the-clipboard-on-windows-using-python

    Ignore:
        import pyperclip
        # Qt is by far the fastest, followed by xsel, and then xclip
        #
        backend_order = ['xclip', 'xsel', 'qt', 'gtk']
        backend_order = ['qt', 'xsel', 'xclip', 'gtk']
        for be in backend_order:
            print('be = %r' % (be,))
            pyperclip.set_clipboard(be)
=================
11063458
count:2
    # tk_inst.withdraw()
    # tk_inst.clipboard_clear()
    # tk_inst.clipboard_append(text)
    # tk_inst.destroy()


def get_clipboard():
    """
    References:
        http://stackoverflow.com/questions/11063458/python-script-to-copy-text-to-clipboard
    """
    # import utool as ut
    import pyperclip
    _ensure_clipboard_backend()
    text = pyperclip.paste()
    # from Tkinter import Tk
    # tk_inst = Tk()
    # tk_inst.withdraw()
    # text = tk_inst.clipboard_get()
    # tk_inst.destroy()
=================
1335507
count:2

    Args:
        msg (str):
        timeout (int):

    Returns:
        ?: ans

    References:
        http://stackoverflow.com/questions/1335507/keyboard-input-with-timeout-in-python
        http://home.wlu.edu/~levys/software/kbhit.py
        http://stackoverflow.com/questions/3471461/raw-input-and-timeout/3911560#3911560

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_dev import *  # NOQA
        >>> msg = 'Waiting for input...'
        >>> timeout = 30
        >>> ans = input_timeout(msg, timeout)
        >>> print(ans)
=================
3911560
count:2
        msg (str):
        timeout (int):

    Returns:
        ?: ans

    References:
        http://stackoverflow.com/questions/1335507/keyboard-input-with-timeout-in-python
        http://home.wlu.edu/~levys/software/kbhit.py
        http://stackoverflow.com/questions/3471461/raw-input-and-timeout/3911560#3911560

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_dev import *  # NOQA
        >>> msg = 'Waiting for input...'
        >>> timeout = 30
        >>> ans = input_timeout(msg, timeout)
        >>> print(ans)
    """
    import sys
=================
141351
count:2
        print(stmt)
        utool.printex(ex, 'error executing statement', keys=['stmt'])
        raise
    return result


def memory_dump():
    """
    References:
       http://stackoverflow.com/questions/141351/how-do-i-find-what-is-using-memory-in-a-python-process-in-a-production-system
    """
    import cPickle
    dump = open("memory.pickle", 'w')
    for obj in gc.get_objects():
        i = id(obj)
        size = sys.getsizeof(obj, 0)
        #    referrers = [id(o) for o in gc.get_referrers(obj) if hasattr(o, '__class__')]
        referents = [id(o) for o in gc.get_referents(obj) if hasattr(o, '__class__')]
        if hasattr(obj, '__class__'):
            cls = str(obj.__class__)
=================
2629680
count:2
#    return True


def _memory_profile(with_gc=False):
    """
    Helper for memory debugging. Mostly just a namespace where I experiment with
    guppy and heapy.

    References:
        http://stackoverflow.com/questions/2629680/deciding-between-subprocess-multiprocessing-and-thread-in-python

    Reset Numpy Memory::
        %reset out
        %reset array
    """
    import utool as ut
    if with_gc:
        garbage_collect()
    import guppy
    hp = guppy.hpy()
=================
15605925
count:2
                newgroup[key_] = [val_]
            merged_groups.append(ut.ColumnLists(newgroup))
        merged_multi = self.__class__.flatten(merged_groups)
        merged = singles + merged_multi
        return merged


# def fix_autoreload_classes():
#     """
#     http://stackoverflow.com/questions/15605925/last-exception-python-prompt
#     http://stackoverflow.com/questions/31363311/any-way-to-manually-fix-operation-of-super-after-ipython-reload-avoiding-ty
#     """
#     tb = sys.last_traceback
#     val = sys.last_value
#     next_tb = tb
#     while next_tb is not None:
#         this_tb = next_tb
#         next_tb = this_tb.tb_next
#     frame = this_tb.tb_frame
#     code = frame.f_code
=================
31363311
count:2
            merged_groups.append(ut.ColumnLists(newgroup))
        merged_multi = self.__class__.flatten(merged_groups)
        merged = singles + merged_multi
        return merged


# def fix_autoreload_classes():
#     """
#     http://stackoverflow.com/questions/15605925/last-exception-python-prompt
#     http://stackoverflow.com/questions/31363311/any-way-to-manually-fix-operation-of-super-after-ipython-reload-avoiding-ty
#     """
#     tb = sys.last_traceback
#     val = sys.last_value
#     next_tb = tb
#     while next_tb is not None:
#         this_tb = next_tb
#         next_tb = this_tb.tb_next
#     frame = this_tb.tb_frame
#     code = frame.f_code
#     fpath = code.co_filename
=================
33024215
count:2
    Combines properties of dicts and heaps
    Uses a heap for fast minimum/maximum value search
    Uses a dict for fast read only operations

    CommandLine:
        python -m utool.util_dev PriorityQueue

    References:
        http://code.activestate.com/recipes/522995-priority-dict-a-priority-queue-with-updatable-prio/
        https://stackoverflow.com/questions/33024215/built-in-max-heap-api-in-python

    Example:
        >>> # DISABLE_DOCTEST
        >>> import utool as ut
        >>> items = dict(a=42, b=29, c=40, d=95, e=10)
        >>> self = ut.PriorityQueue(items)
        >>> print(self)
        >>> assert len(self) == 5
        >>> print(self.pop())
        >>> assert len(self) == 4
=================
5884066
count:2
    For example, a class can be hashed in this fashion:

    make_hash([cls.__dict__, cls.__name__])

    A function can be hashed like so:

    make_hash([fn.__dict__, fn.__code__])

    References:
        http://stackoverflow.com/questions/5884066/hashing-a-python-dictionary
    """
    if type(o) == DictProxyType:
        o2 = {}
        for k, v in o.items():
            if not k.startswith("__"):
                o2[k] = v
            o = o2
    if isinstance(o, (set, tuple, list)):
        return tuple([make_hash(e) for e in o])
    elif not isinstance(o, dict):
=================
3431825
count:2
    Args:
        fpath (str):  file path string
        blocksize (int): 2 ** 16. Affects speed of reading file
        hasher (None):  defaults to sha1 for fast (but insecure) hashing
        stride (int): strides > 1 skip data to hash, useful for faster
                      hashing, but less accurate, also makes hash dependant on
                      blocksize.

    References:
        http://stackoverflow.com/questions/3431825/generating-a-md5-checksum-of-a-file
        http://stackoverflow.com/questions/5001893/when-should-i-use-sha-1-and-when-should-i-use-sha-2

    CommandLine:
        python -m utool.util_hash --test-get_file_hash
        python -m utool.util_hash --test-get_file_hash:0
        python -m utool.util_hash --test-get_file_hash:1

    Ignore:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_hash import *  # NOQA
=================
5001893
count:2
        fpath (str):  file path string
        blocksize (int): 2 ** 16. Affects speed of reading file
        hasher (None):  defaults to sha1 for fast (but insecure) hashing
        stride (int): strides > 1 skip data to hash, useful for faster
                      hashing, but less accurate, also makes hash dependant on
                      blocksize.

    References:
        http://stackoverflow.com/questions/3431825/generating-a-md5-checksum-of-a-file
        http://stackoverflow.com/questions/5001893/when-should-i-use-sha-1-and-when-should-i-use-sha-2

    CommandLine:
        python -m utool.util_hash --test-get_file_hash
        python -m utool.util_hash --test-get_file_hash:0
        python -m utool.util_hash --test-get_file_hash:1

    Ignore:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_hash import *  # NOQA
        >>> fpath = ut.grab_test_imgpath('patsy.jpg')
=================
23565889
count:2


def image_uuid(pil_img):
    """
    UNSAFE: DEPRICATE: JPEG IS NOT GAURENTEED TO PRODUCE CONSITENT VALUES ON

    MULTIPLE MACHINES image global unique id

    References:
        http://stackoverflow.com/questions/23565889/jpeg-images-have-different-pixel-values-across-multiple-devices
    """
    print('WARNING DO NOT USE utool.util_hash.image_uuid UNSAFE AND DEPRICATED')
    # Get the bytes of the image
    img_bytes_ = pil_img.tobytes()
    uuid_ = hashable_to_uuid(img_bytes_)
    return uuid_


def augment_uuid(uuid_, *hashables):
    #from six.moves import reprlib
=================
21071448
count:2
"""
If logging is on, utool will overwrite the print function with a logging function

This is a special module which will not get injected into (should it be internal?)

References:
    # maybe we can do something like this Queue to try fixing error when
    # when using injected print statments with Qt signals and slots
    http://stackoverflow.com/questions/21071448/redirecting-stdout-and-stderr-to-a-pyqt4-qtextedit-from-a-secondary-thread
"""
from __future__ import absolute_import, division, print_function, unicode_literals
import six
from six.moves import builtins, map, zip, range  # NOQA
from os.path import exists, join, realpath
import logging
import logging.config
import multiprocessing
import os
import sys
=================
7168790
count:2
        # Create root logger
        __UTOOL_ROOT_LOGGER__ = logging.getLogger('root')
        __UTOOL_ROOT_LOGGER__.setLevel('DEBUG')
        # create file handler which logs even debug messages
        #fh = logging.handlers.WatchedFileHandler(log_fpath)
        logfile_handler = logging.FileHandler(log_fpath, mode=mode)
        #stdout_handler = logging.StreamHandler(__UTOOL_STDOUT__)
        stdout_handler = CustomStreamHandler(__UTOOL_STDOUT__)
        stdout_handler.terminator = ''
        # http://stackoverflow.com/questions/7168790/suppress-newline-in-python-logging-module
        #stdout_handler.terminator = ''
        add_logging_handler(logfile_handler, format_='file')
        add_logging_handler(stdout_handler, format_='stdout')
        __UTOOL_ROOT_LOGGER__.propagate = False
        __UTOOL_ROOT_LOGGER__.setLevel(logging.DEBUG)
        # Overwrite utool functions with the logging functions

        def utool_flush(*args):
            """ flushes whatever is in the current utool write buffer """
            # Flushes only the stdout handler
=================
1653970
count:2
     The circular doubly linked list starts and ends with a sentinel element.
     The sentinel element never gets deleted (this simplifies the algorithm).
     The prev/next links are weakref proxies (to prevent circular references).
     Individual links are kept alive by the hard reference in self._map.
     Those hard references disappear when a key is deleted from an OrderedSet.

    References:
        http://code.activestate.com/recipes/576696/
        http://code.activestate.com/recipes/576694/
        http://stackoverflow.com/questions/1653970/does-python-have-an-ordered-set
    """

    def __init__(self, iterable=None):
        self._root = root = _Link()  # sentinel node for doubly linked list
        root.prev = root.next = root
        self._map = {}  # key --> link
        if iterable is not None:
            self |= iterable

    def __len__(self):
=================
7335992
count:2
    """
    returns True if you are running inside a python virtual environment.
    (DOES NOT WORK IF IN IPYTHON AND USING A VIRTUALENV)

    sys.prefix gives the location of the virtualenv

    Notes:
        It seems IPython does not respect virtual environments properly.
        TODO: find a solution
        http://stackoverflow.com/questions/7335992/ipython-and-virtualenv-ignoring-site-packages

    References:
        http://stackoverflow.com/questions/1871549/python-determine-if-running-inside-virtualenv

    CommandLine:
        python -m utool.util_sysreq in_virtual_env

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_sysreq import *  # NOQA
=================
1871549
count:2

    sys.prefix gives the location of the virtualenv

    Notes:
        It seems IPython does not respect virtual environments properly.
        TODO: find a solution
        http://stackoverflow.com/questions/7335992/ipython-and-virtualenv-ignoring-site-packages

    References:
        http://stackoverflow.com/questions/1871549/python-determine-if-running-inside-virtualenv

    CommandLine:
        python -m utool.util_sysreq in_virtual_env

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_sysreq import *  # NOQA
        >>> import utool as ut
        >>> result = in_virtual_env()
        >>> print(result)
=================
7335992
count:2

def get_site_packages_dir():
    """
    CommandLine:
        python -m utool.util_sysreq get_site_packages_dir

    Notes:
        It seems IPython does not respect virtual environments properly.
        TODO: find a solution
        http://stackoverflow.com/questions/7335992/ipython-and-virtualenv-ignoring-site-packages
    """
    import distutils.sysconfig
    return distutils.sysconfig.get_python_lib()


def get_global_dist_packages_dir():
    """
    Attempts to work around virtualenvs and find the system dist_pacakges.
    Essentially this is implmenented as a lookuptable
    """
=================
5721529
count:2
            raise NotImplementedError()
        for path in candidates:
            if ut.checkpath(path):
                return path


def is_running_as_root():
    """
    References:
        http://stackoverflow.com/questions/5721529/running-python-script-as-root-with-sudo-what-is-the-username-of-the-effectiv
        http://stackoverflow.com/questions/2806897/what-is-the-best-practices-for-checking-if-the-user-of-a-python-script-has-root
    """
    return os.getenv('USER') == 'root'


def locate_path(dname, recurse_down=True):
    """ Search for a path """
    tried_fpaths = []
    root_dir = os.getcwd()
    while root_dir is not None:
=================
2806897
count:2
        for path in candidates:
            if ut.checkpath(path):
                return path


def is_running_as_root():
    """
    References:
        http://stackoverflow.com/questions/5721529/running-python-script-as-root-with-sudo-what-is-the-username-of-the-effectiv
        http://stackoverflow.com/questions/2806897/what-is-the-best-practices-for-checking-if-the-user-of-a-python-script-has-root
    """
    return os.getenv('USER') == 'root'


def locate_path(dname, recurse_down=True):
    """ Search for a path """
    tried_fpaths = []
    root_dir = os.getcwd()
    while root_dir is not None:
        dpath = join(root_dir, dname)
=================
22472124
count:2
    plat_specifier = ".%s-%s" % (plat_name, sys.version[0:3])
    if hasattr(sys, 'gettotalrefcount'):
        plat_specifier += '-pydebug'
    return plat_specifier


def in_pyinstaller_package():
    """
    References:
        http://stackoverflow.com/questions/22472124/what-is-sys-meipass-in-python
        http://stackoverflow.com/questions/7674790/bundling-data-files-with-pyinstaller-onefile
    """
    return hasattr(sys, '_MEIPASS')


def get_system_python_library():
    """
    FIXME; hacky way of finding python library. Not cross platform yet.
    """
    import os
=================
7674790
count:2
    if hasattr(sys, 'gettotalrefcount'):
        plat_specifier += '-pydebug'
    return plat_specifier


def in_pyinstaller_package():
    """
    References:
        http://stackoverflow.com/questions/22472124/what-is-sys-meipass-in-python
        http://stackoverflow.com/questions/7674790/bundling-data-files-with-pyinstaller-onefile
    """
    return hasattr(sys, '_MEIPASS')


def get_system_python_library():
    """
    FIXME; hacky way of finding python library. Not cross platform yet.
    """
    import os
    import utool as ut
=================
51658
count:2
def get_free_diskbytes(dir_):
    r"""
    Args:
        dir_ (str):

    Returns:
        int: bytes_ folder/drive free space (in bytes)

    References::
        http://stackoverflow.com/questions/51658/cross-platform-space-remaining-on-volume-using-python
        http://linux.die.net/man/2/statvfs

    CommandLine:
        python -m utool.util_cplat --exec-get_free_diskbytes
        python -m utool.util_cplat --exec-get_free_diskbytes --dir /media/raid
        python -m utool.util_cplat --exec-get_free_diskbytes --dir E:

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_cplat import *  # NOQA
=================
15607903
count:2
        st = os.statvfs(dir_)
        # blocks total * block size
        bytes_ = st.f_blocks * st.f_frsize
        return bytes_


def chmod_add_executable(fpath, group=True, user=True):
    """
    References:
        http://stackoverflow.com/questions/15607903/python-module-os-chmodfile-664-does-not-change-the-permission-to-rw-rw-r-bu
        http://www.tutorialspoint.com/python/os_chmod.htm
        https://en.wikipedia.org/wiki/Chmod
    """
    import stat
    orig_mode = os.stat(fpath).st_mode
    new_mode = orig_mode
    if group:
        new_mode |= stat.S_IXGRP
    if user:
        # new_mode |= stat.S_IXUSR | stat.S_IEXEC
=================
1392413
count:2

def get_file_nBytes_str(fpath):
    from utool import util_str
    return util_str.byte_str2(os.path.getsize(fpath))


def get_disk_space(start_path='.'):
    """
    References:
        http://stackoverflow.com/questions/1392413/calculating-a-directory-size-using-python
    """
    total_size = 0
    for root, dname_list, fname_list in os.walk(start_path):
        for fname in fname_list:
            fpath = os.path.join(root, fname)
            try:
                total_size += os.path.getsize(fpath)
            except OSError:
                pass
    return total_size
=================
2692873
count:2
        'darwin': '/',
    }[OS_TYPE]
    return root


def startfile(fpath, detatch=True, quote=False, verbose=False, quiet=True):
    """ Uses default program defined by the system to open a file.

    References:
        http://stackoverflow.com/questions/2692873/quote-posix-shell-special-characters-in-python-output

    """
    print('[cplat] startfile(%r)' % fpath)
    fpath = normpath(fpath)
    # print('[cplat] fpath=%s' % fpath)
    if not exists(fpath):
        raise Exception('Cannot start nonexistant file: %r' % fpath)
    #if quote:
    #    fpath = '"%s"' % (fpath,)
    if not WIN32:
=================
1405913
count:2
        import utool
        utool.printex(ex, iswarning=True)


def is64bit_python():
    """
    Returns:
        True if running 64 bit python and False if running on 32 bit
    """
    #http://stackoverflow.com/questions/1405913/how-do-i-determine-if-my-python-shell-is-executing-in-32bit-or-64bit-mode-on-os
    is64bit = sys.maxsize > 2 ** 32
    #import platform
    #platform.architecture()
    #import ctypes
    #(ctypes.sizeof(ctypes.c_voidp))
    return is64bit


def get_python_dynlib():
    """
=================
8850484
count:2
    only works on unix systems only tested on Ubuntu GNOME changes text on
    terminal title for identifying debugging tasks.

    The title will remain until python exists

    Args:
        title (str):

    References:
        http://stackoverflow.com/questions/5343265/setting-title-for-tabs-in-terminator-console-application-in-ubuntu/8850484#8850484

    CommandLine:
        python -m utool change_term_title
        echo -en "\033]0;newtitle\a"

         printf "\e]2;newtitle\a";

        echo -en "\033]0;DocTest /home/joncrall/code/ibeis/ibeis.algo.graph.core.py --test-AnnotInference._make_state_delta\a"

    Example:
=================
14788036
count:2


def send_keyboard_input(text=None, key_list=None):
    """
    Args:
        text (None):
        key_list (list):

    References:
        http://stackoverflow.com/questions/14788036/python-win32api-sendmesage
        http://www.pinvoke.net/default.aspx/user32.sendinput

    CommandLine:
        python -m utool.util_cplat --test-send_keyboard_input

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_cplat import *  # NOQA
        >>> text = '%paste'
        >>> result = send_keyboard_input('%paste')
=================
437589
count:2
    if not ut.check_installed_debian(pkgname):
        raise AssertionError('espeak must be installed. run sudo apt-get install -y ' + pkgname)


def unload_module(modname):
    """
    WARNING POTENTIALLY DANGEROUS AND MAY NOT WORK

    References:
        http://stackoverflow.com/questions/437589/how-do-i-unload-reload-a-python-module

    CommandLine:
        python -m utool.util_cplat --test-unload_module

    Example:
        >>> # DISABLE_DOCTEST
        >>> import sys, gc  # NOQA
        >>> import pyhesaff
        >>> import utool as ut
        >>> modname = 'pyhesaff'
=================
8015163
count:2


#def get_ipython_config_file():
#    """
#    or to create an empty default profile, populated with default config files:
#    ipython profile create
#    """

#from subprocess import check_output
#http://stackoverflow.com/questions/8015163/how-to-check-screen-is-running
#def screen_present(name):
#        var = check_output(["screen -ls; true"],shell=True)
#        if "."+name+"\t(" in var:
#                print name+" is running"
#        else:
#                print name+" is not running"


def pip_install(package):
    """
=================
15974100
count:2
#        if "."+name+"\t(" in var:
#                print name+" is running"
#        else:
#                print name+" is not running"


def pip_install(package):
    """
    References:
        http://stackoverflow.com/questions/15974100/ipython-install-new-modules
    """
    import pip
    pip.main(['install', package])


if __name__ == '__main__':
    """
    CommandLine:
        python -c "import utool, utool.util_cplat; utool.doctest_funcs(utool.util_cplat, allexamples=True)"
        python -c "import utool, utool.util_cplat; utool.doctest_funcs(utool.util_cplat)"
=================
18737863
count:2
    pass


def change_doctestcommand_to_use_dashm_flag():
    r"""
    VimRegex: # note sure how to execute replace command in vim in one lin
    %s/python\s*\([A-Za-z_]+[\\/]\S*\)\.py\(.*\)/python -m \1 \2

    """
    # http://stackoverflow.com/questions/18737863/passing-a-function-to-re-sub-in-python
    # CANNOT USE [^ ] FOR SOME GOD DAMN REASON USE /S instead
    regex_list = ['python [A-Za-z_]+[\\/]\S* --allexamples']
    dpath_list = [
        ut.ensure_crossplat_path(ut.truepath('~/code/utool/utool')),
        ut.ensure_crossplat_path(ut.truepath('~/code/ibeis/ibeis')),
        ut.ensure_crossplat_path(ut.truepath('~/code/vtool/vtool')),
        ut.ensure_crossplat_path(ut.truepath('~/code/plottool/plottool')),
        ut.ensure_crossplat_path(ut.truepath('~/code/guitool/guitool')),
    ]
    #ut.named_field_repl(['python ', ('modrelpath',),])
=================
2046603
count:2
    buffer_.close()


def spawn_background_process(func, *args, **kwargs):
    """
    Run a function in the background
    (like rebuilding some costly data structure)

    References:
        http://stackoverflow.com/questions/2046603/is-it-possible-to-run-function-in-a-subprocess-without-threading-or-writing-a-se
        http://stackoverflow.com/questions/1196074/starting-a-background-process-in-python
        http://stackoverflow.com/questions/15063963/python-is-thread-still-running

    Args:
        func (function):

    CommandLine:
        python -m utool.util_parallel --test-spawn_background_process

    Example:
=================
1196074
count:2


def spawn_background_process(func, *args, **kwargs):
    """
    Run a function in the background
    (like rebuilding some costly data structure)

    References:
        http://stackoverflow.com/questions/2046603/is-it-possible-to-run-function-in-a-subprocess-without-threading-or-writing-a-se
        http://stackoverflow.com/questions/1196074/starting-a-background-process-in-python
        http://stackoverflow.com/questions/15063963/python-is-thread-still-running

    Args:
        func (function):

    CommandLine:
        python -m utool.util_parallel --test-spawn_background_process

    Example:
        >>> # DISABLE_DOCTEST
=================
15063963
count:2

def spawn_background_process(func, *args, **kwargs):
    """
    Run a function in the background
    (like rebuilding some costly data structure)

    References:
        http://stackoverflow.com/questions/2046603/is-it-possible-to-run-function-in-a-subprocess-without-threading-or-writing-a-se
        http://stackoverflow.com/questions/1196074/starting-a-background-process-in-python
        http://stackoverflow.com/questions/15063963/python-is-thread-still-running

    Args:
        func (function):

    CommandLine:
        python -m utool.util_parallel --test-spawn_background_process

    Example:
        >>> # DISABLE_DOCTEST
        >>> # SLOW_DOCTEST
=================
17717829
count:2
                [0] column_id  : id of the column
                [1] name       : the name of the column
                [2] type_      : the type of the column (TEXT, INT, etc...)
                [3] notnull    : 0 or 1 if the column can contains null values
                [4] dflt_value : the default value
                [5] pk         : 0 or 1 if the column partecipate to the primary key
            )

    References:
        http://stackoverflow.com/questions/17717829/how-to-get-column-names-from-a-table-in-sqlite-via-pragma-net-c

    CommandLine:
        python -m utool.util_sqlite --test-get_table_columninfo_list

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_sqlite import *  # NOQA
    """
    cur.execute('PRAGMA TABLE_INFO("{tablename}")'.format(tablename=tablename))
    colinfo_list = cur.fetchall()
=================
44313620
count:2
    return data32


def _npstate_to_pystate(npstate):
    """
    Convert state of a NumPy RandomState object to a state
    that can be used by Python's Random.

    References:
        https://stackoverflow.com/questions/44313620/converting-randomstate

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_numpy import *  # NOQA
        >>> from utool.util_numpy import _npstate_to_pystate
        >>> py_rng = random.Random(0)
        >>> np_rng = np.random.RandomState(seed=0)
        >>> npstate = np_rng.get_state()
        >>> pystate = _npstate_to_pystate(npstate)
        >>> py_rng.setstate(pystate)
=================
44313620
count:2
    return pystate


def _pystate_to_npstate(pystate):
    """
    Convert state of a Python Random object to state usable
    by NumPy RandomState.

    References:
        https://stackoverflow.com/questions/44313620/converting-randomstate

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_numpy import *  # NOQA
        >>> from utool.util_numpy import _pystate_to_npstate
        >>> py_rng = random.Random(0)
        >>> np_rng = np.random.RandomState(seed=0)
        >>> pystate = py_rng.getstate()
        >>> npstate = _pystate_to_npstate(pystate)
        >>> np_rng.set_state(npstate)
=================
1707709
count:2
            imppart = parts[-1]
            patterns += [import_ + WS + imppart]
    return patterns


def package_contents(package, with_pkg=False, with_mod=True, ignore_prefix=[],
                     ignore_suffix=[]):
    r"""
    References:
        http://stackoverflow.com/questions/1707709/list-all-the-modules-that-are-part-of-a-python-package

    Args:
        package (?):
        with_pkg (bool): (default = False)
        with_mod (bool): (default = True)

    CommandLine:
        python -m utool.util_import --exec-package_contents

    Example:
=================
14050281
count:2
    always loaded.

    Args:
        modname (str):  module name

    Returns:
        bool: found

    References:
        http://stackoverflow.com/questions/14050281/module-exists-without-importing

    CommandLine:
        python -m utool.util_import check_module_installed --show --verbimp --modname=this
        python -m utool.util_import check_module_installed --show --verbimp --modname=ibeis.scripts.iccv

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_import import *  # NOQA
        >>> import utool as ut
        >>> modname = ut.get_argval('--modname', default='this')
=================
41720952
count:2
                raise
        else:
            raise
    return data


def _python2_load_cpkl(fpath):
    """
    References:
        https://stackoverflow.com/questions/41720952/unpickle-sklearn-tree-descisiontreeregressor-in-python-2-from-python3
    """
    from lib2to3.fixes.fix_imports import MAPPING
    import sys
    import pickle

    # MAPPING maps Python 2 names to Python 3 names. We want this in reverse.
    REVERSE_MAPPING = {}
    for key, val in MAPPING.items():
        REVERSE_MAPPING[val] = key

=================
8843062
count:2

def save_pytables(fpath, data, verbose=False):
    """
    sudo pip install numexpr
    sudo pip install tables

    References:
        https://pytables.github.io/cookbook/py2exe_howto.html
        https://gist.github.com/andrewgiessel/7515520
        http://stackoverflow.com/questions/8843062/python-how-to-store-a-numpy-multidimensional-array-in-pytables
        http://pytables.github.io/usersguide/tutorials.html#creating-new-array-objects

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_io import *  # NOQA
        >>> import numpy as np
        >>> import utool as ut
        >>> # build test data
        >>> verbose = True
        >>> fpath = 'myfile.pytables.hdf5'
=================
651794
count:2


class AutoVivification(dict):
    """
    Implementation of perl's autovivification feature.

    An AutoVivification is an infinitely nested default dict of dicts.

    References:
        http://stackoverflow.com/questions/651794/best-way-to-init-dict-of-dicts

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_dict import *  # NOQA
        >>> dict_ = AutoVivification()
        >>> # Notice that there is no KeyError
        >>> dict_[0][10][100] = None
        >>> result = ('dict_ = %r' % (dict_,))
        >>> print(result)
        dict_ = {0: {10: {100: None}}}
=================
651794
count:2

class OrderedAutoVivification(OrderedDict):
    """
    Implementation of perl's autovivification feature.

    An OrderedAutoVivification is an infinitely nested default dict of ordered
    dicts.

    References:
        http://stackoverflow.com/questions/651794/best-way-to-init-dict-of-dicts

    Doctest:
        >>> from utool.util_dict import *  # NOQA
        >>> dict_ = AutoOrderedDict()
        >>> # Notice that there is no KeyError
        >>> dict_[0][10][100] = None
        >>> dict_[0][10][1] = None
        >>> result = ('dict_ = %r' % (dict_,))
        >>> print(result)
        dict_ = {0: {10: {100: None, 1: None}}}
=================
5884066
count:2
def get_dict_hashid(dict_):
    r"""
    Args:
        dict_ (dict):

    Returns:
        int: id hash

    References:
        http://stackoverflow.com/questions/5884066/hashing-a-python-dictionary

    CommandLine:
        python -m utool.util_dict --test-get_dict_hashid
        python3 -m utool.util_dict --test-get_dict_hashid

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_dict import *  # NOQA
        >>> dict_ = {}
        >>> dict_ = {'a': 'b'}
=================
1151658
count:2
        >>> d1[h1] = "salad"
        >>> d1[h1]
        'salad'
        >>> d1[h2]
        Traceback (most recent call last):
        ...
        KeyError: hashdict(bananas=3, mangoes=5)

    References:
       http://stackoverflow.com/questions/1151658/python-hashable-dicts
       http://stackoverflow.com/questions/1151658/python-hashable-dicts
    """
    def __key(self):
        return tuple(sorted(self.items()))

    def __repr__(self):
        return "{0}({1})".format(self.__class__.__name__,
                                 ", ".join("{0}={1}".format(
                                     str(i[0]), repr(i[1])) for i in self.__key()))

=================
1151658
count:2
        >>> d1[h1]
        'salad'
        >>> d1[h2]
        Traceback (most recent call last):
        ...
        KeyError: hashdict(bananas=3, mangoes=5)

    References:
       http://stackoverflow.com/questions/1151658/python-hashable-dicts
       http://stackoverflow.com/questions/1151658/python-hashable-dicts
    """
    def __key(self):
        return tuple(sorted(self.items()))

    def __repr__(self):
        return "{0}({1})".format(self.__class__.__name__,
                                 ", ".join("{0}={1}".format(
                                     str(i[0]), repr(i[1])) for i in self.__key()))

    def __hash__(self):
=================
38987
count:2
    value specified the list of dictionaries.

    Returns:
        dict: mergedict_

    CommandLine:
        python -m utool.util_dict --test-merge_dicts

    References:
        http://stackoverflow.com/questions/38987/how-can-i-merge-two-python-dictionaries-in-a-single-expression

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_dict import *  # NOQA
        >>> import utool as ut
        >>> x = {'a': 1, 'b': 2}
        >>> y = {'b': 3, 'c': 4}
        >>> mergedict_ = merge_dicts(x, y)
        >>> result = ut.repr4(mergedict_, sorted_=True, newlines=False)
        >>> print(result)
=================
10193235
count:2


def hierarchical_group_items(item_list, groupids_list):
    """
    Generalization of group_item. Convert a flast list of ids into a heirarchical dictionary.

    TODO: move to util_dict

    Reference:
        http://stackoverflow.com/questions/10193235/python-translate-a-table-to-a-hierarchical-dictionary

    Args:
        item_list (list):
        groupids_list (list):

    CommandLine:
        python -m utool.util_dict --exec-hierarchical_group_items

    Example:
        >>> # ENABLE_DOCTEST
=================
22663966
count:2
        if isinstance(node, OrderedDict):
            return OrderedDict(keyval_list)
        else:
            return dict(keyval_list)


def move_odict_item(odict, key, newpos):
    """
    References:
        http://stackoverflow.com/questions/22663966/changing-order-of-ordered-dictionary-in-python

    CommandLine:
        python -m utool.util_dict --exec-move_odict_item

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_dict import *  # NOQA
        >>> import utool as ut
        >>> odict = OrderedDict()
        >>> odict['a'] = 1
=================
8230315
count:2
        if self.verbose > 0:
            print('[cache] ... ' + self.fname + ' Cacher save')
        save_cache(self.dpath, self.fname, cfgstr, data, self.ext)


#@util_decor.memoize
def make_utool_json_encoder(allow_pickle=False):
    """
    References:
        http://stackoverflow.com/questions/8230315/python-sets-are
        http://stackoverflow.com/questions/11561932/why-does-json
        https://github.com/jsonpickle/jsonpickle
        http://stackoverflow.com/questions/24369666/typeerror-b1
        http://stackoverflow.com/questions/30469575/how-to-pickle
    """
    import utool as ut
    PYOBJECT_TAG = '__PYTHON_OBJECT__'
    UUID_TAG = '__UUID__'
    SLICE_TAG = '__SLICE__'

=================
11561932
count:2
            print('[cache] ... ' + self.fname + ' Cacher save')
        save_cache(self.dpath, self.fname, cfgstr, data, self.ext)


#@util_decor.memoize
def make_utool_json_encoder(allow_pickle=False):
    """
    References:
        http://stackoverflow.com/questions/8230315/python-sets-are
        http://stackoverflow.com/questions/11561932/why-does-json
        https://github.com/jsonpickle/jsonpickle
        http://stackoverflow.com/questions/24369666/typeerror-b1
        http://stackoverflow.com/questions/30469575/how-to-pickle
    """
    import utool as ut
    PYOBJECT_TAG = '__PYTHON_OBJECT__'
    UUID_TAG = '__UUID__'
    SLICE_TAG = '__SLICE__'

    def decode_pickle(text):
=================
24369666
count:2


#@util_decor.memoize
def make_utool_json_encoder(allow_pickle=False):
    """
    References:
        http://stackoverflow.com/questions/8230315/python-sets-are
        http://stackoverflow.com/questions/11561932/why-does-json
        https://github.com/jsonpickle/jsonpickle
        http://stackoverflow.com/questions/24369666/typeerror-b1
        http://stackoverflow.com/questions/30469575/how-to-pickle
    """
    import utool as ut
    PYOBJECT_TAG = '__PYTHON_OBJECT__'
    UUID_TAG = '__UUID__'
    SLICE_TAG = '__SLICE__'

    def decode_pickle(text):
        obj = pickle.loads(codecs.decode(text.encode(), 'base64'))
        return obj
=================
30469575
count:2

#@util_decor.memoize
def make_utool_json_encoder(allow_pickle=False):
    """
    References:
        http://stackoverflow.com/questions/8230315/python-sets-are
        http://stackoverflow.com/questions/11561932/why-does-json
        https://github.com/jsonpickle/jsonpickle
        http://stackoverflow.com/questions/24369666/typeerror-b1
        http://stackoverflow.com/questions/30469575/how-to-pickle
    """
    import utool as ut
    PYOBJECT_TAG = '__PYTHON_OBJECT__'
    UUID_TAG = '__UUID__'
    SLICE_TAG = '__SLICE__'

    def decode_pickle(text):
        obj = pickle.loads(codecs.decode(text.encode(), 'base64'))
        return obj

=================
11561932
count:2
    Converts a python object to a JSON string using the utool convention

    Args:
        val (object):

    Returns:
        str: json_str

    References:
        http://stackoverflow.com/questions/11561932/why-does-json-dumpslistnp

    CommandLine:
        python -m utool.util_cache --test-to_json
        python3 -m utool.util_cache --test-to_json

    Example:
        >>> # ENABLE_DOCTEST
        >>> from utool.util_cache import *  # NOQA
        >>> import utool as ut
        >>> import numpy as np
=================
7489732
count:2
    shelf_fpath = join(global_cache_dir, meta_util_constants.global_cache_fname)
    return shelf_fpath


def shelf_open(fpath):
    """
    allows for shelf to be used in with statements

    References:
        http://stackoverflow.com/questions/7489732/easiest-way-to-add-a-function-to-existing-class

    CommandLine:
        python -m utool.util_cache --test-shelf_open

    Example:
        >>> # DISABLE_DOCTEST
        >>> # UNSTABLE_DOCTEST
        >>> import utool as ut
        >>> fpath = ut.unixjoin(ut.ensure_app_resource_dir('utool'), 'testshelf.shelf')
        >>> with ut.shelf_open(fpath) as dict_:
=================
1158076
count:2
        >>> # DISABLE_DOCTEST
        >>> from utool.util_path import *  # NOQA
        >>> fpath = '?'
        >>> times = None
        >>> verbose = True
        >>> result = touch(fpath, times, verbose)
        >>> print(result)

    References:
        http://stackoverflow.com/questions/1158076/implement-touch-using-python
    """
    try:
        if verbose:
            print('[util_path] touching %r' % fpath)
        with open(fpath, 'a'):
            os.utime(fpath, times)
    except Exception as ex:
        import utool
        utool.printex(ex, 'touch %s' % fpath)
        raise
=================
19859840
count:2
        with_files (bool): (default = True)
        with_dirs (bool): (default = True)
        maxdepth (None): (default = None)
        exclude_dirs (list): (default = [])

    Yields:
        path

    References:
        http://stackoverflow.com/questions/19859840/excluding-dirs-in-os-walk
    """
    from utool import util_iter
    if kwargs.get('verbose', False):  # log what i'm going to do
        print('[util_path] glob(dpath=%r)' % truepath(dpath,))

    debug = False
    if pattern is None:
        # separate extract pattern from dpath
        if debug:
            print('[iglob] parsing dpath = %r' % (dpath,))
=================
19859840
count:2
    #exclude_dirs_rel = [relpath(dpath_, dir_) for dir_ in exclude_dirs]
    #exclude_dirs_rel = [relpath(dpath_, dir_) for dir_ in exclude_dirs]
    #print('\n\n\n')
    #import utool as ut
    #print('exclude_dirs = %s' % (ut.repr4(exclude_dirs),))
    for root, dirs, files in os.walk(dpath_, topdown=True):
        # Modifying dirs in-place will prune the subsequent files and
        # directories visitied by os.walk
        # References:
        #     http://stackoverflow.com/questions/19859840/excluding-directories-in-os-walk
        rel_root = relpath(root, dpath_)
        rel_root2 = relpath(root, dirname(dpath_))
        #print('rel_root = %r' % (rel_root,))
        #if len(dirs) > 0:
        #    print('dirs = %s' % (ut.repr4([join(rel_root, d) for d in dirs]),))
        if len(exclude_dirs) > 0:
            dirs[:] = [d for d in dirs if normpath(join(rel_root, d)) not in exclude_dirs]
            # hack
            dirs[:] = [d for d in dirs if normpath(join(rel_root2, d)) not in exclude_dirs]
            # check abs path as well
=================
19859840
count:2

    Args:
        dpath_list       (list):
        include_patterns (str):
        exclude_dirs     (None):
        recursive        (bool):

    References:
        # TODO: fix names and behavior of exclude_dirs and greater_exclude_dirs
        http://stackoverflow.com/questions/19859840/excluding-directories-in-os-walk

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_path import *  # NOQA
        >>> import utool as ut
        >>> dpath_list = [dirname(dirname(ut.__file__))]
        >>> include_patterns = get_standard_include_patterns()
        >>> exclude_dirs = ['_page']
        >>> greater_exclude_dirs = get_standard_exclude_dnames()
        >>> recursive = True
=================
23598461
count:2
                print_(fmt_str % (name, lx, colored_line))
    return '\n'.join(msg_list)


def get_win32_short_path_name(long_name):
    """
    Gets the short path name of a given long path.

    References:
        http://stackoverflow.com/a/23598461/200291
        http://stackoverflow.com/questions/23598289/get-win-short-fname-python

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_path import *  # NOQA
        >>> import utool as ut  # NOQA
        >>> # build test data
        >>> #long_name = unicode(normpath(ut.get_resource_dir()))
        >>> long_name = unicode(r'C:/Program Files (x86)')
        >>> #long_name = unicode(r'C:/Python27')
=================
23598289
count:2
    return '\n'.join(msg_list)


def get_win32_short_path_name(long_name):
    """
    Gets the short path name of a given long path.

    References:
        http://stackoverflow.com/a/23598461/200291
        http://stackoverflow.com/questions/23598289/get-win-short-fname-python

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_path import *  # NOQA
        >>> import utool as ut  # NOQA
        >>> # build test data
        >>> #long_name = unicode(normpath(ut.get_resource_dir()))
        >>> long_name = unicode(r'C:/Program Files (x86)')
        >>> #long_name = unicode(r'C:/Python27')
        #unicode(normpath(ut.get_resource_dir()))
=================
1447575
count:2
    return fname


def win_shortcut(source, link_name):
    """
    Attempt to create windows shortcut
    TODO: TEST / FIXME

    References:
        http://stackoverflow.com/questions/1447575/symlinks-on-windows
    """
    if True:
        import ctypes
        kdll = ctypes.windll.LoadLibrary("kernel32.dll")
        code = 1 if isdir(source) else 0
        kdll.CreateSymbolicLinkA(source, link_name, code)
    else:
        import ctypes
        csl = ctypes.windll.kernel32.CreateSymbolicLinkW
        csl.argtypes = (ctypes.c_wchar_p, ctypes.c_wchar_p, ctypes.c_uint32)
=================
20794
count:2
    Removes all broken links in a directory

    Args:
        dpath (str):  directory path

    Returns:
        int: num removed

    References:
        http://stackoverflow.com/questions/20794/find-broken-symlinks-with-python

    CommandLine:
        python -m utool remove_broken_links:0

    Example:
        >>> # DISABLE_DOCTEST
        >>> # SCRIPT
        >>> from utool.util_path import *  # NOQA
        >>> remove_broken_links('.')

=================
17078696
count:2
    A[tuple(np.array(uv_list).T)] = 1
    return A


def nx_transitive_reduction(G, mode=1):
    """
    References:
        https://en.wikipedia.org/wiki/Transitive_reduction#Computing_the_reduction_using_the_closure
        http://dept-info.labri.fr/~thibault/tmp/0201008.pdf
        http://stackoverflow.com/questions/17078696/transitive-reduction-of-directed-graph-in-python

    CommandLine:
        python -m utool.util_graph nx_transitive_reduction --show

    Example:
        >>> # DISABLE_DOCTEST
        >>> from utool.util_graph import *  # NOQA
        >>> import utool as ut
        >>> G = nx.DiGraph([('a', 'b'), ('a', 'c'), ('a', 'e'),
        >>>                 ('a', 'd'), ('b', 'd'), ('c', 'e'),
=================
16150557
count:2
    where u and v are nodes comprising an edge,
    and d would be a dictionary of edge attributes

    ref_back determines whether the created subgraph refers to back
    to the original graph and therefore changes to the subgraph's
    attributes also affect the original graph, or if it is to create a
    new copy of the original graph.

    References:
        http://stackoverflow.com/questions/16150557/nx-subgraph-from-edges
    """

    # TODO: support multi-di-graph
    sub_nodes = list({y for x in edge_list for y in x[0:2]})
    #edge_list_no_data = [edge[0:2] for edge in edge_list]
    multi_edge_list = [edge[0:3] for edge in edge_list]

    if ref_back:
        G_sub = G.subgraph(sub_nodes)
        for edge in G_sub.edges(keys=True):
=================
33332462
count:2
            g_pos = nx.complement(g_neg)
            # Iterate until n1 has no more possible connections
            neigbs = list(g_pos.neighbors(n1))
            neigbs = ut.isect(neigbs, unused)
    print('num = %r' % (num,))
    return num


def nx_mincut_edges_weighted(G, s, t, capacity='weight'):
    # http://stackoverflow.com/questions/33332462/minimum-s-t-edge-cut-which-takes-edge-weight-into-consideration
    cut_weight, partitions = nx.minimum_cut(G, s, t, capacity=capacity)
    edge_cut_list = []
    for p1_node in partitions[0]:
        for p2_node in partitions[1]:
            if G.has_edge(p1_node, p2_node):
                edge_cut_list.append((p1_node, p2_node))
    # assert edge_cut_list == nx_edges_between(G, partitions[0], partitions[1])
    return edge_cut_list


=================
11125212
count:2
    warnings.warn(repr(ex)+'\n!!!!!!!!')
    embedded = False
'''



def roundrobin(*iterables):
    """roundrobin('ABC', 'D', 'EF') --> A D E B F C"""
    raise NotImplementedError('not sure if this implementation is correct')
    # http://stackoverflow.com/questions/11125212/interleaving-lists-in-python
    #sentinel = object()
    #return (x for x in chain(*zip_longest(fillvalue=sentinel, *iterables)) if x is not sentinel)
    pending = len(iterables)
    if six.PY2:
        nexts = cycle(iter(it).next for it in iterables)
    else:
        nexts = cycle(iter(it).__next__ for it in iterables)
    while pending:
        try:
            for next in nexts:
=================
15706339
count:2
#    Example:
#        >>> from utool.util_distances import *   # NOQA
#        >>> import numpy as np
#        >>> hist1 = np.random.rand(128)
#        >>> hist2 = np.random.rand(128)
#        >>> result = emd(hist1, hist2)

#    References:
#        https://github.com/andreasjansson/python-emd
#        http://stackoverflow.com/questions/15706339/how-to-compute-emd-for-2-numpy-arrays-i-e-histogram-using-opencv
#        http://www.cs.huji.ac.il/~ofirpele/FastEMD/code/
#        http://www.cs.huji.ac.il/~ofirpele/publications/ECCV2008.pdf
#    """
#    try:
#        from cv2 import cv
#    except ImportError as ex:
#        print(repr(ex))
#        print('Cannot import cv. Is opencv 2.4.9?')
#        return -1

=================
1114465
count:245
        "                // console.log(\"Handling '\" + msg_type + \"' message: \", msg);\n",
        "                callback(fig, msg);\n",
        "            } catch (e) {\n",
        "                console.log(\"Exception inside the 'handler_\" + msg_type + \"' callback:\", e, e.stack, msg);\n",
        "            }\n",
        "        }\n",
        "    };\n",
        "}\n",
        "\n",
        "// from http://stackoverflow.com/questions/1114465/getting-mouse-location-in-canvas\n",
        "mpl.findpos = function(e) {\n",
        "    //this section is from http://www.quirksmode.org/js/events_properties.html\n",
        "    var targ;\n",
        "    if (!e)\n",
        "        e = window.event;\n",
        "    if (e.target)\n",
        "        targ = e.target;\n",
        "    else if (e.srcElement)\n",
        "        targ = e.srcElement;\n",
        "    if (targ.nodeType == 3) // defeat Safari bug\n",
=================
31775450
count:1

import paho.mqtt.client as mqtt

# Unknown license, code found here:  http://stackoverflow.com/questions/31775450/publish-and-subscribe-with-paho-mqtt-client

# reference to MQTT python found here: http://mosquitto.org/documentation/python/

# requires:  sudo pip install paho-mqtt
# pip requires: sudo apt-get install python-pip

message = 'ON'
def on_connect(mosq, obj, rc):
#    mqttc.subscribe("aebl/hello", 0)
#    mqttc.subscribe("aebl/alive", 0)
=================
31775450
count:1
#
# This script monitors noo-ebs broker and acts on messages
# It is an initial and temporary bridge to handle messages
#
# Want to be able to handle files in order to send out PSA
#  messages on consideration and subscription

import paho.mqtt.client as mqtt

# Unknown license, code found here:  http://stackoverflow.com/questions/31775450/publish-and-subscribe-with-paho-mqtt-client

# reference to MQTT python found here: http://mosquitto.org/documentation/python/

# requires:  sudo pip install paho-mqtt
# pip requires: sudo apt-get install python-pip

# Should include functionality to gzip and rotate of logs created by mon_mqtt to
# prevent filling all disk space
# 

=================
17485382
count:1
# and idea from https://docs.python.org/2/library/itertools.html#itertools.product

from Tkinter import *
import itertools
import functools


def evaluate(event):
	# example: iteration over text lines:
	# http://stackoverflow.com/questions/17485382/tkinter-text-widget-iterating-over-lines
	
	# turn text into sets (then we have unique elements!)
	set1 = set(entry1.get('1.0', 'end-1c').splitlines())
	set2 = set(entry2.get('1.0', 'end-1c').splitlines())
	#console.write('DEBUGGING: <char> = ' + repr(event.char) + '\n')
	
	# when in state "readonly", then it's not possible to call delete() or insert()...
	res.config(state=NORMAL)
	res.delete(1.0, END)
	
=================
6336424
count:1

# based on example from http://www.python-course.eu/tkinter_entry_widgets.php
# and improvements from http://effbot.org/tkinterbook/entry.htm
# and idea from https://docs.python.org/2/library/itertools.html#itertools.product
# and http://stackoverflow.com/questions/6336424/python-build-a-dynamic-growing-truth-table

from Tkinter import *
import itertools

MAX_NOF_VARIABLES = 6

def evaluate(event):
	try:
		nof_inputs = int(entry1.get())
		
=================
35526466
count:1
		dmsObjects[bmo].insertplcAO(subkey, int(match.group(2)))
	

	
	
def main(argv=None):
	console.show()
	
	# convert opened DMS file into Windows-1252 encoding
	# hint by http://stackoverflow.com/questions/35526466/notepad-convert-to-utf-8-multiple-files
	# strings found in files C:\Program Files (x86)\Notepad++\localization\...
	#
	# =>following code doesn't run... :-/
	#try:
	#	notepad.runMenuCommand("Kodierung", "Zeichensatz", "Westeuropäisch", "Windows-1252")
	#except:
	#	try:
	#		notepad.runMenuCommand("Encoding", "Character Set", "Western European", "Windows-1252")
	#	except:
	#		console.write('ERROR: Could not change encoding of opened DMS... =>you should manually do "Kodierung"->"Zeichensatz"->"Westeuropäisch"->"Windows-1252" for correct interpretation of german Umlaut!')
=================
6336424
count:1

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
"""

# based on example from http://www.python-course.eu/tkinter_entry_widgets.php
# and improvements from http://effbot.org/tkinterbook/entry.htm
# and idea from https://docs.python.org/2/library/itertools.html#itertools.product
# and http://stackoverflow.com/questions/6336424/python-build-a-dynamic-growing-truth-table


import itertools
from Tkinter import *

MAX_NOF_VARIABLES = 6

class myGui(Tk):
	def __init__(self):
		Tk.__init__(self)
=================
5811960
count:1
from distutils.core import setup
import py2exe
import dms.dmspipe
import dms.datapoint
import argparse
import time
from datetime import datetime

# some help from
# http://stackoverflow.com/questions/5811960/is-there-a-way-to-specify-the-build-directory-for-py2exe
# http://www.py2exe.org/index.cgi/ListOfOptions

options = {'py2exe': {
           'dist_dir': r'..\py2exe_output\DMS_tracer'
           }}
		   
=================
5811960
count:1


from distutils.core import setup
import py2exe
import dms.dmspipe
import os
import time

# some help from
# http://stackoverflow.com/questions/5811960/is-there-a-way-to-specify-the-build-directory-for-py2exe
# http://www.py2exe.org/index.cgi/ListOfOptions

options = {'py2exe': {
           'dist_dir': r'..\py2exe_output\Generate_BMO_Link_Graph'
           }}
		   
=================
5811960
count:1




from distutils.core import setup
import py2exe


# some help from
# http://stackoverflow.com/questions/5811960/is-there-a-way-to-specify-the-build-directory-for-py2exe
# http://www.py2exe.org/index.cgi/ListOfOptions
# http://www.py2exe.org/index.cgi/data_files

Mydata_files = [('configfile', ['tools\DMS_Controlfunction.yml'])]


options = {'py2exe': {
           'dist_dir': r'..\py2exe_output\DMS_Controlfunction'
           }}
		   
=================
5811960
count:1
import dms.dmspipe
import dms.datapoint
import Tkinter as tk
import time
import os
import io
import traceback

# some help from
# http://stackoverflow.com/questions/5811960/is-there-a-way-to-specify-the-build-directory-for-py2exe
# http://www.py2exe.org/index.cgi/ListOfOptions

options = {'py2exe': {
           'dist_dir': r'..\py2exe_output\DMS_Value_Changer'
           }}
		   
=================
5811960
count:1
import py2exe
import dms.dmspipe
import dms.datapoint
import misc.clipboard
import functools
import Tkinter
import ttk

# some help from
# http://stackoverflow.com/questions/5811960/is-there-a-way-to-specify-the-build-directory-for-py2exe
# http://www.py2exe.org/index.cgi/ListOfOptions

options = {'py2exe': {
           'dist_dir': r'..\py2exe_output\BMO_tie_point'
           }}
		   
=================
5811960
count:1


from distutils.core import setup
import py2exe
import dms.dmspipe
import Tkinter
import ttk

# some help from
# http://stackoverflow.com/questions/5811960/is-there-a-way-to-specify-the-build-directory-for-py2exe
# http://www.py2exe.org/index.cgi/ListOfOptions

options = {'py2exe': {
           'dist_dir': r'..\py2exe_output\Renumber_tool'
           }}
		   
=================
5811960
count:1




from distutils.core import setup
import py2exe


# some help from
# http://stackoverflow.com/questions/5811960/is-there-a-way-to-specify-the-build-directory-for-py2exe
# http://www.py2exe.org/index.cgi/ListOfOptions

options = {'py2exe': {
           'dist_dir': r'..\py2exe_output\TCP_Relay'
           }}
		   
=================
5811960
count:1



from distutils.core import setup
from visu.psc import Parser
import py2exe


# some help from
# http://stackoverflow.com/questions/5811960/is-there-a-way-to-specify-the-build-directory-for-py2exe
# http://www.py2exe.org/index.cgi/ListOfOptions

options = {'py2exe': {
           'dist_dir': r'..\py2exe_output\Preview_Accessrights'
           }}
		   
=================
5811960
count:1


from distutils.core import setup
import py2exe
import dms.dmspipe
import Tkinter
import ttk

# some help from
# http://stackoverflow.com/questions/5811960/is-there-a-way-to-specify-the-build-directory-for-py2exe
# http://www.py2exe.org/index.cgi/ListOfOptions

options = {'py2exe': {
           'dist_dir': r'..\py2exe_output\PSC_file_selector'
           }}
		   
=================
5811960
count:1


from distutils.core import setup
import py2exe
import dms.dmspipe
import Tkinter
import ttk

# some help from
# http://stackoverflow.com/questions/5811960/is-there-a-way-to-specify-the-build-directory-for-py2exe
# http://www.py2exe.org/index.cgi/ListOfOptions

options = {'py2exe': {
           'dist_dir': r'..\py2exe_output\Search_BMO_Instances'
           }}
		   
=================
5811960
count:1
import py2exe
import dms.dmswebsocket as dms
import logging
import argparse
import os
import re
import collections

# some help from
# http://stackoverflow.com/questions/5811960/is-there-a-way-to-specify-the-build-directory-for-py2exe
# http://www.py2exe.org/index.cgi/ListOfOptions

options = {'py2exe': {
           'dist_dir': r'..\py2exe_output\PSC_to_ALM_Mapper'
           }}
		   
=================
9226516
count:3

NOF_ROWS = 32
NOF_COLUMNS = 32

def get_encoding():
	global ENCODING_STDOUT1
	# following code seems only to work in IDE...
	ENCODING_STDOUT1= sys.stdout.encoding or sys.getfilesystemencoding()

	# hint from http://stackoverflow.com/questions/9226516/python-windows-console-and-encodings-cp-850-vs-cp1252
	# following code doesn't work in IDE because PyCharm uses UTF-8 and not encoding from Windows command prompt...
	global ENCODING_STDOUT2
	ENCODING_STDOUT2 = locale.getpreferredencoding()

	# another try: using encoding-guessing of IDE "IDLE"
	# hint from https://mail.python.org/pipermail/tkinter-discuss/2010-December/002602.html
	global ENCODING_LOCALE
	import idlelib.IOBinding
	ENCODING_LOCALE = idlelib.IOBinding.encoding
	print(u'Using encoding "' + ENCODING_LOCALE + u'" for input and trying "' + ENCODING_STDOUT1 + u'" or "' + ENCODING_STDOUT2 + u'" for STDOUT')
=================
3224268
count:1
			get_encoding()
		unicode_line = line.decode(ENCODING_LOCALE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	if not (ENCODING_STDOUT1 and ENCODING_STDOUT2):
		get_encoding()
	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	try:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT1, errors='strict')
	except UnicodeEncodeError:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT2, errors='strict')
	print(bytestring_line)


class BlmFrame(object):
	def __init__(self):
		self.row_list = []  # one integer per row represents 32 pixels per row
=================
8928240
count:1
	def set_duration(self, duration_int):
		self.duration_int = duration_int

	def append_row(self, row_str):
		if not self.row_length:
			self.row_length = len(row_str)
		elif self.row_length != len(row_str):
			print('WARNING: row "' + row_str + '" has wrong length, is this BLM-file corrupted?')
		# constructor of integer accepts string
		# (help from http://stackoverflow.com/questions/8928240/convert-base-2-binary-number-string-to-int )
		self.row_list.append(int(row_str, 2))

	def get_size(self):
		return self.row_length, len(self.row_list)

	def get_rows(self):
		for row in self.row_list:
			yield row

	def get_duration_in_secs(self):
=================
13180941
count:1
		bitstring = '1' * min(nof_visible_pixels, nof_max_pixels)
		return int(bitstring, 2)

	def _get_dp_for_row(self, row_int):
		''' DMS tree where Animation rows are stored (one 32bit value as bitmap per row) '''
		return ':'.join([Blinkenlights_Emulator.EMULATOR_DMS_KEY, 'Row', str(row_int).zfill(2), 'Raw'])


	def play_moviefile(self):
		# help from http://stackoverflow.com/questions/13180941/how-to-kill-a-while-loop-with-a-keystroke
		try:
			play_movie = True
			while play_movie:
				self.blmovie.play(self.show_frame)

				play_movie = self.endless_movie
		except KeyboardInterrupt:
			pass
		print('Quitting "misc.Animation"...')

=================
3224268
count:1
			get_encoding()
		unicode_line = line.decode(ENCODING_LOCALE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	if not (ENCODING_STDOUT1 and ENCODING_STDOUT2):
		get_encoding()
	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	try:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT1, errors='strict')
	except UnicodeEncodeError:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT2, errors='strict')
	print(bytestring_line)



class VisiSnake(object):

=================
3224268
count:1
			get_encoding()
		unicode_line = line.decode(ENCODING_LOCALE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	if not (ENCODING_STDOUT1 and ENCODING_STDOUT2):
		get_encoding()
	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	try:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT1, errors='strict')
	except UnicodeEncodeError:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT2, errors='strict')
	print(bytestring_line)



class _Gradient_Segment(object):

=================
3429250
count:1
#import sys
import subprocess
import os

DEBUGGING = False
DMS_FILENAME = u'dms.exe'

def _search_tasklist():
	# first try: search executable in currently executed tasks
	# help from http://stackoverflow.com/questions/3429250/determining-running-programs-in-python
	# remark: WMI command-line (WMIC) utility works on Windows >Vista and Server >2008
	#  (according to https://msdn.microsoft.com/en-us/library/windows/desktop/aa394531(v=vs.85).aspx )
	# =>following command gives wrong info: 'WMIC PROCESS get Commandline'
	#  because Visi.Plus(c) >=v1.6 DMS.exe has no more fullpath in attribute "Commandline"...
	# help from http://superuser.com/questions/768984/show-exe-file-path-of-running-processes-on-the-command-line-in-windows
	cmd = 'WMIC PROCESS get ExecutablePath'
	proc = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
	for line in proc.stdout:
		if DMS_FILENAME in line:
			if DEBUGGING:
=================
2422798
count:1
	return None

def _search_usual_locations():
	# fallback: in case DMS is not running, search at usual locations:
	# (search order is from left to right)
	DIRECTORIES = ['c:\\PromosNT', 'c:\\Promos17', 'c:\\Promos16', 'c:\\Promos15']
	BIN_FOLDER = 'bin'
	for directory in DIRECTORIES:
		# FIXME: os.path.join() doesn't work in every case... is there a better way?
		# http://stackoverflow.com/questions/2422798/python-os-path-join-on-windows
		filename = os.path.join(directory, BIN_FOLDER, DMS_FILENAME)
		if os.path.isfile(filename):
			return filename
	return None

def get_fullpath(name_of_binary=u''):
	'''
	return fullpath of Visi.Plus(c) binaries,
	currently running instance is prefered over other installations
	=>optional argument allows getting fullpath for one specific binary
=================
14973963
count:1
-researches showed that it's possible to store a lot of data in a DMS-datapoint with type STR:
 -maximal 999 characters gets serialized in DMS file
 -during runtime it can store much more
 -GE crashes when you're trying to display more than 8k characters in a textfield
-for responsive user interaction we should implement event-based callbacks in DMS pipe... Otherwise it's only polling...


differences to "curses":
=>it seems that Python "curses" library doesn't follow class name capitalization convention, but we do...
https://stackoverflow.com/questions/14973963/if-the-convention-in-python-is-to-capitalize-classes-why-then-is-list-not-cap

=>Hmm, in Python's "curse" it seems that there exists only ONE terminal screen at the same time...
==>I want to allow multiple screens, so we have different classes and instances.

==>"show stopper": it seems that DMS-datapoint "STR" written by pyDMS_WriteSTREx has a maximum length of 80 characters,
 while in DMS executable it's possible to include much more... :-(
 =>dirty hack: we have to start "SetDMSVal.exe" and send the huge string (this way it WILL work!), look in BMO_Tiepoint_Info)


Copyright (C) 2017 Stefan Braun
=================
9226516
count:1
SCREEN_MAX_COLS = 80



def get_encoding():
	global ENCODING_STDOUT1
	# following code seems only to work in IDE...
	ENCODING_STDOUT1 = sys.stdout.encoding or sys.getfilesystemencoding()

	# hint from http://stackoverflow.com/questions/9226516/python-windows-console-and-encodings-cp-850-vs-cp1252
	# following code doesn't work in IDE because PyCharm uses UTF-8 and not encoding from Windows command prompt...
	global ENCODING_STDOUT2
	ENCODING_STDOUT2 = locale.getpreferredencoding()

	# another try: using encoding-guessing of IDE "IDLE"
	# hint from https://mail.python.org/pipermail/tkinter-discuss/2010-December/002602.html
	global ENCODING_LOCALE
	import idlelib.IOBinding
	ENCODING_LOCALE = idlelib.IOBinding.encoding
	print(
=================
3224268
count:1
			get_encoding()
		unicode_line = line.decode(ENCODING_LOCALE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	if not (ENCODING_STDOUT1 and ENCODING_STDOUT2):
		get_encoding()
	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	try:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT1, errors='strict')
	except UnicodeEncodeError:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT2, errors='strict')
	print(bytestring_line)


class Error(Exception):
	''' custom exception when an error occours in curses-emulator '''
	# based on help from https://stackoverflow.com/questions/1319615/proper-way-to-declare-custom-exceptions-in-modern-python
=================
1319615
count:1
	try:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT1, errors='strict')
	except UnicodeEncodeError:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT2, errors='strict')
	print(bytestring_line)


class Error(Exception):
	''' custom exception when an error occours in curses-emulator '''
	# based on help from https://stackoverflow.com/questions/1319615/proper-way-to-declare-custom-exceptions-in-modern-python
	def __init__(self, message):
		# Call the base class constructor with the parameters it needs
		Exception.__init__(message)


class _CharMatrix(object):
	''' two-dimensional array as list of lists for organizing characters '''
	def __init__(self, nlines, ncols):
		self._nlines = nlines
		self._ncols = ncols
=================
9226516
count:1
NOF_ROWS = 32
NOF_COLUMNS = 32
PAUSE_SECONDS = 0.2

def get_encoding():
	global ENCODING_STDOUT1
	# following code seems only to work in IDE...
	ENCODING_STDOUT1= sys.stdout.encoding or sys.getfilesystemencoding()

	# hint from http://stackoverflow.com/questions/9226516/python-windows-console-and-encodings-cp-850-vs-cp1252
	# following code doesn't work in IDE because PyCharm uses UTF-8 and not encoding from Windows command prompt...
	global ENCODING_STDOUT2
	ENCODING_STDOUT2 = locale.getpreferredencoding()

	# another try: using encoding-guessing of IDE "IDLE"
	# hint from https://mail.python.org/pipermail/tkinter-discuss/2010-December/002602.html
	global ENCODING_LOCALE
	import idlelib.IOBinding
	ENCODING_LOCALE = idlelib.IOBinding.encoding
	print(u'Using encoding "' + ENCODING_LOCALE + u'" for input and trying "' + ENCODING_STDOUT1 + u'" or "' + ENCODING_STDOUT2 + u'" for STDOUT')
=================
3224268
count:1
			get_encoding()
		unicode_line = line.decode(ENCODING_LOCALE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	if not (ENCODING_STDOUT1 and ENCODING_STDOUT2):
		get_encoding()
	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	try:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT1, errors='strict')
	except UnicodeEncodeError:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT2, errors='strict')
	print(bytestring_line)


def get_dp_for_row(row):
	''' DMS tree where Animation rows are stored (one 32bit value as bitmap per row) '''
	return "Animation:Row:" + str(row).zfill(2) + ':Raw'
=================
13180941
count:1
		for x in range(NOF_ROWS):
			curr_dp = get_dp_for_row(x)
			curr_dms.pyDMS_WriteDWUEx(curr_dp, 0)

		# following a road: bitshift a bit pattern randomly to the left or rigth
		rows_list = NOF_ROWS * [0]
		# our "road": some bits are set (hint: preview pattern with "bin(xyz)")
		bit_pattern = 2047

		# help from http://stackoverflow.com/questions/13180941/how-to-kill-a-while-loop-with-a-keystroke
		try:
			while True:
				if rows_list[0] == 0:
					# we got an empty road, it's our first run...
					# setting row somewhere into middle of screen
					new_value = bit_pattern << (NOF_COLUMNS / 2 - 2)
				else:
					# insert a new road row on top
					previous_value = rows_list[0]

=================
699866
count:1
					curr_dp = get_dp_for_row(x)
					if DEBUGGING:
						my_print('\twriting value "' + str(curr_row_value) + '" into DMS datapoint ' + curr_dp)
						my_print('\t(datatype: ' + repr(type(curr_row_value)))
					curr_dms.pyDMS_WriteDWUEx(curr_dp, curr_row_value)

				if len(rows_list) > NOF_ROWS:
					rows_list = rows_list[:NOF_ROWS]

				# help from http://stackoverflow.com/questions/699866/python-int-to-binary
				my_print('drawn road "' + "{0:b}".format(new_value).zfill(NOF_COLUMNS))
				#time.sleep(PAUSE_SECONDS)
				time.sleep(0.05)
		except KeyboardInterrupt:
			pass
		print('Quitting "misc.Animation"...')

	else:
		my_print('\nDMS tree for Animation seems corrupted... Quitting...')
		return 1
=================
16396141
count:1
	# intensities of the image to ascii characters
	# (copied from https://gist.github.com/cdiener/10567484 )
	# FIXME: find a better suited character list for getting good result in GE
	CHARS = list(' .,:;irsXA253hMHGS#9B&@')

	def __init__(self, dms_ws):
		self._dms_ws = dms_ws

		# storing display: using numpy two dimensional array, one 8bit value per pixel
		# help from https://stackoverflow.com/questions/16396141/python-numpy-2d-array-indexing
		# numpy datatypes: https://docs.scipy.org/doc/numpy-1.12.0/reference/arrays.dtypes.html
		self._buffer = np.zeros((Display.SCREEN_HEIGHT, Display.SCREEN_WIDTH), dtype='uint8')

		# every row has a dirty flag
		self._dirty_rows = [True] * Display.SCREEN_HEIGHT

		self._last_update = 0
		self.update()


=================
9252373
count:1
				self._buffer[y, ...] = np.array((255), dtype='uint8')
				self._dirty_rows[y] = True
		self.update()



	def update(self):
		''' redraw changed lines '''
		# randomly update row for smoother screen redrawing
		# (with help from https://stackoverflow.com/questions/9252373/random-iteration-in-python )
		#
		# =>conversion of bitfield into a string of chars representing every pixel,
		#   it's very similar to Display2

		row_idx_list = range(Display.SCREEN_HEIGHT)
		random.shuffle(row_idx_list)
		for y in row_idx_list:
			if self._dirty_rows[y]:
				chars_list = []
				for x in range(Display.SCREEN_WIDTH):
=================
5218895
count:1
		                            "show_function 5",
		                            "STOP Python program"]):
			dropdown_const_list.extend([item, str(idx + 1)])     # first item in arrays in DMS have index 1
		resp = dms_ws.dp_set(path=':'.join([disp.DMS_BASEKEY, "Dropdown", "Constants"]),
		                     value="{" + ','.join(dropdown_const_list) + "}",
		                     create=True)

		# registering callback function when user changes dropdop menu
		# help with function attributes (I had troubles with variable scopes inside of functions)
		# https://stackoverflow.com/questions/5218895/python-nested-functions-variable-scoping
		main.pause = True
		main.choice = 1
		def cb_dropdown_menu(event):
			main.choice = event.value
			logger.debug('cb_dropdown_menu(): choice=' + str(main.choice))
			main.pause = False


		sub_obj = dms_ws.get_dp_subscription(path=':'.join([disp.DMS_BASEKEY, "Dropdown"]),
		                                     event=dms.ON_CHANGE)
=================
9252373
count:1
				self._bitfield[y] = allbits
				self._dirty_rows[y] = True
		self.update()



	def update(self):
		''' redraw changed lines '''
		# randomly update row for smoother screen redrawing
		# (with help from https://stackoverflow.com/questions/9252373/random-iteration-in-python )
		#
		# =>conversion of bitfield into a string of chars representing every pixel,
		#   it's very similar to Display2

		row_idx_list = range(Display.SCREEN_HEIGHT)
		random.shuffle(row_idx_list)
		for y in row_idx_list:
			if self._dirty_rows[y]:
				chars_list = []
				for x in range(Display.SCREEN_WIDTH):
=================
9252373
count:1
				self._bitfield[y] = allbits
				self._dirty_rows[y] = True
		self.update()



	def update(self):
		''' redraw changed lines '''
		# randomly update row for smoother screen redrawing
		# (with help from https://stackoverflow.com/questions/9252373/random-iteration-in-python )
		#
		# =>conversion of bitfield into a string-array of chars representing every pixel with "0" or "1"
		row_idx_list = range(Display.SCREEN_HEIGHT)
		random.shuffle(row_idx_list)
		for y in row_idx_list:
			if self._dirty_rows[y]:
				bits_list = []
				for x in range(Display.SCREEN_WIDTH):
					if self._test_bit(x, y):
						bits_list.append('1')
=================
3400495
count:1

import ctypes
import locale
import sys
import hashlib

def cp_PROMOS_factory(curr_size):
	# factory for dynamic size structure
	# example:
	# http://stackoverflow.com/questions/3400495/how-do-i-emulate-a-dynamically-sized-c-structure-in-python-using-ctypes
	# http://stackoverflow.com/questions/7015487/ctypes-variable-length-structures
	class CP_PROMOS(ctypes.Structure):
		"""
		clipboard object "PROMOS" with unknown structure
		"""

		# ways to get to content of "ctypes.c_char * 123" bytestring-arrays:
		# repr(msg.raw)
		# ctypes.string_at(ctypes.byref(msg), ctypes.sizeof(msg)))
		_fields_ = [("raw_bytearray",   ctypes.c_ubyte * curr_size)]
=================
7015487
count:1
import ctypes
import locale
import sys
import hashlib

def cp_PROMOS_factory(curr_size):
	# factory for dynamic size structure
	# example:
	# http://stackoverflow.com/questions/3400495/how-do-i-emulate-a-dynamically-sized-c-structure-in-python-using-ctypes
	# http://stackoverflow.com/questions/7015487/ctypes-variable-length-structures
	class CP_PROMOS(ctypes.Structure):
		"""
		clipboard object "PROMOS" with unknown structure
		"""

		# ways to get to content of "ctypes.c_char * 123" bytestring-arrays:
		# repr(msg.raw)
		# ctypes.string_at(ctypes.byref(msg), ctypes.sizeof(msg)))
		_fields_ = [("raw_bytearray",   ctypes.c_ubyte * curr_size)]

=================
579687
count:1
						if mystring[0] != DELIMITER and mystring[-1] != DELIMITER:
							result_set.add(mystring)
			return sorted(list(result_set))

	return CP_PROMOS




# http://stackoverflow.com/questions/579687/how-do-i-copy-a-string-to-the-clipboard-on-windows-using-python/4203897
class Clipboard(object):
	# based on example code from
	# http://bugs.python.org/file37366/test_clipboard_win.py
	# http://stackoverflow.com/questions/579687/how-do-i-copy-a-string-to-the-clipboard-on-windows-using-python/4203897

	cp_format_dict = {}                     # look-up for "clipboard format name" -> "clipboard format number"
	CF_UNICODETEXT = 13                     # standard clipboard format
	NAME_CF_PROMOS = 'PROMOS'               # custom clipboard format used by ProMoS (format name "PROMOS")
	cf_promos = 0                           # (system-dependant number, Windows assign it when clipboard format is registered)
	NAME_CF_CATALOGUE_OBJ = 'CATALOGUE_OBJ' # custom clipboard format used by ProMoS (format name "Catalogue Object")
=================
579687
count:1
	return CP_PROMOS




# http://stackoverflow.com/questions/579687/how-do-i-copy-a-string-to-the-clipboard-on-windows-using-python/4203897
class Clipboard(object):
	# based on example code from
	# http://bugs.python.org/file37366/test_clipboard_win.py
	# http://stackoverflow.com/questions/579687/how-do-i-copy-a-string-to-the-clipboard-on-windows-using-python/4203897

	cp_format_dict = {}                     # look-up for "clipboard format name" -> "clipboard format number"
	CF_UNICODETEXT = 13                     # standard clipboard format
	NAME_CF_PROMOS = 'PROMOS'               # custom clipboard format used by ProMoS (format name "PROMOS")
	cf_promos = 0                           # (system-dependant number, Windows assign it when clipboard format is registered)
	NAME_CF_CATALOGUE_OBJ = 'CATALOGUE_OBJ' # custom clipboard format used by ProMoS (format name "Catalogue Object")
	cf_catalogue_obj = 0                    # (system-dependant number, Windows assign it when clipboard format is registered)
	GMEM_DDESHARE = 0x2000

	# WinAPI: system errorcode
=================
22075754
count:1

		if handle != 0:
			# found a CF_PROMOS object
			if DEBUGGING:
				print('found a CF_PROMOS object on clipboard. Handle is now ' + str(handle))

			# size of clipboard object is not accurate in every case...
			# PROMOS object has minimal size of 8192 bytes, and maximum size is "as huge as needed"...
			# =>could have data from earlier copy processes in there!
			# http://stackoverflow.com/questions/22075754/how-do-i-determine-clipboard-data-size
			# https://msdn.microsoft.com/en-us/library/windows/desktop/aa366593%28v=vs.85%29.aspx
			buf_size = Clipboard.GlobalSize(handle)
			if DEBUGGING:
				print('size of CF_PROMOS object: ' + str(buf_size))

			cp_class = cp_PROMOS_factory(buf_size)
			self.cp_obj = cp_class()
			ctypes.memmove(ctypes.byref(self.cp_obj), handle, buf_size)

			if DEBUGGING:
=================
20598791
count:1


class _Async_Executor_thread(threading.Thread):
	""" executing handler functions asynchronously in background """
	# =>attention: if EventSystem doesn't keep "self._nof_eventsources" up to date, then this thread will keep whole Python program running!

	def __init__(self, target_q):
		threading.Thread.__init__(self)
		# trying to cleanup thread, so no daemon...
		# https://stackoverflow.com/questions/20596918/python-exception-in-thread-thread-1-most-likely-raised-during-interpreter-shutd/20598791#20598791
		self.daemon = False
		self._target_q = target_q
		#self.keep_running = True
		self._nof_eventsources = 1
		self._lock = threading.Lock()

	def run(self):
		while self._nof_eventsources > 0:
			try:
				_target, _args, _kwargs = self._target_q.get(block=False)
=================
6018340
count:1
		for fullpath in self._filelist_generator(self._psc_path):
			nof_files += 1
			logger.debug('PSC_Analyzer.analyze(): analyzing PSC file "' + fullpath + '"')
			with open(fullpath, mode='r') as f:
				psc_content = f.read()

				if not fullpath in self._psc_dms_keystats:
					self._psc_dms_keystats[fullpath] = DMS_keystats()

				# help with regex: https://stackoverflow.com/questions/6018340/capturing-group-with-findall
				# =>we search only for one group, so we get a list of strings and not a list of tuples containing matched groups
				patterns = [re.compile(r'LIB;[\w\s]+\.plb;\w+;([\w:]+);BMO:.+'),                    # BMO instances
				            re.compile(r'IBW;[\w\s]+\.*\w*;\d+;\d+;\d+;\d+;BMO[\w:]+;([\w:]+);')]   # button with reinit
				for pattern in patterns:
					for bmo_inst in pattern.findall(psc_content):
						#logger.debug('PSC_Analyzer.analyze(): found BMO instance "' + bmo_inst + '")')

						# add current PSC file as possible target for ALM "Screen" of this BMO instance
						if not bmo_inst in self._bmo_instances_dict:
							self._bmo_instances_dict[bmo_inst] = []
=================
8899905
count:1
	def get_psc_filename(self, bmo_instance):
		try:
			psc_list = self._bmo_instances_dict[bmo_instance]
			if len(psc_list) == 1:
				# simple case: only one PSC file contains this BMO instance
				return psc_list[0]
			else:
				# (old idea: sorting by number of "0" in filename (lesser "0" means lesser specific PSC file in menu concept)
				# help from https://www.programiz.com/python-programming/methods/built-in/sorted
				# and https://stackoverflow.com/questions/8899905/count-number-of-occurrences-of-a-given-substring-in-a-string
				# psc_list = sorted(psc_list, key=lambda x: x.count("0"))
				#
				# (old idea: removing "Logik"-files. =>now we use them as last option
				# removing "Logik" files
				# with help from https://stackoverflow.com/questions/3013449/list-filtering-list-comprehension-vs-lambda-filter
				#psc_list = [filename for filename in psc_list if not filename.upper().endswith("_LG.PSC")]

				# sort priority:
				# 1) "Logik" files to the end
				# 2) keyscore algorithm in DMS_keystats for similarity
=================
3013449
count:1
				return psc_list[0]
			else:
				# (old idea: sorting by number of "0" in filename (lesser "0" means lesser specific PSC file in menu concept)
				# help from https://www.programiz.com/python-programming/methods/built-in/sorted
				# and https://stackoverflow.com/questions/8899905/count-number-of-occurrences-of-a-given-substring-in-a-string
				# psc_list = sorted(psc_list, key=lambda x: x.count("0"))
				#
				# (old idea: removing "Logik"-files. =>now we use them as last option
				# removing "Logik" files
				# with help from https://stackoverflow.com/questions/3013449/list-filtering-list-comprehension-vs-lambda-filter
				#psc_list = [filename for filename in psc_list if not filename.upper().endswith("_LG.PSC")]

				# sort priority:
				# 1) "Logik" files to the end
				# 2) keyscore algorithm in DMS_keystats for similarity
				#

				def _sorting_key_function(fullpath):
					# generates tuple (<is Logik-file as bool>, <keyscore as integer>) for sorting in "get_psc_filename()"
					# help from https://wiki.python.org/moin/HowTo/Sorting#Key_Functions
=================
5212870
count:1

				# sort priority:
				# 1) "Logik" files to the end
				# 2) keyscore algorithm in DMS_keystats for similarity
				#

				def _sorting_key_function(fullpath):
					# generates tuple (<is Logik-file as bool>, <keyscore as integer>) for sorting in "get_psc_filename()"
					# help from https://wiki.python.org/moin/HowTo/Sorting#Key_Functions
					# and idea from https://stackoverflow.com/questions/5212870/sorting-a-python-list-by-two-criteria

					# sort priority:
					# 1) use "Logik" files only if BMO instance has no other appearance
					# 2) keyscore algorithm in DMS_keystats for similarity

					isLogik = '_LG' in fullpath or '_LOGIK' in fullpath.upper() or '-LOGIK' in fullpath.upper()
					keyscore = self._psc_dms_keystats[fullpath].get_keyscore(dmskey=bmo_instance)
					return (not isLogik, keyscore)

				# choose PSC image with highest rating (at the end of sorted list)
=================
26660654
count:1
		logger.info('ALM_datapoint.write_ALM_screen(): number of ALM datapoints in BMO instances: ' + str(total_alm))
		logger.info('ALM_datapoint.write_ALM_screen(): number of current ALM screen mappings: ' + str(len(self._alm_screen_dict)))
		logger.info('ALM_datapoint.write_ALM_screen(): number of changed ALM screen mappings: ' + str(len(unwritten_screens_dict)))

		if only_dryrun:
			logger.info('ALM_datapoint.write_ALM_screen(): only dryrun. =>no change in DMS...')
		else:
			if len(unwritten_screens_dict):
				logger.info('ALM_datapoint.write_ALM_screen(): =>write changed screen-mappings into DMS...')
				# iteration over dictionary: https://stackoverflow.com/questions/26660654/how-do-i-print-the-key-value-pairs-of-a-dictionary-in-python
				for alm, screen in unwritten_screens_dict.iteritems():
					self._write_ALM_screen(alm_dp=alm, psc_filename=screen)
				logger.info('ALM_datapoint.write_ALM_screen(): done. :-)')
			else:
				logger.info('ALM_datapoint.write_ALM_screen(): =>nothing to do...')


	def _write_ALM_screen(self, alm_dp, psc_filename):
		# write ALM screen mapping
		# warning: new datapoints generated by PET v1.7 (additionally to datapoint "ALM:Screen")
=================
415511
count:1
			                 datatype_str=dms.datapoint.Dms_dp_Factory.dp_numeric_types_dict[curr_type])
		else:
			curr_node = Node(value=None,
			                 datatype_str='NONE')
		curr_dict[dms_key] = curr_node
	return curr_dict


def print_with_timestamp(line_str):
	# with help from http://stackoverflow.com/questions/415511/how-to-get-current-time-in-python
	time_str = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
	print('\t'.join([time_str, line_str]))


def main(dms_node_str, pause_secs, section_sep_str):
	print('Starting "DMS tracer" for DMS node "' + str(dms_node_str) + '"...')
	curr_dms = dms.dmspipe.Dmspipe()

	if curr_dms:
		print('DMS tracer is ready...')
=================
13180941
count:1
	else:
		print('ERROR: "DMS tracer" needs a running DMS!')
		return 0

	old_keys_dict = {}

	# suppress showing of all DMS keys as "ADDED" on first run
	first_run = True

	# help from http://stackoverflow.com/questions/13180941/how-to-kill-a-while-loop-with-a-keystroke
	try:
		while True:
			# handling of set() datatype: https://docs.python.org/2/library/sets.html#set-objects
			# =>we use set() on the dictionary keys to detect and analyze changes compared to last check
			old_keys_set = set(old_keys_dict.keys())
			new_keys_dict = get_dms_tree_as_dict(curr_dms=curr_dms, dms_node_str=dms_node_str)
			new_keys_set = set(new_keys_dict.keys())

			if not first_run:
				new_section = False
=================
8259001
count:1
	print('Quitting "DMS tracer"...')

	return 0  # success


if __name__ == '__main__':
	parser = argparse.ArgumentParser(description='DMS tracer of changed DMS keys.')

	# using a flag for insertion of linebreaks
	# help from https://stackoverflow.com/questions/8259001/python-argparse-command-line-flags-without-arguments
	parser.add_argument('-l', '--linear', action='store_true', help='suppress additional newlines between differences (default is building sections for better readability)')

	parser.add_argument('-p', '--pause', default=1.0, type=float, nargs='?', help='waiting time in seconds for next polling cycle (default is 1.0)')

	# this positional argument is optional
	# with help from http://stackoverflow.com/questions/4480075/argparse-optional-positional-arguments
	parser.add_argument('DMS_NODE', default='BMO', nargs='?', help='DMS node and all subnodes to trace (e.g. MSR01:H01, default is BMO)')

	args = parser.parse_args()

=================
4480075
count:1
	parser = argparse.ArgumentParser(description='DMS tracer of changed DMS keys.')

	# using a flag for insertion of linebreaks
	# help from https://stackoverflow.com/questions/8259001/python-argparse-command-line-flags-without-arguments
	parser.add_argument('-l', '--linear', action='store_true', help='suppress additional newlines between differences (default is building sections for better readability)')

	parser.add_argument('-p', '--pause', default=1.0, type=float, nargs='?', help='waiting time in seconds for next polling cycle (default is 1.0)')

	# this positional argument is optional
	# with help from http://stackoverflow.com/questions/4480075/argparse-optional-positional-arguments
	parser.add_argument('DMS_NODE', default='BMO', nargs='?', help='DMS node and all subnodes to trace (e.g. MSR01:H01, default is BMO)')

	args = parser.parse_args()

	if not args.linear:
		# better readability between different pollings
		section_sep_str = '=' * 20
	else:
		section_sep_str = ''

=================
26744366
count:1

		self._resolution_var = Tkinter.StringVar()
		self._resolution_var.set('24h')  # default


		self._draw_gui()

	def _draw_gui(self):
		# optionmenu: example from http://effbot.org/tkinterbook/optionmenu.htm
		# "apply" seems deprecated... https://stackoverflow.com/questions/26744366/adding-command-to-a-tkinter-optionmenu
		options = Param_Frame.INTERVALS.keys()
		self._optmenu_intervals = Tkinter.OptionMenu(self, self._interval_var, *options, command=self._cb_optmenu_interval)

		self._optmenu_rows = Tkinter.OptionMenu(self, self._nof_rows_var, *range(1, 11))

		options = Param_Frame.RESOLUTIONS.keys()
		self._optmenu_resolution = Tkinter.OptionMenu(self, self._resolution_var, *options, command=self._cb_optmenu_resolution)

		Tkinter.Label(master=self, text='general parameters').grid(row=0, column=0, columnspan=2)

=================
16522380
count:1
					self._choose_interpr_frame.grid(row=5, column=0, columnspan=2)

					# FIXME!!!
					#self._btn_frame = self._get_buttons_frame()
					#self._btn_frame.grid(row=5, column=0, columnspan=2)

					## short demonstration
					#plt.figure()
					#self._histData_ts.plot()
					## help from https://stackoverflow.com/questions/16522380/matplotlib-plot-is-a-no-show
					#plt.show()

				else:
					logger.error('MyGUI._cb_btn_grab_data(): ERROR: ' + one_resp.message)

					# update GUI
					self._choose_interpr_frame = None
			else:
				logger.error('MyGUI._cb_btn_grab_data(): ERROR: datapoint has unexpected datatype ' + str(self._datatype))
		except Exception as ex:
=================
10856106
count:1

	def _histData_as_timeseries(self, histdata):
		if histdata:
			nof_histData = len(histdata)
			logger.debug('MyGUI._histData_as_timeseries(): number of histData objects: ' + str(nof_histData))

			# based on example from https://pandas-docs.github.io/pandas-docs-travis/timeseries.html
			# (iteratively appending to a pandas Series is not recommended!)
			#  read https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.append.html
			# and usage hint from https://stackoverflow.com/questions/10839701/time-weighted-average-with-pandas/10856106#10856106
			tstamps = []
			states = []
			values = []
			recs = []
			for item in histdata:
				tstamps.append(pd.Timestamp(item['stamp']))
				states.append(item['state'])
				values.append(item['value'])
				recs.append(item['rec'])
			return pd.Series(data={'value': values, 'state': states, 'rec': recs}, index=tstamps)
=================
4896288
count:1
logger.addHandler(ch)


class KilledProcessException(Exception):
	pass

class AsyncProcess(threading.Thread):
	# problem: when running a subprocess, then reading it's stdout will block until subprocess wrote data...
	# background information from http://eyalarubas.com/python-subproc-nonblock.html
	# and help from: https://stackoverflow.com/questions/375427/non-blocking-read-on-a-subprocess-pipe-in-python/4896288#4896288
	def __init__(self, cmd, stdout_queue):
		self._cmd = str(cmd)
		self._stdout_queue = stdout_queue
		super(AsyncProcess, self).__init__()
		self.daemon = True  # thread dies with the program
		logger.debug('AsyncProcess.__init__(): starting background subprocess...')
		self._process = subprocess.Popen(shlex.split(self._cmd), bufsize=1, stdout=subprocess.PIPE)
		logger.info('AsyncProcess.__init__(): started background subprocess "' + self._cmd + '" with PID ' + str(self._process.pid))

	def run(self):
=================
4896288
count:1
		self._cmd = str(cmd)
		self._stdout_queue = stdout_queue
		super(AsyncProcess, self).__init__()
		self.daemon = True  # thread dies with the program
		logger.debug('AsyncProcess.__init__(): starting background subprocess...')
		self._process = subprocess.Popen(shlex.split(self._cmd), bufsize=1, stdout=subprocess.PIPE)
		logger.info('AsyncProcess.__init__(): started background subprocess "' + self._cmd + '" with PID ' + str(self._process.pid))

	def run(self):
		# help from https://stackoverflow.com/questions/375427/non-blocking-read-on-a-subprocess-pipe-in-python/4896288#4896288
		for line in iter(self._process.stdout.readline, b''):
			self._stdout_queue.put(line)
		self._process.stdout.close()
		logger.info('AsyncProcess.run(): background subprocess "' + self._cmd + '" with PID ' + str(self._process.pid) + ' was killed...')

	def stop(self):
		# with help from https://stackoverflow.com/questions/4084322/killing-a-process-created-with-pythons-subprocess-popen
		logger.debug('AsyncProcess.stop(): killing background subprocess...')
		self._process.kill()

=================
4084322
count:1

	def run(self):
		# help from https://stackoverflow.com/questions/375427/non-blocking-read-on-a-subprocess-pipe-in-python/4896288#4896288
		for line in iter(self._process.stdout.readline, b''):
			self._stdout_queue.put(line)
		self._process.stdout.close()
		logger.info('AsyncProcess.run(): background subprocess "' + self._cmd + '" with PID ' + str(self._process.pid) + ' was killed...')

	def stop(self):
		# with help from https://stackoverflow.com/questions/4084322/killing-a-process-created-with-pythons-subprocess-popen
		logger.debug('AsyncProcess.stop(): killing background subprocess...')
		self._process.kill()


class PingTarget(object):
	PING_CMD = 'ping -t '

	# examples of answers in German Windows Ping:
	# Antwort von 127.0.0.1: Bytes=32 Zeit<1ms TTL=128      // everything ok
	# Antwort von 130.59.31.80: Bytes=32 Zeit=10ms TTL=128  // everything ok
=================
4896288
count:1
	def start_background_ping(self):
		# with help from https://www.endpoint.com/blog/2015/01/28/getting-realtime-output-using-python
		cmd = PingTarget.PING_CMD + self.host
		logger.debug('PingTarget.start_background_ping(): command for ping is ' + repr(cmd))
		self._thread = AsyncProcess(cmd=cmd, stdout_queue=self._stdout_queue)
		self._thread.start()


	def get_ping_rtt(self):
		# using nonblocking queue for getting stdout of subprocess: https://stackoverflow.com/questions/375427/non-blocking-read-on-a-subprocess-pipe-in-python/4896288#4896288
		try:
			line = self._stdout_queue.get_nowait()
		except Queue.Empty:
			if self._thread.is_alive():
				# no output yet
				return None
			else:
				# no thread means no active process!
				raise KilledProcessException()
		else:
=================
13180941
count:1
		logger.info('established WebSocket connection to DMS version ' + dms_ws.dp_get(path='System:Version:dms.exe')[0]['value'])
		runner = Runner(dms_ws=dms_ws,
		                target_list=target_list,
		                only_dryrun=only_dryrun)
		runner.check_datapoints()

		if not only_dryrun:
			runner.start_pings()

			# help from http://stackoverflow.com/questions/13180941/how-to-kill-a-while-loop-with-a-keystroke
			# and http://effbot.org/zone/stupid-exceptions-keyboardinterrupt.htm
			try:
				logger.info('"Ping_Trend" is working now... Press <CTRL> + C for aborting.')

				keep_running = True
				while keep_running:
					# FIXME: we should implement a more efficient method...
					runner.analyze_and_store()

					keep_running = runner.get_nof_pingtargets() > 0
=================
8259001
count:1

	logger.info('Quitting "Ping_Trend"...')

	return 0        # success


if __name__ == '__main__':
	parser = argparse.ArgumentParser(description='Pinging target(s) in background and writing Round-Trip-Time to DMS.')

	# help for commandline switches: https://stackoverflow.com/questions/8259001/python-argparse-command-line-flags-without-arguments
	# help for appending list of targets: https://mkaz.tech/code/python-argparse-cookbook/

	# help for required arguments: https://stackoverflow.com/questions/24180527/argparse-required-arguments-listed-under-optional-arguments
	requiredArg = parser.add_argument_group('required (ping target)')
	requiredArg.add_argument('--target', '-t', action='append', dest='target', nargs=2, required=True, help='pair of target and DMS key, one or more times (example: -t 192.168.1.1 System:Ping_Trend:DefaultGW)')

	parser.add_argument('--dryrun', '-d', action='store_true', dest='only_dryrun', default=False, help='no write into DMS, only print result (default: False)')
	parser.add_argument('--dms_servername', '-s', dest='dms_server', default='localhost', type=str, help='hostname or IP address for DMS JSON Data Exchange (default: localhost)')
	parser.add_argument('--dms_port', '-p', dest='dms_port', default=9020, type=int, help='TCP port for DMS JSON Data Exchange (default: 9020)')

=================
24180527
count:1
	return 0        # success


if __name__ == '__main__':
	parser = argparse.ArgumentParser(description='Pinging target(s) in background and writing Round-Trip-Time to DMS.')

	# help for commandline switches: https://stackoverflow.com/questions/8259001/python-argparse-command-line-flags-without-arguments
	# help for appending list of targets: https://mkaz.tech/code/python-argparse-cookbook/

	# help for required arguments: https://stackoverflow.com/questions/24180527/argparse-required-arguments-listed-under-optional-arguments
	requiredArg = parser.add_argument_group('required (ping target)')
	requiredArg.add_argument('--target', '-t', action='append', dest='target', nargs=2, required=True, help='pair of target and DMS key, one or more times (example: -t 192.168.1.1 System:Ping_Trend:DefaultGW)')

	parser.add_argument('--dryrun', '-d', action='store_true', dest='only_dryrun', default=False, help='no write into DMS, only print result (default: False)')
	parser.add_argument('--dms_servername', '-s', dest='dms_server', default='localhost', type=str, help='hostname or IP address for DMS JSON Data Exchange (default: localhost)')
	parser.add_argument('--dms_port', '-p', dest='dms_port', default=9020, type=int, help='TCP port for DMS JSON Data Exchange (default: 9020)')

	args = parser.parse_args()

	status = main(dms_server = args.dms_server,
=================
1641280
count:1
import threading
import collections

# modules for usage in given expressions
import math
import random
import string

# ### DEBUGGING memory leak
# # help from https://stackoverflow.com/questions/1641231/python-working-around-memory-leaks/1641280#1641280
# # and https://stackoverflow.com/questions/1396668/get-object-by-id
# import gc


# setup of logging
# (based on tutorial https://docs.python.org/2/howto/logging.html )
# create logger =>set level to DEBUG if you want to catch all log messages!
logger = logging.getLogger('tools.DMS_Controlfunction')
logger.setLevel(logging.INFO)

=================
1396668
count:1
import collections

# modules for usage in given expressions
import math
import random
import string

# ### DEBUGGING memory leak
# # help from https://stackoverflow.com/questions/1641231/python-working-around-memory-leaks/1641280#1641280
# # and https://stackoverflow.com/questions/1396668/get-object-by-id
# import gc


# setup of logging
# (based on tutorial https://docs.python.org/2/howto/logging.html )
# create logger =>set level to DEBUG if you want to catch all log messages!
logger = logging.getLogger('tools.DMS_Controlfunction')
logger.setLevel(logging.INFO)

# create console handler
=================
6190776
count:1
				logger.warn('DMSDatapoint_Result.write_to_dms(): unexpected value change of DMS key "' + self.key_str + '" [cached:' + repr(self._cached_val) + ' | current:'  + repr(self._value) + '] ... others are writing to this key!')
			if newval != self._value:
				logger.debug('DMSDatapoint_Result.write_to_dms(): updating DMS key "' + self.key_str + '" with value ' + repr(newval) + ' converted to ' + self._datatype)
				try:
					# send correct datatype to DMS (prevents errors with wrong datatype of DMS-key or incorrect Python expression)
					python_cls = TYPE_MAPPING[self._datatype]
					self._value = python_cls(newval)
				except Exception as ex:
					logger.error('DMSDatapoint_Result.write_to_dms(): type mismatch, got exception "' + repr(ex) + '" while convert new result ' + repr(newval) + ' to ' + self._datatype + '!')
					# leave function (help from https://stackoverflow.com/questions/6190776/what-is-the-best-way-to-exit-a-function-which-has-no-return-value-in-python-be )
					raise ex
				resp = self._dms_ws.dp_set(path=self.key_str,
				                           value=self._value,
				                           create=False)
				if resp[0].code == 'ok':
					self._cached_val = resp[0].value
				else:
					logger.error('DMSDatapoint_Result.write_to_dms(): DMS returned error "' + resp[0].message + '" for DMS key "' + self.key_str + '"')
					raise Exception()
		else:
=================
10220599
count:1
		self._cache_result = bool(do_caching)
		self._do_dryrun = bool(do_dryrun)
		self.result_dirty = threading.Event()

	@staticmethod
	def _get_cached_result(expr_str, locals_dict):
		""" retrieves cached result (or None when expression was evaluated with new arguments) """
		# we have to sort keyword arguments for always getting same hash value as key in our dict
		# =>only tuples can be hashed (we get a tuple of expr and tuples)
		# (help from https://stackoverflow.com/questions/10220599/how-to-hash-args-kwargs-for-function-cache )
		key_tuple = (expr_str, ) + tuple(sorted(locals_dict.items()))
		try:
			return Controlfunction._caching_ordereddict[key_tuple]
		except KeyError:
			logger.debug('Controlfunction._get_cached_result(): found no value for key "' + str(key_tuple) + '"')
			return None

	@staticmethod
	def _set_cached_result(expr_str, locals_dict, result):
		""" store expression, it's result and all function arguments  """
=================
13180941
count:1
		logger.info('established WebSocket connection to DMS version ' + dms_ws.dp_get(path='System:Version:dms.exe')[0]['value'])
		runner = Runner(dms_ws=dms_ws,
		                configfile=configfile,
		                only_dryrun=only_dryrun)
		runner.load_config()
		runner.check_datapoints()
		if not only_check:
			runner.subscribe_datapoints()

			# help from http://stackoverflow.com/questions/13180941/how-to-kill-a-while-loop-with-a-keystroke
			try:
				logger.info('"DMS_Controlfunction" is working now... Press <CTRL> + C for aborting.')

				# old_objs_set = set()
				# nof_runs = 0

				while True:
					# FIXME: we should implement a more efficient method...
					runner.evaluate_functions()
					time.sleep(0.001)
=================
2844516
count:1
					# 					types_dict[curr_type] += 1
					# 				except KeyError:
					# 					types_dict[curr_type] = 1
					# 		if removed_objs_set:
					# 			for curr_id, curr_type in removed_objs_set:
					# 				try:
					# 					types_dict[curr_type] -= 1
					# 				except KeyError:
					# 					types_dict[curr_type] = -1
					# 		# help for dict comprehension: https://stackoverflow.com/questions/2844516/how-to-filter-a-dictionary-according-to-an-arbitrary-condition-function
					# 		logger.info('DEBUGGING: differences in number of objects: ' + repr({k: v for k, v in types_dict.iteritems() if v != 0}))
					#
					# 		# preparing next cycle
					# 		old_objs_set = new_objs_set


			except KeyboardInterrupt:
				pass
	logger.info('Quitting "DMS_Controlfunction"...')

=================
8259001
count:1
				pass
	logger.info('Quitting "DMS_Controlfunction"...')

	return 0        # success


if __name__ == '__main__':
	parser = argparse.ArgumentParser(description='Python as external Controlfunction (Leitfunktion).')

	# help for commandline switches: https://stackoverflow.com/questions/8259001/python-argparse-command-line-flags-without-arguments

	parser.add_argument('--check', '-c', action='store_true', dest='only_check', default=False, help='only check configurationfile and exit (default: False)')
	parser.add_argument('--dryrun', '-d', action='store_true', dest='only_dryrun', default=False, help='no write into DMS, only print result (default: False)')
	parser.add_argument('--dms_servername', '-s', dest='dms_server', default='localhost', type=str, help='hostname or IP address for DMS JSON Data Exchange (default: localhost)')
	parser.add_argument('--dms_port', '-p', dest='dms_port', default=9020, type=int, help='TCP port for DMS JSON Data Exchange (default: 9020)')
	parser.add_argument('CONFIGFILE', type=argparse.FileType('r'), help='configuration file in YAML format (e.g. DMS_Controlfunction.yml)')

	args = parser.parse_args()

	status = main(dms_server = args.dms_server,
=================
19143091
count:1

def main(local_ip, local_port, remote_host, remote_port):
	print('TCP_Relay v0.0.1')
	print('\tA quick-and-dirty TCP relaying (forwarding) tool for simple debugging of an unencrypted TCP network connection.')
	print('\tOpens a local TCP port and relay/forward data to a remote Host.')
	print('\nTrying to establish this TCP portforwarding:')
	print('[TCP-client] --> [' + str(local_ip) + ':' + str(local_port) + '] >>>> [TCP-Server ' + str(remote_host) + ':' + str(remote_port) + ']\n')

	sock_srv = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	# host and port as a tuple: http://stackoverflow.com/questions/19143091/typeerror-connect-takes-exactly-one-argument
	sock_srv.bind((str(local_ip), local_port))
	sock_srv.listen(1)
	print('listening on local TCP port ' + str(local_port) + ' on interface ' + str(local_ip) + ' for incoming connections...')

	client_conn, client_addr = sock_srv.accept()
	print('got incoming client connection from ' + str(client_addr[0]) + ':' + str(client_addr[1]) + '...')


	sock_to_svr = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	sock_to_svr.connect((str(remote_host), remote_port))
=================
25447803
count:1
			# something to do in sockets?
			# from https://docs.python.org/2/howto/sockets.html
			ready_to_read, ready_to_write, in_error = \
		               select.select(
		                  [client_conn, sock_to_svr],
		                  [],
		                  [])

			# select returned a socket with available data ->forward on the other connection
			# (exception handling: http://stackoverflow.com/questions/25447803/python-socket-connection-exception )
			if client_conn in ready_to_read:
				data = client_conn.recv(BUFFER_SIZE)
				if not data: break
				print("from client:\t" + repr(data))
				sock_to_svr.send(data)

			if sock_to_svr in ready_to_read:
				data = sock_to_svr.recv(BUFFER_SIZE)
				if not data: break
				print("from server:\t" + repr(data))
=================
9226516
count:1
ENCODING_FILENAMES = sys.getfilesystemencoding()

DEBUGGING = True

def get_encoding():
	global ENCODING_STDOUT1
	# following code seems only to work in IDE...
	ENCODING_STDOUT1= sys.stdout.encoding or sys.getfilesystemencoding()

	# hint from http://stackoverflow.com/questions/9226516/python-windows-console-and-encodings-cp-850-vs-cp1252
	# following code doesn't work in IDE because PyCharm uses UTF-8 and not encoding from Windows command prompt...
	global ENCODING_STDOUT2
	ENCODING_STDOUT2 = locale.getpreferredencoding()

	# another try: using encoding-guessing of IDE "IDLE"
	# hint from https://mail.python.org/pipermail/tkinter-discuss/2010-December/002602.html
	global ENCODING_LOCALE
	import idlelib.IOBinding
	ENCODING_LOCALE = idlelib.IOBinding.encoding
	print(u'Using encoding "' + ENCODING_LOCALE + u'" for input and trying "' + ENCODING_STDOUT1 + u'" or "' + ENCODING_STDOUT2 + u'" for STDOUT')
=================
3224268
count:1
			get_encoding()
		unicode_line = line.decode(ENCODING_LOCALE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	if not (ENCODING_STDOUT1 and ENCODING_STDOUT2):
		get_encoding()
	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	try:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT1, errors='strict')
	except UnicodeEncodeError:
		bytestring_line = unicode_line.encode(ENCODING_STDOUT2, errors='strict')
	print(bytestring_line)



class PscFile(object):
	def __init__(self, fullpath):
=================
39359245
count:1
					self._whole_file = f.read()
				except UnicodeDecodeError as ex:
					my_print(u'Exception "UnicodeDecodeError" in "get_whole_file()": file "' + self._fullpath + u'" contains wrong characters!')
					my_print(u'=>ignoring this file...')
					self._whole_file = u''
				self._last_readtime = self._modification_time
		return self._whole_file

	def get_metadata(self):
		# examples from http://stackoverflow.com/questions/39359245/from-stat-st-mtime-to-datetime
		# and http://stackoverflow.com/questions/6591931/getting-file-size-in-python
		# and https://docs.python.org/2/library/stat.html
		# and http://stackoverflow.com/questions/455612/limiting-floats-to-two-decimal-points
		# and http://stackoverflow.com/questions/311627/how-to-print-date-in-a-regular-format-in-python
		self._read_metadata()
		size = float("{0:.2f}".format(self._filesize / 1024.0))
		mod_time = datetime.datetime.fromtimestamp(self._modification_time).strftime("%Y.%m.%d %H:%M:%S")
		return size, mod_time


=================
6591931
count:1
				except UnicodeDecodeError as ex:
					my_print(u'Exception "UnicodeDecodeError" in "get_whole_file()": file "' + self._fullpath + u'" contains wrong characters!')
					my_print(u'=>ignoring this file...')
					self._whole_file = u''
				self._last_readtime = self._modification_time
		return self._whole_file

	def get_metadata(self):
		# examples from http://stackoverflow.com/questions/39359245/from-stat-st-mtime-to-datetime
		# and http://stackoverflow.com/questions/6591931/getting-file-size-in-python
		# and https://docs.python.org/2/library/stat.html
		# and http://stackoverflow.com/questions/455612/limiting-floats-to-two-decimal-points
		# and http://stackoverflow.com/questions/311627/how-to-print-date-in-a-regular-format-in-python
		self._read_metadata()
		size = float("{0:.2f}".format(self._filesize / 1024.0))
		mod_time = datetime.datetime.fromtimestamp(self._modification_time).strftime("%Y.%m.%d %H:%M:%S")
		return size, mod_time


class PscFileHandler(object):
=================
455612
count:1
					my_print(u'=>ignoring this file...')
					self._whole_file = u''
				self._last_readtime = self._modification_time
		return self._whole_file

	def get_metadata(self):
		# examples from http://stackoverflow.com/questions/39359245/from-stat-st-mtime-to-datetime
		# and http://stackoverflow.com/questions/6591931/getting-file-size-in-python
		# and https://docs.python.org/2/library/stat.html
		# and http://stackoverflow.com/questions/455612/limiting-floats-to-two-decimal-points
		# and http://stackoverflow.com/questions/311627/how-to-print-date-in-a-regular-format-in-python
		self._read_metadata()
		size = float("{0:.2f}".format(self._filesize / 1024.0))
		mod_time = datetime.datetime.fromtimestamp(self._modification_time).strftime("%Y.%m.%d %H:%M:%S")
		return size, mod_time


class PscFileHandler(object):
	def __init__(self):
		self._pscfiles_dict = {}
=================
311627
count:1
					self._whole_file = u''
				self._last_readtime = self._modification_time
		return self._whole_file

	def get_metadata(self):
		# examples from http://stackoverflow.com/questions/39359245/from-stat-st-mtime-to-datetime
		# and http://stackoverflow.com/questions/6591931/getting-file-size-in-python
		# and https://docs.python.org/2/library/stat.html
		# and http://stackoverflow.com/questions/455612/limiting-floats-to-two-decimal-points
		# and http://stackoverflow.com/questions/311627/how-to-print-date-in-a-regular-format-in-python
		self._read_metadata()
		size = float("{0:.2f}".format(self._filesize / 1024.0))
		mod_time = datetime.datetime.fromtimestamp(self._modification_time).strftime("%Y.%m.%d %H:%M:%S")
		return size, mod_time


class PscFileHandler(object):
	def __init__(self):
		self._pscfiles_dict = {}
		self._selected_files = set()
=================
8036499
count:1
		"""
		compile Regex pattern
		(it's not for better performance, but then GUI can handle exceptions when user enters wrong Regex-syntax)
		=>must be called when pattern needs an update before get_listing()
		"""
		self._re_string_compiled = re.compile(self._to_unicode(re_string_pattern, ENCODING_LOCALE))

	def _to_unicode(self, text, encoding):
		# tkinter entry widget returns ASCII or unicode, so we should handle all regex operations in unicode
		# help from https://stackoverflow.com/questions/8036499/unicodewarning-special-characters-in-tkinter
		try:
			text = text.decode(encoding)
		except UnicodeEncodeError:
			pass
		return text


	def get_listing(self, sort_item=0, reversed=False):
		# collecting filenames
		self._filehandler.clear_file_selection()
=================
10695139
count:1
			if u'16711935' in curr_file.get_whole_file():
				contains_magenta = True
			else:
				contains_magenta = False

			# add everything together as tuple
			detail_list.append((filename, size, mod_time, contains_magenta))

		# sort list by item specified by caller
		# based on example from http://stackoverflow.com/questions/10695139/sort-a-list-of-tuples-by-2nd-item-integer-value
		return sorted(detail_list, key=itemgetter(sort_item), reverse=reversed)



class FileSelectorGUI(Tkinter.Tk):
	RE_PATTERN_UNDERSCORE = r'__.*'
	RE_PATTERN_ALL_PSC = r'.*'
	RE_PATTERN_VLO_COLLECTION = r'VLO-Collection_Part\d+'

	def __init__(self, curr_DMS, curr_image_dp, curr_src_path, curr_clipboard):
=================
4072150
count:1
		# preparation of popup window (context menu on right-click)
		# code example from http://effbot.org/zone/tkinter-popup-menu.htm
		self.context_menu = Tkinter.Menu(self, tearoff=0)
		self.context_menu.add_command(label="open in GE", font="-weight bold", command=self._cb_open_grafikeditor)
		self.context_menu.add_command(label="open Windows Explorer", command=self._cb_open_windows_explorer)
		self.context_menu.add_command(label="open in Notepad++", command=self._cb_open_notepad)
		self.context_menu.add_command(label="copy filename to clipboard", command=self._cb_fname_to_clipboard)

		# display usage/hint label with bold text:
		# http://stackoverflow.com/questions/4072150/how-to-change-a-widgets-font-style-without-knowing-the-widgets-font-family-siz
		usage_label = Tkinter.Label(self, text=USAGE_HINT_TEXT, font="-weight bold")
		usage_label.grid(row=2, column=0, sticky='w', padx=4, pady=8)

		self.file_regex_entrybox.grid(row=3, column=0, sticky='e', padx=4 , pady=4)
		file_regex_label.grid(row=3, column=0, sticky='w', padx=4 , pady=4)

		self.string_regex_entrybox.grid(row=4, column=0, sticky='e', padx=4 , pady=4)
		string_regex_label.grid(row=4, column=0, sticky='w', padx=4 , pady=4)

		# insert "last search patterns" frames into main grid
=================
8830507
count:1

		# Arrange the scrollbars in the toplevel
		vsb.grid(row=0, column=1, sticky='ns')
		hsb.grid(row=1, column=0, sticky='ew')


	def populate_tree(self):
		if self.tree:
			# tree does exist... first delete all items of this tree
			# code from http://stackoverflow.com/questions/8830507/how-to-clear-items-from-a-ttk-treeview-widget
			children = self.tree.get_children()
			for item in children:
				self.tree.delete(item)

			# fill tree with content
			for mytuple in self._dirlister.get_listing(sort_item=self._sort_by_column_no,
			                                           reversed=self._inverse_sorting):
				if len(mytuple) == 4:
					# problems with umlaut in filename...
					# https://bytes.com/topic/python/answers/34606-how-display-unicode-label-tkinter
=================
3794268
count:1
					fname = unicode(mytuple[0], encoding=ENCODING_FILENAMES, errors='strict')
					#fname = unicode(mytuple[0], encoding='iso8859-1', errors='replace')
					self.tree.insert("", "end", text=fname, values=(mytuple[1], mytuple[2], mytuple[3]))

	def _get_clicked_filename(self, event=None):
		"""
		called by Tkinter callbacks for getting the filename of a clicked tree entry
		"""
		if event:
			# idea from http://stackoverflow.com/questions/3794268/command-for-clicking-on-the-items-of-a-tkinter-treeview-widget
			curr_item = self.tree.identify('item', event.x, event.y)
		else:
			# getting item-ID of the first selected tree item
			# (used when there's no direct click event on row, e.g. in popup context menu)
			# help from https://docs.python.org/dev/library/tkinter.ttk.html#treeview
			curr_item = self.tree.selection()[0]
		return self.tree.item(curr_item, "text")

	def _get_clicked_fullpath(self, event=None):
		"""
=================
31584415
count:1

			# always update opened filename
			self.last_file_fullpath.set(fullpath)

	def singleclick_handler(self, event):
		"""
		clicking onto header =>sort by this column
		click a second time on same header =>inverse sorting of this column
		"""
		# idea from http://stackoverflow.com/questions/31584415/how-to-bind-an-action-to-the-heading-of-a-tkinter-treeview-in-python
		# format is a string '#x' where x stands for column number (#0 is "icon column", #1 is first column, ...)

		region = self.tree.identify("region", event.x, event.y)
		if region == "heading":
			old_sort_column = self._sort_by_column_no

			column_str = self.tree.identify_column(event.x)
			#print('user clicked in column "' + repr(column) + '"')
			self._sort_by_column_no = int(column_str[1:])
			if old_sort_column == self._sort_by_column_no:
=================
12014210
count:1
				self._inverse_sorting = not self._inverse_sorting
			self.populate_tree()


	def rightclick_handler(self, event):
		"""
		display context menu as popup menu
		"""
		# with hints from http://effbot.org/zone/tkinter-popup-menu.htm
		# and http://stackoverflow.com/questions/12014210/python-tkinter-app-adding-a-right-click-context-menu
		# and https://docs.python.org/dev/library/tkinter.ttk.html#ttk-treeview
		try:
			# set selection on current row
			iid = self.tree.identify_row(event.y)
			self.tree.selection_set(iid)

			# display popup menu at clicked position
			self.context_menu.tk_popup(event.x_root, event.y_root, 0)
		finally:
			# make sure to release the grab (Tk 8.0a1 only)
=================
281888
count:1
		# set this file in GE (Grafikeditor) if possible
		if fullpath.split('.')[-1].upper() == u'PSC':
			# write filename to the right DMS datapoint
			self._curr_DMS.pyDMS_WriteSTREx(self._curr_image_dp, fullpath)


	def _cb_open_windows_explorer(self):
		if DEBUGGING:
			my_print(u'popup menu "open Windows Explorer": filename="' + self._get_clicked_filename() + u'", fullpath="' + self._get_clicked_fullpath() + u'"')
		# help from http://stackoverflow.com/questions/281888/open-explorer-on-a-file
		subprocess.Popen(r'explorer /select,"' + self._get_clicked_fullpath() + '"')

	def _cb_open_notepad(self):
		"""
		trying to open selected file in Notepad++
		(we only care about default installation directories)
		"""
		if DEBUGGING:
			print('popup menu "open in Notepad++": filename="' + self._get_clicked_filename() + '", fullpath="' + self._get_clicked_fullpath() + '"')
		NPP_EXES = [r'C:\Program Files (x86)\Notepad++\notepad++.exe', r'C:\Program Files\Notepad++\notepad++.exe']
=================
13588908
count:1


	def _cb_entry_filepattern(self, *args):
		try:
			self._dirlister.set_re_fname_pattern(self.file_regex_pattern.get())
			self.file_regex_entrybox.configure(bg="green")
			self.populate_tree()
		except:
			# Regex must have wrong syntax... =>give user a feedback
			# changing colors in a widget: hint from http://stackoverflow.com/questions/13588908/dynamically-change-widget-background-color-in-tkinter
			self.file_regex_entrybox.configure(bg="red")

		## hint from http://stackoverflow.com/questions/8036499/unicodewarning-special-characters-in-tkinter
		#mystr = self.file_regex_pattern.get()
		# if isinstance(mystr, unicode):
		# 	uni_mystr = mystr
		# else:
		# 	try:
		# 		uni_mystr = mystr.decode(encoding=ENCODING_LOCALE, errors='strict')
		# 	except UnicodeDecodeError:
=================
8036499
count:1
		try:
			self._dirlister.set_re_fname_pattern(self.file_regex_pattern.get())
			self.file_regex_entrybox.configure(bg="green")
			self.populate_tree()
		except:
			# Regex must have wrong syntax... =>give user a feedback
			# changing colors in a widget: hint from http://stackoverflow.com/questions/13588908/dynamically-change-widget-background-color-in-tkinter
			self.file_regex_entrybox.configure(bg="red")

		## hint from http://stackoverflow.com/questions/8036499/unicodewarning-special-characters-in-tkinter
		#mystr = self.file_regex_pattern.get()
		# if isinstance(mystr, unicode):
		# 	uni_mystr = mystr
		# else:
		# 	try:
		# 		uni_mystr = mystr.decode(encoding=ENCODING_LOCALE, errors='strict')
		# 	except UnicodeDecodeError:
		# 		# FIXME: how to handle wrong encodings?!?
		# 		pass
		# my_print(u'value of "self.file_regex_pattern" is "' + uni_mystr + u'"')
=================
13588908
count:1


	def _cb_entry_stringpattern(self, *args):
		try:
			self._dirlister.set_re_string_pattern(self.string_regex_pattern.get())
			self.string_regex_entrybox.configure(bg="green")
			self.populate_tree()
		except:
			# Regex must have wrong syntax... =>give user a feedback
			# changing colors in a widget: hint from http://stackoverflow.com/questions/13588908/dynamically-change-widget-background-color-in-tkinter
			self.string_regex_entrybox.configure(bg="red")

		# # hint from http://stackoverflow.com/questions/8036499/unicodewarning-special-characters-in-tkinter
		# mystr = self.string_regex_pattern.get()
		# if isinstance(mystr, unicode):
		# 	uni_mystr = mystr
		# else:
		# 	try:
		# 		uni_mystr = mystr.decode(encoding=ENCODING_LOCALE, errors='strict')
		# 	except UnicodeDecodeError:
=================
8036499
count:1
		try:
			self._dirlister.set_re_string_pattern(self.string_regex_pattern.get())
			self.string_regex_entrybox.configure(bg="green")
			self.populate_tree()
		except:
			# Regex must have wrong syntax... =>give user a feedback
			# changing colors in a widget: hint from http://stackoverflow.com/questions/13588908/dynamically-change-widget-background-color-in-tkinter
			self.string_regex_entrybox.configure(bg="red")

		# # hint from http://stackoverflow.com/questions/8036499/unicodewarning-special-characters-in-tkinter
		# mystr = self.string_regex_pattern.get()
		# if isinstance(mystr, unicode):
		# 	uni_mystr = mystr
		# else:
		# 	try:
		# 		uni_mystr = mystr.decode(encoding=ENCODING_LOCALE, errors='strict')
		# 	except UnicodeDecodeError:
		# 		# FIXME: how to handle wrong encodings?!?
		# 		pass
		# my_print(u'value of "self.string_regex_pattern" is "' + uni_mystr + '"')
=================
25734244
count:1
						# =>build edge between these two BMO instances
						edge = '"' + src_bmo + '" -> "' + bmo_inst + '"' + gv_suffix + ';'
						f.write('\t\t' + edge + '\n')

				# assume hardware dependency when this BMO class has PAR_DATA fields
				if used_bmo_dict[bmo_class][PAR_DATA]:
					hardware_bmo_list.append(bmo_inst)

			# set all nodes with hardware dependency on same rank as sink (last line in graph)
			# (with help from http://stackoverflow.com/questions/25734244/how-do-i-place-nodes-on-the-same-level-in-dot )
			mynodes = '"; "'.join(hardware_bmo_list)
			f.write('\t{rank = same; "' + mynodes + '";}\n')

			# close PLC-subgraph
			f.write('\t}\n\n')

		# set special formating on nodes of missing BMO instances
		f.write('\t// special formating of missing BMO instances\n')
		for bmo_inst in missing_bmo_list:
			node = '"' + bmo_inst + '" [color=red];'
=================
26348989
count:1
		# put content from DMS into text areas (we need to set them into editable state for doing this)
		for area in ['metadata', 'oldval', 'newval']:
			self.text_area_dict[area].config(state=tk.NORMAL)
			if area == 'metadata':
				self.text_area_dict[area].insert(tk.END, self.parent.dms_vars.get_metadata(key_list))
			elif area == 'oldval' or area == 'newval':
				self.text_area_dict[area].insert(tk.END, self.parent.dms_vars.get_values(key_list))

		# coloring lines for better readability
		# code source: http://stackoverflow.com/questions/26348989/changing-background-color-for-every-other-line-of-text-in-a-tkinter-text-box-wid
		for area in ['key', 'metadata', 'oldval', 'newval']:
			self.text_area_dict[area].tag_configure("even", background="#e0e0e0")
			self.text_area_dict[area].tag_configure("odd", background="#ffffff")

			lastline = self.text_area_dict[area].index("end-1c").split(".")[0]
			tag = "odd"
			for i in range(1, int(lastline)):
				if tag == "even":
					# FIXME: just colorize even lines, because otherwise selected text is white on white...
					self.text_area_dict[area].tag_add(tag, "%s.0" % i, "%s.0" % (i+1))
=================
32038701
count:1
		# AND inform all textfields about changes
		# =>it seems that tkinter calls this callback with tuple ('0.0', '1.0') as argument,
		# read here: http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/scrollbar.html

		#if DEBUGGING:
		#	print('_yscrollbar_set(): *kargs=' + repr(kargs) + ', **kwargs=' + repr(kwargs))

		self.yscrollbar.set(*kargs)

		# help from https://stackoverflow.com/questions/32038701/python-tkinter-making-two-text-widgets-scrolling-synchronize
		self._scrollbar_command('moveto', kargs[0])


	def _scrollbar_command(self, *kargs, **kwargs):
		# scrollbar command should inform all three textareas for changes
		# =>it seems that tkinter calls this callback with tuple ('moveto', '0.0') as argument,
		# read here: http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/text-methods.html

		#if DEBUGGING:
		#	print('_scrollbar_command(): *kargs=' + repr(kargs) + ', **kwargs=' + repr(kwargs))
=================
715417
count:1

		#if DEBUGGING:
		#	print('_scrollbar_command(): *kargs=' + repr(kargs) + ', **kwargs=' + repr(kwargs))

		for area in self.text_area_dict:
			self.text_area_dict[area].yview(*kargs)


def parse_boolean(curr_str):
	# help from http://stackoverflow.com/questions/715417/converting-from-a-string-to-boolean-in-python
	# just "bool('xxx')" returns always true... So we need another solution
	return curr_str.upper() in ['TRUE', '1']


def main(argv=None):
	curr_dms = dms.dmspipe.Dmspipe()

	rootwindow = DMS_Value_Changer(curr_dms)

	rootwindow.mainloop()
=================
3962247
count:1

		# build the resulting text area, possible to copy it into Excel
		curr_line_list = []
		for item in name_applied_list:
			curr_line_list.append('\t'.join(item))
		curr_string = '\n'.join(curr_line_list)

		if self.textarea_frame != None:
			# updating information ->first delete the widget, then redraw it
			# http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
			self.textarea_frame.grid_forget()
			self.textarea_frame.destroy()
		self.textarea_frame = _Text_area(curr_string)
		self.textarea_frame.grid(row=self.textarea_frame_gridpos[0], column=self.textarea_frame_gridpos[1], columnspan=2, padx=1, pady=1, sticky='NSEW')


	def _populate_obj_list(self):
		# getting all BMO classes
		key_list = self.curr_dms.get_DMS_sons_list_by_key('BMO')
		if DEBUGGING:
=================
17657212
count:1
class _Text_area(tk.Frame):
	def __init__(self, text_str, *kargs, **kwargs):
		tk.Frame.__init__(self, *kargs, **kwargs)
		self.text_str = text_str

		self._show_text()

	def _show_text(self):
		# example: multiline text with scrollbars:
		# http://stackoverflow.com/questions/17657212/how-to-code-the-tkinter-scrolledtext-module
		xscrollbar = tk.Scrollbar(self)
		yscrollbar = tk.Scrollbar(self)
		textArea = tk.Text(self, width=150, height=50, wrap="word",
		                    xscrollcommand=xscrollbar.set,
		                    yscrollcommand=yscrollbar.set,
                            borderwidth=0, highlightthickness=0)
		xscrollbar.config(command=textArea.xview)
		yscrollbar.config(command=textArea.yview)
		xscrollbar.pack(side="bottom", fill="x")
		yscrollbar.pack(side="right", fill="y")
=================
3962247
count:1

		btn = tk.Button(master=self, text="Update shown information", command=self._cb_draw_infoframes)
		btn.grid(row=2, column=0, padx=5, pady=5)

		self._cb_draw_infoframes()

	def _cb_draw_clipframe(self):
		if self.clip_frm != None:
			# updating information ->first delete the widget, then redraw it
			# http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
			self.clip_frm.pack_forget()
			self.clip_frm.destroy()
		self.clip_frm = _Clip_frame(master=self, tiepoint=self.tiepoint, clipboard=self.clipboard, selected_bmo=self.selected_bmo, relief=tk.SUNKEN, borderwidth=2)
		self.clip_frm.grid(row=1, column=0, padx=5, pady=5)

		# trigger background task (polling clipboard)
		self.after(TiepointGui.CLIPBOARD_POLLING_CYCLE, self._cb_draw_clipframe)


	def _cb_draw_infoframes(self):
=================
3962247
count:1
		self.after(TiepointGui.CLIPBOARD_POLLING_CYCLE, self._cb_draw_clipframe)


	def _cb_draw_infoframes(self):
		# process BMO instance selection
		self.tiepoint.update_bmo_instance(self.selected_bmo.get())

		if self.bmo_frm != None:
			# updating information ->first delete the widget, then redraw it
			# http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
			self.bmo_frm.pack_forget()
			self.bmo_frm.destroy()
		self.bmo_frm = _Bmo_frame(master=self, tiepoint=self.tiepoint, clipboard=self.clipboard, relief=tk.SUNKEN, borderwidth=2)
		self.bmo_frm.grid(row=3, column=0, padx=5, pady=5)

		if self.dp_frm != None:
			# updating information ->first delete the widget, then redraw it
			# http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
			self.dp_frm.pack_forget()
			self.dp_frm.destroy()
=================
3962247
count:1
			# updating information ->first delete the widget, then redraw it
			# http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
			self.bmo_frm.pack_forget()
			self.bmo_frm.destroy()
		self.bmo_frm = _Bmo_frame(master=self, tiepoint=self.tiepoint, clipboard=self.clipboard, relief=tk.SUNKEN, borderwidth=2)
		self.bmo_frm.grid(row=3, column=0, padx=5, pady=5)

		if self.dp_frm != None:
			# updating information ->first delete the widget, then redraw it
			# http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
			self.dp_frm.pack_forget()
			self.dp_frm.destroy()

		if self.currfilter == None:
			# default: show all parts
			self.currfilter = Bmo_dp.get_display_filter()
		self.dp_frm = _Dp_frame(master=self, displayfilter=self.currfilter, tiepoint=self.tiepoint, clipboard=self.clipboard, relief=tk.SUNKEN, borderwidth=2)
		self.dp_frm.grid(row=4, column=0, padx=5, pady=5)

		if self.filter_frm != None:
=================
3962247
count:1

		if self.currfilter == None:
			# default: show all parts
			self.currfilter = Bmo_dp.get_display_filter()
		self.dp_frm = _Dp_frame(master=self, displayfilter=self.currfilter, tiepoint=self.tiepoint, clipboard=self.clipboard, relief=tk.SUNKEN, borderwidth=2)
		self.dp_frm.grid(row=4, column=0, padx=5, pady=5)

		if self.filter_frm != None:
			# updating information ->first delete the widget, then redraw it
			# http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
			self.filter_frm.pack_forget()
			self.filter_frm.destroy()
		self.filter_frm = _Filter_frame(master=self, parent_widget=self, relief=tk.SUNKEN, borderwidth=2)
		self.filter_frm.grid(row=5, column=0, padx=5, pady=5)

class _Clip_frame(tk.Frame):
	def __init__(self, tiepoint, clipboard, selected_bmo, *kargs, **kwargs):
		tk.Frame.__init__(self, *kargs, **kwargs)
		self.tiepoint = tiepoint
		self.clipboard = clipboard
=================
3085696
count:1
	def __init__(self, tiepoint, displayfilter, clipboard, *kargs, **kwargs):
		tk.Frame.__init__(self, *kargs, **kwargs)

		self.tiepoint = tiepoint
		self.displayfilter = displayfilter
		self.clipboard = clipboard

		# adding vertical scrollbar to a frame isn't possible...
		# ->we have to create a canvas, then add the scrollbar and a inner frame to current frame
		# http://stackoverflow.com/questions/3085696/adding-a-scrollbar-to-a-group-of-widgets-in-tkinter
		self.canvas = tk.Canvas(self, borderwidth=0, background="gray", width=800, height=500)
		self.frame = tk.Frame(self.canvas, background="gray")
		self.vsb = tk.Scrollbar(self, orient="vertical", command=self.canvas.yview)
		self.hsb = tk.Scrollbar(self, orient="horizontal", command=self.canvas.xview)
		self.canvas.configure(yscrollcommand=self.vsb.set)
		self.canvas.configure(xscrollcommand=self.hsb.set)

		self.vsb.pack(side="right", fill="y")
		self.hsb.pack(side="bottom", fill="x")
		self.canvas.pack(side="left", fill="both", expand=True)
=================
6920302
count:1
				lab.grid(row=row_idx, column=5, padx=1, pady=1, sticky='NSEW')

				# button: copy to clipboard
				# Warning: Tkinter callbacks can't be defined directly with arguments
				# ->Using a lambda function works only when the argument is a fixed value:
				#   command=lambda: self._cb_button_activate(1)
				# ->"child" is always the last loop value when called this way:
				#   command=lambda: self._cb_button_to_clipboard(child)
				# =>using "partial" from functools:
				# http://stackoverflow.com/questions/6920302/how-to-pass-arguments-to-a-button-command-in-tkinter
				myfunc = functools.partial(self._cb_button_to_clipboard_normal, child)
				btn = tk.Button(master=self.frame, text='normal', command=myfunc)
				btn.grid(row=row_idx, column=6, sticky=tk.N + tk.S + tk.E + tk.W)

				if self.tiepoint.dp_dict[child].is_plc:
					myfunc = functools.partial(self._cb_button_to_clipboard_pg5, child)
					btn = tk.Button(master=self.frame, text='PG5 Symbol', command=myfunc)
					btn.grid(row=row_idx, column=7, sticky=tk.N + tk.S + tk.E + tk.W)

				# button: show datapoint in serialized DMS format in a popup window
=================
17657212
count:1
class _Popup_text(tk.Toplevel):
	def __init__(self, text_str, *kargs, **kwargs):
		tk.Toplevel.__init__(self, *kargs, **kwargs)
		self.text_str = text_str

		self._show_text()

	def _show_text(self):
		# example: multiline text with scrollbars:
		# http://stackoverflow.com/questions/17657212/how-to-code-the-tkinter-scrolledtext-module
		xscrollbar = tk.Scrollbar(self)
		yscrollbar = tk.Scrollbar(self)
		textArea = tk.Text(self, width=150, height=50, wrap="word",
		                    xscrollcommand=xscrollbar.set,
		                    yscrollcommand=yscrollbar.set,
                            borderwidth=0, highlightthickness=0)
		xscrollbar.config(command=textArea.xview)
		yscrollbar.config(command=textArea.yview)
		xscrollbar.pack(side="bottom", fill="x")
		yscrollbar.pack(side="right", fill="y")
=================
13954841
count:1
			self.digital_dict[dp].read_from_dms(curr_dms)
		for dp in self.datablock_dict:
			self.datablock_dict[dp].read_from_dms(curr_dms)


	def renumber_resources(self):
		# process digital datapoints first (this way we're ready when we need to start analogue datapoints with higher telegram number)
		# using built-in "sorted()" function for getting same ordering as in PET (DMS-keys are case-sensitive)
		# =>but: Python's "sorted()" seems to sort by ASCII-code, and Visi+ by AaBbCcDd... =>need to help sorted() with own key-function:
		# http://stackoverflow.com/questions/13954841/python-sort-upper-case-and-lower-case
		# https://docs.python.org/2/library/functions.html#sorted

		# digital datapoints
		Digital_resource.reset_addr_generator()
		for dp in sorted(self.digital_dict, key=keyfunc_dmskey):
			curr_telegr, curr_addr = Digital_resource.get_next_addr()
			self.digital_dict[dp].set_addr(station_int=self.station_int,
			                               channel_str=self.channel_str,
			                               telegr_int=curr_telegr,
			                               addr_int=curr_addr)
=================
11047803
count:1
			if item[0].startswith('System:Driver:SDriver:'):
				dms_parts = item[0].split(':')[:-1]
				mychan = ':'.join(dms_parts)
				self.channel_dict_of_dicts[mychan] = {}


		if len(self.channel_dict_of_dicts) > 0:
			# Header:
			# build a table-similar structure:
			# http://stackoverflow.com/questions/11047803/creating-a-table-look-a-like-tkinter
			lab = tk.Label(master=self, text='name', relief=tk.RIDGE)
			lab.grid(row=4, column=0, sticky=tk.N + tk.S + tk.E + tk.W)

			lab = tk.Label(master=self, text='activated', relief=tk.RIDGE)
			lab.grid(row=4, column=1, sticky=tk.N + tk.S + tk.E + tk.W)

			lab = tk.Label(master=self, text='state', relief=tk.RIDGE)
			lab.grid(row=4, column=2, sticky=tk.N + tk.S + tk.E + tk.W)


=================
6920302
count:1
				self.channel_dict_of_dicts[channel]['Status'] = lab

				# button for activation/deactivation
				# Warning: Tkinter callbacks can't be defined directly with arguments
				# ->Using a lambda function works only when the argument is a fixed value:
				#   command=lambda: self._cb_button_activate(1)
				# ->"channel" is always the last loop value when called this way:
				#   command=lambda: self._cb_button_activate(channel)
				# =>using "partial" from functools:
				# http://stackoverflow.com/questions/6920302/how-to-pass-arguments-to-a-button-command-in-tkinter
				myfunc = functools.partial(self._cb_button_activate, channel)
				btn = tk.Button(master=self, text=state[2], command=myfunc)
				btn.grid(row=row_idx, column=3, sticky=tk.N + tk.S + tk.E + tk.W)
				self.channel_dict_of_dicts[channel]['button'] = btn


			# start background task for keeping Status label updated
			# http://stackoverflow.com/questions/459083/how-do-you-run-your-own-code-alongside-tkinters-event-loop
			self.rootwindow.after(self.BGTASKINTERVAL, self._update_status)

=================
459083
count:1
				# =>using "partial" from functools:
				# http://stackoverflow.com/questions/6920302/how-to-pass-arguments-to-a-button-command-in-tkinter
				myfunc = functools.partial(self._cb_button_activate, channel)
				btn = tk.Button(master=self, text=state[2], command=myfunc)
				btn.grid(row=row_idx, column=3, sticky=tk.N + tk.S + tk.E + tk.W)
				self.channel_dict_of_dicts[channel]['button'] = btn


			# start background task for keeping Status label updated
			# http://stackoverflow.com/questions/459083/how-do-you-run-your-own-code-alongside-tkinters-event-loop
			self.rootwindow.after(self.BGTASKINTERVAL, self._update_status)

		else:
			lab = tk.Label(master=self, text='(No channels found...)', background='green')
			lab.grid(row=4, column=0, padx=2, pady=2)

	def _get_sdriver_state(self):
		# returns string for label SDriver state
		# index0: text of label
		# index1: color of label
=================
10695139
count:1
				# this object always contains head element from iterator, and iterator itself
				new_source = _TStamp_iter_source(curr_iter.next(), curr_iter)
				tstamp_generator_list.append(new_source)
			except StopIteration:
				pass

		# request items from all generators, always returning smaller value
		while tstamp_generator_list:
			# consuming timestamps, returning always oldest one, updating first element
			# sorting list of tuples: http://stackoverflow.com/questions/10695139/sort-a-list-of-tuples-by-2nd-item-integer-value
			# =>getting source list with oldest timestamp
			key_func = lambda tstamp_iter_source: tstamp_iter_source.head_elem.tstamp_dt
			tstamp_generator_list = sorted(tstamp_generator_list, key=key_func)
			oldest_source_obj = tstamp_generator_list[0]
			curr_tstamp_obj = oldest_source_obj.head_elem
			yield curr_tstamp_obj
			try:
				# update head-element of current timestamp source
				oldest_source_obj.head_elem = oldest_source_obj.iterator.next()
			except StopIteration:
=================
3789372
count:1
	def get_all_statusbits_list(self):
		# return a list with all available statusbit names
		global statusbits_namelist
		global statusbits_unnamedlist
		return statusbits_namelist + statusbits_unnamedlist

	def get_curr_statusbits_set(self, curr_status):
		# generate a set containing only active statusbits from given status value
		# (if available insert named and unnamed statusbits)
		# =>idea from http://stackoverflow.com/questions/3789372/python-can-we-convert-a-ctypes-structure-to-a-dictionary

		# first look in cached statusvalue-meaning
		if curr_status in Statusbit_Meaning.statusvalue_meaning_dict:
			myset = Statusbit_Meaning.statusvalue_meaning_dict[curr_status]
		else:
			# first time lookup of this statusvalue... creating this set
			# because of statical behaviour of ctypes: using class attribut
			Statusbit_Meaning.statusbit_instance.asLong = curr_status

			myset = set()
=================
1444159
count:1




class DBData(ctypes.Structure):
	# Trenddata struct: [time (=>32bit unsigned integer), value (=>32bit IEEE float), status (=>32bit bitmap, interpret as unsigned integer)], every element is 32bit
	# https://docs.python.org/2/library/struct.html#format-characters
	STRUCT_FORMAT = 'IfI'

	# based on http://stackoverflow.com/questions/1444159/how-to-read-a-structure-containing-an-array-using-pythons-ctypes-and-readinto
	_fields_ = [
		("timestamp", ctypes.c_uint),
		("value", ctypes.c_float),
		("status", ctypes.c_uint)]

	def __init__(self):
		ctypes.Structure.__init__(self)


class DBData2(ctypes.Structure):
=================
1444159
count:1
	# -timestamp (=>32bit unsigned integer, "Unix epoch"),
	# -timestamp: fraction in milliseconds (=>16bit integer, assumption unsigned int) =>added in ProMoS v2.x
	# -unknown field 2 bytes,
	# -status (=>32bit bitmap, interpret as unsigned integer),
	# -unknown field 4 bytes,
	# -value (=>64bit IEEE float)
	# https://docs.python.org/2/library/struct.html#format-characters
	STRUCT_FORMAT = 'IHHIId'

	# based on http://stackoverflow.com/questions/1444159/how-to-read-a-structure-containing-an-array-using-pythons-ctypes-and-readinto
	_fields_ = [
		("timestamp", ctypes.c_uint),
		("milliseconds", ctypes.c_ushort),
		("unknown_bytes1", ctypes.c_char * 2),
		("status", ctypes.c_uint),
		("unknown_bytes2", ctypes.c_char * 4),
		("value", ctypes.c_double)]

	def __init__(self):
		ctypes.Structure.__init__(self)
=================
390250
count:1
		return HighLevelDBData._statusbit_meaning.get_curr_statusbits_set(self.status)


	def getStatusBitsString(self):
		return ', '.join(self.get_statusbits_set())


	# allow using DBData objects in set():
	# =>we need a hash value over all fields to get same hash for same trenddata element!
	# example from http://stackoverflow.com/questions/390250/elegant-ways-to-support-equivalence-equality-in-python-classes
	# ==>we need to implement __hash__() and __eq__()
	# (according to https://docs.python.org/2/library/sets.html )
	def __hash__(self):
		"""Override the default hash behavior (that returns the id of the object)"""
		return hash(tuple([self.timestamp, self.value, self.status]))


	def __eq__(self, other):
		"""Override the default equality behavior (that uses id of the object)"""
		return self.timestamp == other.timestamp and self.value == other.value and self.status == other.status
=================
390250
count:1
		return HighLevelDBData._statusbit_meaning.get_curr_statusbits_set(self.status)


	def getStatusBitsString(self):
		return ', '.join(self.get_statusbits_set())


	# allow using DBData objects in set():
	# =>we need a hash value over all fields to get same hash for same trenddata element!
	# example from http://stackoverflow.com/questions/390250/elegant-ways-to-support-equivalence-equality-in-python-classes
	# ==>we need to implement __hash__() and __eq__()
	# (according to https://docs.python.org/2/library/sets.html )
	def __hash__(self):
		"""Override the default hash behavior (that returns the id of the object)"""
		return hash(tuple([self.timestamp, self.milliseconds, self.value, self.status]))


	def __eq__(self, other):
		"""Override the default equality behavior (that uses id of the object)"""
		return self.timestamp == other.timestamp and self.milliseconds == other.milliseconds and self.value == other.value and self.status == other.status
=================
1444159
count:1
			start_time_int  range start of trenddata search (in sec since 1.1.1970)
			end_time_int    range end of trenddata search (in sec since 1.1.1970)
			count_int       amount of wished trenddata =>if there exists more items than count_int,
							then PDBS should return 2 * count_int trenddata (min and max in every timeslot)
		"""

		arr_size = max(4, self.pyPdbsGetCount(dmsname_str, start_time_int, end_time_int)) + 1


		# FIXME: perhaps implement Array as in http://stackoverflow.com/questions/1444159/how-to-read-a-structure-containing-an-array-using-pythons-ctypes-and-readinto
		# FIXME: using that in trendfile.py?
		# FIXME: example: https://www.daniweb.com/programming/software-development/threads/351774/passing-pointer-to-array-of-structures-in-ctypes

		# code based on http://stackoverflow.com/questions/16704408/python-ctypes-populate-an-array-of-structures
		self.pmospipe.PdbsGetData.argtypes = [ctypes.c_int, ctypes.c_char_p, ctypes.c_int, ctypes.c_int, ctypes.c_int, ctypes.POINTER(
			trend.datasource.dbdata.DBData)]
		self.pmospipe.PdbsGetData.restype = ctypes.c_int
		trenddata_arr = (trend.datasource.dbdata.DBData * arr_size)()
		nof_trenddata = self.pmospipe.PdbsGetData(self.handle, str(dmsname_str), int(start_time_int), int(end_time_int), int(count_int), trenddata_arr)

=================
16704408
count:1
		"""

		arr_size = max(4, self.pyPdbsGetCount(dmsname_str, start_time_int, end_time_int)) + 1


		# FIXME: perhaps implement Array as in http://stackoverflow.com/questions/1444159/how-to-read-a-structure-containing-an-array-using-pythons-ctypes-and-readinto
		# FIXME: using that in trendfile.py?
		# FIXME: example: https://www.daniweb.com/programming/software-development/threads/351774/passing-pointer-to-array-of-structures-in-ctypes

		# code based on http://stackoverflow.com/questions/16704408/python-ctypes-populate-an-array-of-structures
		self.pmospipe.PdbsGetData.argtypes = [ctypes.c_int, ctypes.c_char_p, ctypes.c_int, ctypes.c_int, ctypes.c_int, ctypes.POINTER(
			trend.datasource.dbdata.DBData)]
		self.pmospipe.PdbsGetData.restype = ctypes.c_int
		trenddata_arr = (trend.datasource.dbdata.DBData * arr_size)()
		nof_trenddata = self.pmospipe.PdbsGetData(self.handle, str(dmsname_str), int(start_time_int), int(end_time_int), int(count_int), trenddata_arr)

		trenddata_list = []
		for item in trenddata_arr:
			curr_trenddata = trend.datasource.dbdata.DBData()
			curr_trenddata.setVariables(item.timestamp, item.value, item.status)
=================
18536182
count:1
		# using ProMoS NT(c) version 2.x
		curr_DBData_class = DBData2
	nof_dbdata_elems = (filesize - TRENDDATA_OFFSET) / ctypes.sizeof(curr_DBData_class)

	class Trendfile_structure(ctypes.LittleEndianStructure):
		"""
		Header contains DMS datapoint name,
		data section contains all DBData elements, amount depends on filesize...
		"""
		# contains some hints from http://stackoverflow.com/questions/18536182/parsing-binary-data-into-ctypes-structure-object-via-readinto
		_fields_ = [
			("dmsDatapoint", ctypes.c_char * DMSDP_NOF_BYTES),                          # DMS datapoint name
			("UNKNOWN_BYTES", ctypes.c_char * (TRENDDATA_OFFSET - DMSDP_NOF_BYTES)),    # perhaps unused
			("dbdata", curr_DBData_class * nof_dbdata_elems)                            # array of DBData elements

		]

	# return an instance to caller
	return Trendfile_structure()

=================
18536182
count:1

class RawTrendfile(object):
	def __init__(self, fileFullpath):
		self._fileFullpath = fileFullpath
		self._trendstruct = get_trendfile_structure_obj(self._fileFullpath)
		self._parseFile_()

	def _parseFile_(self):
		# reading binary trendfile into ctypes structure
		# contains hints from http://stackoverflow.com/questions/18536182/parsing-binary-data-into-ctypes-structure-object-via-readinto
		with open(self._fileFullpath, "rb") as f:
			f.readinto(self._trendstruct)

	def get_dms_Datapoint(self):
		return self._trendstruct.dmsDatapoint

	def get_nof_dbdata_elements(self):
		return len(self._trendstruct.dbdata)

	def get_first_timestamp(self):
=================
231767
count:1
		return self._trendstruct.dbdata[0].get_datetime()

	def get_last_timestamp(self):
		return self._trendstruct.dbdata[-1].get_datetime()

	def get_dbdata_elements_generator(self, start_datetime=None, end_datetime=None):
		"""
		a generator for memory efficient retrieving DBData elements
		(caller can only loop once through generator,
		read here: http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python  )
		=>optional arguments allows filtering of DBData elements
		"""
		# FIXME: implement some filtering (same as in "trendfile.py.old"?) Or is further filtering done in HighLevelTrendfile?
		for elem in self._trendstruct.dbdata:
			ignore = False
			if start_datetime:
				if elem.get_datetime() < start_datetime:
					ignore = True
			if end_datetime:
				if elem.get_datetime() > end_datetime:
=================
10576548
count:1
	second OrderedDict index allows retrieving of DBData-lists by its known position
	==>both index dictionaries MUST have same size!!!
	"""
	def __init__(self, fileFullpath):
		RawTrendfile.__init__(self, fileFullpath)
		self._indexed_by_timestamp = collections.OrderedDict()
		self._indexed_by_index = []

		# some statistics over DBData items
		# with help from http://stackoverflow.com/questions/10576548/python-usable-max-and-min-values
		self.minValue = -float("inf")
		self.maxValue = +float("inf")

		self._create_index()
		if DEBUGGING:
			print('constructor of IndexedTrendfile(): file "' + fileFullpath + '" is ready.')


	def _create_index(self):
		curr_list = []
=================
39359245
count:1
	def get_whole_file(self):
		self._read_metadata()
		if self._last_readtime <> self._modification_time:
			# first reading or file changed
			self._whole_file = IndexedTrendfile(self._fullpath)
			self._last_readtime = self._modification_time
		return self._whole_file

	def get_metadata(self):
		# examples from http://stackoverflow.com/questions/39359245/from-stat-st-mtime-to-datetime
		# and http://stackoverflow.com/questions/6591931/getting-file-size-in-python
		# and https://docs.python.org/2/library/stat.html
		# and http://stackoverflow.com/questions/455612/limiting-floats-to-two-decimal-points
		# and http://stackoverflow.com/questions/311627/how-to-print-date-in-a-regular-format-in-python
		self._read_metadata()
		size = float("{0:.2f}".format(self._filesize / 1024.0))
		mod_time = datetime.datetime.fromtimestamp(self._modification_time).strftime("%Y.%m.%d %H:%M:%S")
		return size, mod_time


=================
6591931
count:1
		self._read_metadata()
		if self._last_readtime <> self._modification_time:
			# first reading or file changed
			self._whole_file = IndexedTrendfile(self._fullpath)
			self._last_readtime = self._modification_time
		return self._whole_file

	def get_metadata(self):
		# examples from http://stackoverflow.com/questions/39359245/from-stat-st-mtime-to-datetime
		# and http://stackoverflow.com/questions/6591931/getting-file-size-in-python
		# and https://docs.python.org/2/library/stat.html
		# and http://stackoverflow.com/questions/455612/limiting-floats-to-two-decimal-points
		# and http://stackoverflow.com/questions/311627/how-to-print-date-in-a-regular-format-in-python
		self._read_metadata()
		size = float("{0:.2f}".format(self._filesize / 1024.0))
		mod_time = datetime.datetime.fromtimestamp(self._modification_time).strftime("%Y.%m.%d %H:%M:%S")
		return size, mod_time



=================
455612
count:1
			# first reading or file changed
			self._whole_file = IndexedTrendfile(self._fullpath)
			self._last_readtime = self._modification_time
		return self._whole_file

	def get_metadata(self):
		# examples from http://stackoverflow.com/questions/39359245/from-stat-st-mtime-to-datetime
		# and http://stackoverflow.com/questions/6591931/getting-file-size-in-python
		# and https://docs.python.org/2/library/stat.html
		# and http://stackoverflow.com/questions/455612/limiting-floats-to-two-decimal-points
		# and http://stackoverflow.com/questions/311627/how-to-print-date-in-a-regular-format-in-python
		self._read_metadata()
		size = float("{0:.2f}".format(self._filesize / 1024.0))
		mod_time = datetime.datetime.fromtimestamp(self._modification_time).strftime("%Y.%m.%d %H:%M:%S")
		return size, mod_time



class Trendfile_Cache_Handler(object):
	"""
=================
311627
count:1
			self._whole_file = IndexedTrendfile(self._fullpath)
			self._last_readtime = self._modification_time
		return self._whole_file

	def get_metadata(self):
		# examples from http://stackoverflow.com/questions/39359245/from-stat-st-mtime-to-datetime
		# and http://stackoverflow.com/questions/6591931/getting-file-size-in-python
		# and https://docs.python.org/2/library/stat.html
		# and http://stackoverflow.com/questions/455612/limiting-floats-to-two-decimal-points
		# and http://stackoverflow.com/questions/311627/how-to-print-date-in-a-regular-format-in-python
		self._read_metadata()
		size = float("{0:.2f}".format(self._filesize / 1024.0))
		mod_time = datetime.datetime.fromtimestamp(self._modification_time).strftime("%Y.%m.%d %H:%M:%S")
		return size, mod_time



class Trendfile_Cache_Handler(object):
	"""
	Holds trendfile objects in a cache for more efficiency
=================
295135
count:1
	def _get_trend_filename(self):
		# FIXME: I assume that all illegal characters in a DMS-datapoint gets replaced by "_" for getting a valid filename....
		# FIXME: It's a known problem that these datapoints stores trends in the SAME TRENDFILE (=>corrupted trend!!!)
		# FIXME: should we abort processing file if we can't find a file with the right DMS-DP-string in trendfile-header?
		#   MSR_U02:Test:L01_02:foo:Input
		#   MSR_U02:Test:L01:02:foo:Input
		#   MSR_U02:Test:L01:02_foo:Input
		#  ===>trenddata of all three TRD-datapoints were combined into file "MSR_U02_Test_L01_02_foo_Input.hdb" !!!

		# some help from http://stackoverflow.com/questions/295135/turn-a-string-into-a-valid-filename
		# =>now we restrict filename and hope PDBS does it the same way...
		valid_chars = set(string.ascii_letters) ^ set(string.digits)
		char_list = []
		for char in self.dms_dp_str:
			if char in valid_chars:
				char_list.append(char)
			else:
				char_list.append('_')
		return ''.join(char_list) + '.hdb'

=================
42950
count:1
								search_result_list.append(search_result)
								break
		except Exception as ex:
			print('WARNING: [2] MetaTrendfile.get_DBData_Timestamp_Search_Result(): got exception "' + repr(ex) + '" while getting trend from "' + filename_fullpath + '"')

		try:
			if bak_searching_future:
				# walking forward through available directories
				for year, month in sorted(self.backup_subdirs_dict.keys(), reverse=False):
					# with help from http://stackoverflow.com/questions/42950/get-last-day-of-the-month-in-python
					last_day_of_month = calendar.monthrange(int(year), int(month))[1]
					backupdir_timestamp = datetime.datetime(year=int(year), month=int(month), day=last_day_of_month, tzinfo=MetaTrendfile._tz)
					if backupdir_timestamp > timestamp_datetime:
						subdir_str = self.backup_subdirs_dict[year, month]
						filename_fullpath = os.path.join(self.backup_dir, subdir_str, self.trend_filename_str)
						if os.path.exists(filename_fullpath):
							# we found a backup, it should contain DBData after timestamp...
							bak_trendfile = self.trf_cache_handler.get_trendfile_obj(filename_fullpath, cached=True)
							search_result = bak_trendfile.get_DBData_Timestamp_Search_Result(timestamp_datetime)
							if search_result:
=================
231767
count:1
		combined_sr.after_list = list(dbdata_after_set)
		return combined_sr


	def get_dbdata_lists_generator(self, start_datetime=None, end_datetime=None):
		"""
		a generator over all available trenddata for (perhaps) memory efficient retrieving lists with DBData elements,
		items with same timestamp are grouped
		(caller can only loop once through generator,
		read here: http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python  )
		=>optional arguments allows filtering of DBData elements
		=>using something similar like "mergesort" algorithm: https://en.wikipedia.org/wiki/Merge_sort
		=>using "deque" objects for efficient popleft: https://docs.python.org/2/library/collections.html#collections.deque
		=>using uncached trendfile, since we MODIFY the internal DBData-lists
		"""
		# FIXME: do a cleaner implementation of this...

		# trenddata in project directory:
		# =>using one queue
		dat_deque = collections.deque()
=================
15114023
count:1
				# make shure this class contains enough trenddata, then return next element
				# (if we let deque ran out of elements then statement "if bak_deque" will fail)
				if len(self._deque_obj) <= 1:
					# "deque" is empty... trying to append next trendfile
					self._load_next_trendfile()
				return self._deque_obj.popleft()

			def __len__(self):
				# overriding this hook method for allowing getting current size of deque object
				# (with help from http://stackoverflow.com/questions/15114023/using-len-and-def-len-self-to-build-a-class
				#  and http://stackoverflow.com/questions/7816363/if-a-vs-if-a-is-not-none
				# )
				return len(self._deque_obj)


		bak_deque = _deque_wrapper(self.backup_subdirs_dict, self.backup_dir, self.trend_filename_str, self.trf_cache_handler)

		# checking tail of both deques and return list with unique DBData elements at oldest timestamp
		# =>do until we returned all available trenddata
		dat_list = []
=================
7816363
count:1
				# (if we let deque ran out of elements then statement "if bak_deque" will fail)
				if len(self._deque_obj) <= 1:
					# "deque" is empty... trying to append next trendfile
					self._load_next_trendfile()
				return self._deque_obj.popleft()

			def __len__(self):
				# overriding this hook method for allowing getting current size of deque object
				# (with help from http://stackoverflow.com/questions/15114023/using-len-and-def-len-self-to-build-a-class
				#  and http://stackoverflow.com/questions/7816363/if-a-vs-if-a-is-not-none
				# )
				return len(self._deque_obj)


		bak_deque = _deque_wrapper(self.backup_subdirs_dict, self.backup_dir, self.trend_filename_str, self.trf_cache_handler)

		# checking tail of both deques and return list with unique DBData elements at oldest timestamp
		# =>do until we returned all available trenddata
		dat_list = []
		bak_list = []
=================
15004772
count:1
				# trenddata is too old
				usable = False
			if dat_trendfile.get_first_timestamp() > stop_datetime:
				# trenddata is too new
				usable = False
			if usable:
				prj_iter = dat_trendfile.get_dbdata_timestamps_generator()

		# lazily generating timestamp iterators from backup
		# (idea from http://stackoverflow.com/questions/15004772/what-is-the-difference-between-chain-and-chain-from-iterable-in-itertools )
		def generate_backup_iterators():
			# walking forward through available directories
			for year, month in sorted(self.backup_subdirs_dict.keys(), reverse=False):
				if int(year) >= start_datetime.year and int(month) >= start_datetime.month and \
					int(year) <= stop_datetime.year and int(month) <= stop_datetime.month:
					# current backup directory should contain trenddata in requested timerange
					subdir_str = self.backup_subdirs_dict[year, month]
					filename_fullpath = os.path.join(self.backup_dir, subdir_str, self.trend_filename_str)
					if os.path.exists(filename_fullpath):
						# we found a backup, it should contain trenddata...
=================
10695139
count:1
				# this list always contains head element from iterator, and iterator itself
				new_source = [source.next(), source]
				tstamp_generator_list.append(new_source)
			except StopIteration:
				pass

		# request items from both generators, always returning smaller value
		while tstamp_generator_list:
			# consuming timestamps, returning always oldest one, updating first element
			# sorting list of tuples: http://stackoverflow.com/questions/10695139/sort-a-list-of-tuples-by-2nd-item-integer-value
			# =>getting source list with oldest timestamp
			tstamp_generator_list = sorted(tstamp_generator_list, key=itemgetter(0))
			oldest_source_list = tstamp_generator_list[0]
			curr_tstamp, curr_iter = oldest_source_list[0], oldest_source_list[1]

			if curr_tstamp >= start_datetime and curr_tstamp <= stop_datetime:
				yield Tstamp(curr_tstamp)

			try:
				# update head-element of current timestamp source
=================
4741243
count:1
	# 	trf = IndexedTrendfile(filename)
	# 	print('IndexedTrendfile "' + filename + '" contains trenddata of DMS datapoint ' + trf.get_dms_Datapoint())
	# 	print('number of DBData elements: ' + str(trf.get_nof_dbdata_elements()))
	# 	print('number of unique timestamps: ' + str(len(trf._indexed_by_timestamp)))
	# 	print('timestamp of first DBData element: ' + trf.get_first_timestamp().strftime('%Y-%m-%d %H:%M:%S'))
	# 	print('timestamp of last DBData element: ' + trf.get_last_timestamp().strftime('%Y-%m-%d %H:%M:%S'))
	# 	print('(timespan is ' + str((trf.get_last_timestamp() - trf.get_first_timestamp()).days) + ' days)')
	#
	# 	# getting some values...
	# 	# hint from http://stackoverflow.com/questions/4741243/how-to-pick-just-one-item-from-a-generator-in-python
	# 	# =>we need to get another generator object when we want to get the same interation!
	# 	for x in range(2):
	# 		print('interpretation of values of some DBData elements: (run number ' + str(x) + ')')
	# 		my_generator = trf.get_dbdata_elements_generator()
	# 		for x in range(10):
	# 			elem = my_generator.next()
	# 			print('as boolean: ' + str(elem.get_value_as_boolean()) + '\tas int: ' + str(elem.get_value_as_int())+ '\tas float: ' + str(elem.get_value_as_float()))
	#
	# 	# getting trenddata by timestamp:
	# 	timestamps_list = [datetime.datetime(year=2016, month=1, day=6, hour=4, minute=27, second=23),
=================
7588511
count:1
			# if available insert statusbit names instead of their bitnumber
			all_statusbits_list = Statusbit_Meaning().get_all_statusbits_list()
			for bit in all_statusbits_list:
				header_cells.append(bit)
			f.write(';'.join(header_cells))
			f.write('\n')

			for item in curr_trf.get_dbdata_elements_generator():
				# using datetime object for getting millisecond resolution (DBData2) instead of using time (DBData)
				# (with help from https://stackoverflow.com/questions/7588511/format-a-datetime-into-a-string-with-milliseconds
				# we cut microseconds away. By the way: our datetime object is timezone-aware! :-) )
				timestamp_str = item.get_datetime().strftime('%Y-%m-%d %H:%M:%S.%f')[:-3]

				## help from http://stackoverflow.com/questions/12400256/python-converting-epoch-time-into-the-datetime
				#timestamp_str = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(item.getTimestamp()))

				## test with DST (daylight saving time)
				#timestamp_str = time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(item.getTimestamp()))
				value_str = str(item.getValue())
				status_str = str(item.getStatus())
=================
12400256
count:1
			f.write(';'.join(header_cells))
			f.write('\n')

			for item in curr_trf.get_dbdata_elements_generator():
				# using datetime object for getting millisecond resolution (DBData2) instead of using time (DBData)
				# (with help from https://stackoverflow.com/questions/7588511/format-a-datetime-into-a-string-with-milliseconds
				# we cut microseconds away. By the way: our datetime object is timezone-aware! :-) )
				timestamp_str = item.get_datetime().strftime('%Y-%m-%d %H:%M:%S.%f')[:-3]

				## help from http://stackoverflow.com/questions/12400256/python-converting-epoch-time-into-the-datetime
				#timestamp_str = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(item.getTimestamp()))

				## test with DST (daylight saving time)
				#timestamp_str = time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(item.getTimestamp()))
				value_str = str(item.getValue())
				status_str = str(item.getStatus())
				curr_row = [timestamp_str, value_str, status_str]

				# add statusbits one bit per cell
				curr_statusbits = item.get_statusbits_set()
=================
5214578
count:1
	timestampStart = 1455750000
	timestampEnd = 1455836400

	filename_export_backup_suppressed_str = r'D:\from_backupfile_suppressed.csv'
	filename_export_backup_trendfile_str = r'D:\from_backupfile.csv'
	filename_export_suppressed_str = r'D:\from_dat_suppressed.csv'
	filename_export_trendfile_str = r'D:\from_dat.csv'
	filename_export_pdbs_str = r'D:\from_PDBS.csv'

	# Example: Write into textfile: http://stackoverflow.com/questions/5214578/python-print-string-to-text-file


	###################### trenddata from Visi.Plus PDBS service ##################
	print('\n*** getting Trenddata from Visi.Plus PDBS-service ***')
	dmsDpName = 'Messkoffer01:TEMP:TF07:Messung:Istwert'
	currPdbs = pdbs.Pdbs()
	nofDps = currPdbs.pyPdbsGetCount(dmsDpName, timestampStart, timestampEnd)

	print('Writing "official" Visi.Plus PDBS datapoints into file "' + filename_export_pdbs_str + '"' )
	print('\t(according to PDBS-service there are ' + str(nofDps) + ' trenddata items for DMS key "' + dmsDpName + '"')
=================
3224268
count:1
	if type(line) == str:
		# conversion byte-string -> unicode -> byte-string
		# (first encoding is source file encoding, second one is encoding of console)
		unicode_line = line.decode(ENCODING_SRC_FILE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	print(unicode_line.encode(ENCODING_STDOUT, errors='replace'))

## FIXME: warum funktioniert untenstehender Code nicht?!?! ==>DEBUGGING!!! :-(

def main(argv=None):
	psc_directory = u'D:\Temp\ZH_Tièchestrasse'
	output_directory = u'D:\Temp\ZH_Tièchestrasse_new'

	for filename in os.listdir(psc_directory):
		if filename.endswith(u'.psc'):
=================
3224268
count:1
	if type(line) == str:
		# conversion byte-string -> unicode -> byte-string
		# (first encoding is source file encoding, second one is encoding of console)
		unicode_line = line.decode(ENCODING_SRC_FILE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	print(unicode_line.encode(ENCODING_STDOUT, errors='replace'))


def pretty_print(line1, line2):
	"""
	print difference in textline as human-readable table
	"""
	parts1 = line1.split(u';')
	parts2 = line2.split(u';')

=================
12550929
count:1
def pretty_print(line1, line2):
	"""
	print difference in textline as human-readable table
	"""
	parts1 = line1.split(u';')
	parts2 = line2.split(u';')

	nof_parts = max(len(parts1), len(parts2))
	# normalize lists: include empty parts if one PSC line has more CSV fields
	# (help from http://stackoverflow.com/questions/12550929/how-to-make-all-lists-in-a-list-of-lists-the-same-length-by-adding-to-them )
	for curr_parts_list in [parts1, parts2]:
		length = len(curr_parts_list)
		if length < nof_parts:
			curr_parts_list.extend([u'' for _ in xrange(nof_parts - length)])

	# indent for better readability
	out_header = u'\t'
	out_stars = u'\t'
	out_line1 = u'\t'
	out_line2 = u'\t'
=================
3977570
count:1
		old_bmo_instances = set(self._dbcur.execute("SELECT name FROM instances").fetchall())
		curr_bmo_instances = set(bmo_instances_list)

		removed_instances = curr_bmo_instances - old_bmo_instances
		logger.debug('BMO_Linkcache.update_bmo_instances(): these BMO instances were removed in PSC: ' + str(removed_instances))
		for inst in removed_instances:
			inst_id = self._dbcur.execute("SELECT instance_id FROM instances WHERE name=?", (inst,)).fetchall()[0]

			# cleaning up all tables...
			# help from https://stackoverflow.com/questions/3977570/how-to-delete-record-from-table
			self._dbcur.execute("DELETE FROM instances WHERE instance_id=?", (inst_id,))

			for plc_id in self._dbcur.execute("SELECT plc_id FROM plcs WHERE instance_id=?", (inst_id,)).fetchall():
				self._dbcur.execute("DELETE FROM links WHERE src_plc_id=? or dst_plc_id=?", (plc_id, plc_id))
			self._dbcur.execute("DELETE FROM plcs WHERE instance_id=?", (inst_id,))

		added_instances = old_bmo_instances - curr_bmo_instances
		logger.debug('BMO_Linkcache.update_bmo_instances(): these BMO instances were added in PSC: ' + str(added_instances))
		for inst in added_instances:
			# FIXME: implement BMO-check, search all necessary information in DMS
=================
39087139
count:1
					tags = (MyGUI.BMO_EXISTS_TAG, instance)
					self._existing_bmos_list.append(instance)
			else:
				fillcolor = "red"
				tags = (MyGUI.BMO_MISSING_TAG, instance)
			# hint about using tags: http://effbot.org/tkinterbook/canvas.htm#item-specifiers
			canvas_visu.create_rectangle(*metadata.get_max_coords(), fill=fillcolor, outline="blue", tags=tags)

			# add text over rectangle (and reusing same tags for event binding)
			# help from https://stackoverflow.com/questions/39087139/tkinter-label-text-in-canvas-rectangle-python
			x, y = metadata.get_center_coords()
			canvas_visu.create_text((x, y), text=self._bmo_instances[instance].get_BMO_class(), tags=tags)

			# update minimal size of canvas
			canvas_visu.configure(width=self._used_area[0] + PSC_Elements_Handler.MARGIN_SIZE,
			                      height=self._used_area[1] + PSC_Elements_Handler.MARGIN_SIZE)


	def draw_connections(self, dms_ws, canvas_visu, bmo_inst_str):
		""" draw connections from/to other BMO instances """
=================
3962247
count:1
		# activate watching of PSC-file
		self._filewatcher.start_watching()
		self._ge_psc_changed()


	def _buildCanvasVisu(self, parent):
		if self._canvas_visu:
			# widget already exists... =>delete it for redrawing
			# updating information ->first delete the widget, then redraw it
			# http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
			self._canvas_visu.grid_forget()
			self._canvas_visu.destroy()

		self._canvas_visu = Tkinter.Canvas(parent, width=MyGUI.CANVAS_WIDTH, height=MyGUI.CANVAS_HEIGHT, background="white")

		# FIXME: enabling scrolling: http://effbot.org/tkinterbook/canvas.htm#coordinate-systems
		# FIXME: changing size of rootwindow doesn't affect scrollbars
		# FIXME: should we scale canvas or use scrollbars when user resizes rootwindow? some PSC windows are huge...!
		# done: we should adjust "width" and "heigth" dynamically from max(max coordinates of PSC graphelements, size PSC window)
		# FIXME: we should implement a cleaner design. canvas widget into own class.
=================
44887576
count:1

		self._canvas_visu = Tkinter.Canvas(parent, width=MyGUI.CANVAS_WIDTH, height=MyGUI.CANVAS_HEIGHT, background="white")

		# FIXME: enabling scrolling: http://effbot.org/tkinterbook/canvas.htm#coordinate-systems
		# FIXME: changing size of rootwindow doesn't affect scrollbars
		# FIXME: should we scale canvas or use scrollbars when user resizes rootwindow? some PSC windows are huge...!
		# done: we should adjust "width" and "heigth" dynamically from max(max coordinates of PSC graphelements, size PSC window)
		# FIXME: we should implement a cleaner design. canvas widget into own class.
		# FIXME: implement drag and drop for setting links (while moving: drawing line. on drop: show popup with PAR_INs/PLCs)
		#       https://stackoverflow.com/questions/44887576/how-make-drag-and-drop-interface
		#       https://stackoverflow.com/questions/15466469/tkinter-drag-and-drop
		# FIXME: implement right-click "delete link"? / "show parameters" (edit fields?)
		# done: implement mouse-hover: label showing BMO instance & class under mouse
		# done: checkbox "show links" ->red=digital, green=analog (only from/to one BMO instance, or between all?)
		self._canvas_visu.grid(row=0, column=0, padx=10, pady=10, sticky='nsew')

		# show information when mouse is over a BMO instance
		# =>help from https://stackoverflow.com/questions/33121545/how-to-display-canvas-coordinates-when-hovering-cursor-over-canvas
		self._canvas_visu.tag_bind(MyGUI.BMO_EXISTS_TAG, '<Motion>', self._on_mouseover)
		self._canvas_visu.tag_bind(MyGUI.BMO_EXISTS_TAG, '<Enter>', self._on_mouseover)  # handle <Alt>+<Tab> switches between windows
=================
15466469
count:1
		self._canvas_visu = Tkinter.Canvas(parent, width=MyGUI.CANVAS_WIDTH, height=MyGUI.CANVAS_HEIGHT, background="white")

		# FIXME: enabling scrolling: http://effbot.org/tkinterbook/canvas.htm#coordinate-systems
		# FIXME: changing size of rootwindow doesn't affect scrollbars
		# FIXME: should we scale canvas or use scrollbars when user resizes rootwindow? some PSC windows are huge...!
		# done: we should adjust "width" and "heigth" dynamically from max(max coordinates of PSC graphelements, size PSC window)
		# FIXME: we should implement a cleaner design. canvas widget into own class.
		# FIXME: implement drag and drop for setting links (while moving: drawing line. on drop: show popup with PAR_INs/PLCs)
		#       https://stackoverflow.com/questions/44887576/how-make-drag-and-drop-interface
		#       https://stackoverflow.com/questions/15466469/tkinter-drag-and-drop
		# FIXME: implement right-click "delete link"? / "show parameters" (edit fields?)
		# done: implement mouse-hover: label showing BMO instance & class under mouse
		# done: checkbox "show links" ->red=digital, green=analog (only from/to one BMO instance, or between all?)
		self._canvas_visu.grid(row=0, column=0, padx=10, pady=10, sticky='nsew')

		# show information when mouse is over a BMO instance
		# =>help from https://stackoverflow.com/questions/33121545/how-to-display-canvas-coordinates-when-hovering-cursor-over-canvas
		self._canvas_visu.tag_bind(MyGUI.BMO_EXISTS_TAG, '<Motion>', self._on_mouseover)
		self._canvas_visu.tag_bind(MyGUI.BMO_EXISTS_TAG, '<Enter>', self._on_mouseover)  # handle <Alt>+<Tab> switches between windows
		self._curr_bmo_instance = ''
=================
33121545
count:1
		# FIXME: implement drag and drop for setting links (while moving: drawing line. on drop: show popup with PAR_INs/PLCs)
		#       https://stackoverflow.com/questions/44887576/how-make-drag-and-drop-interface
		#       https://stackoverflow.com/questions/15466469/tkinter-drag-and-drop
		# FIXME: implement right-click "delete link"? / "show parameters" (edit fields?)
		# done: implement mouse-hover: label showing BMO instance & class under mouse
		# done: checkbox "show links" ->red=digital, green=analog (only from/to one BMO instance, or between all?)
		self._canvas_visu.grid(row=0, column=0, padx=10, pady=10, sticky='nsew')

		# show information when mouse is over a BMO instance
		# =>help from https://stackoverflow.com/questions/33121545/how-to-display-canvas-coordinates-when-hovering-cursor-over-canvas
		self._canvas_visu.tag_bind(MyGUI.BMO_EXISTS_TAG, '<Motion>', self._on_mouseover)
		self._canvas_visu.tag_bind(MyGUI.BMO_EXISTS_TAG, '<Enter>', self._on_mouseover)  # handle <Alt>+<Tab> switches between windows
		self._curr_bmo_instance = ''

		# delete background link lines
		# =>help from https://stackoverflow.com/questions/35111894/tkinter-canvas-leave-event-isnt-trigged
		self._canvas_visu.tag_bind(MyGUI.BMO_EXISTS_TAG, '<Leave>', self._on_mouse_leave)


		self._bmo_info_label = Tkinter.Label(master=parent, text='', anchor='w')
=================
35111894
count:1
		self._canvas_visu.grid(row=0, column=0, padx=10, pady=10, sticky='nsew')

		# show information when mouse is over a BMO instance
		# =>help from https://stackoverflow.com/questions/33121545/how-to-display-canvas-coordinates-when-hovering-cursor-over-canvas
		self._canvas_visu.tag_bind(MyGUI.BMO_EXISTS_TAG, '<Motion>', self._on_mouseover)
		self._canvas_visu.tag_bind(MyGUI.BMO_EXISTS_TAG, '<Enter>', self._on_mouseover)  # handle <Alt>+<Tab> switches between windows
		self._curr_bmo_instance = ''

		# delete background link lines
		# =>help from https://stackoverflow.com/questions/35111894/tkinter-canvas-leave-event-isnt-trigged
		self._canvas_visu.tag_bind(MyGUI.BMO_EXISTS_TAG, '<Leave>', self._on_mouse_leave)


		self._bmo_info_label = Tkinter.Label(master=parent, text='', anchor='w')
		self._bmo_info_label.grid(row=1, column=0, padx=10, pady=10, sticky='ew')

		# create BMO link: drag and drop a line for visualisation
		# help from https://stackoverflow.com/questions/6740855/board-drawing-code-to-move-an-oval/6789351#6789351
		# this data is used to keep track of line being dragged
		self._drag_data = {"x": 0, "y": 0, "source_item": None}
=================
6789351
count:1
		# delete background link lines
		# =>help from https://stackoverflow.com/questions/35111894/tkinter-canvas-leave-event-isnt-trigged
		self._canvas_visu.tag_bind(MyGUI.BMO_EXISTS_TAG, '<Leave>', self._on_mouse_leave)


		self._bmo_info_label = Tkinter.Label(master=parent, text='', anchor='w')
		self._bmo_info_label.grid(row=1, column=0, padx=10, pady=10, sticky='ew')

		# create BMO link: drag and drop a line for visualisation
		# help from https://stackoverflow.com/questions/6740855/board-drawing-code-to-move-an-oval/6789351#6789351
		# this data is used to keep track of line being dragged
		self._drag_data = {"x": 0, "y": 0, "source_item": None}
		# add bindings for clicking, dragging and releasing
		self._canvas_visu.bind("<ButtonPress-1>", self._on_mouse_press)
		self._canvas_visu.bind("<ButtonRelease-1>", self._on_mouse_release)
		self._canvas_visu.bind("<B1-Motion>", self._on_mouse_b1motion)


	def _on_mouseover(self, event):
		""" update BMO information """
=================
13114953
count:1
		# add bindings for clicking, dragging and releasing
		self._canvas_visu.bind("<ButtonPress-1>", self._on_mouse_press)
		self._canvas_visu.bind("<ButtonRelease-1>", self._on_mouse_release)
		self._canvas_visu.bind("<B1-Motion>", self._on_mouse_b1motion)


	def _on_mouseover(self, event):
		""" update BMO information """
		# help from http://effbot.org/tkinterbook/canvas.htm#item-specifiers
		# and https://stackoverflow.com/questions/13114953/how-do-i-get-id-of-a-widget-that-invoke-an-event-tkinter

		canvas = event.widget
		x = canvas.canvasx(event.x)
		y = canvas.canvasy(event.y)
		x1 = x - 1
		x2 = x + 1
		y1 = y - 1
		y2 = y + 1
		instance = ''
		try:
=================
13114953
count:1
		self._drag_data["y"] = 0


	def _on_mouse_b1motion(self, event):
		'''Handle drawing line from source BMO instance'''

		if self._drag_data["source_item"]:
			# change coordinates of link line
			# help from http://effbot.org/tkinterbook/canvas.htm#patterns
			# and https://stackoverflow.com/questions/13114953/how-do-i-get-id-of-a-widget-that-invoke-an-event-tkinter
			canvas = event.widget
			canvas.coords(MyGUI.CANVAS_DND_LINK_LINE_TAG, self._drag_data["x"], self._drag_data["y"], event.x, event.y)



	def _on_mouse_leave(self, event):
		""" deleting background lines when mouse leaves BMO rectangle """
		event.widget.delete(MyGUI.CANVAS_BG_LINK_LINE_TAG)


=================
3224268
count:1
	if type(line) == str:
		# conversion byte-string -> unicode -> byte-string
		# (first encoding is source file encoding, second one is encoding of console)
		unicode_line = line.decode(ENCODING_SRC_FILE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	print(unicode_line.encode(ENCODING_STDOUT, errors='replace'))


# literal strings: these were embedded into configuration file
LIT_VERSION15 =           'v15'
LIT_VERSION16 =           'v16'
LIT_VERSION17 =           'v17'
LIT_LINEMARK =      '_linemark'
LIT_SPLIT =         '_split'
LIT_SPLIT_LISTOBJECT = '_split_listobject'
=================
10174211
count:1
	"""
	Manages YAML configuration file for mapping logical names to absolut position in PSC graphic elements
	"""
	def __init__(self, fname):
		get_encoding()
		if DEBUGGING:
			my_print(u'ParserConfig is loading configuration file "' + fname + '"')

		# help with keeping filename always relative to current module:
		# https://stackoverflow.com/questions/10174211/make-an-always-relative-to-current-module-file-path
		self._filename = os.path.join(os.path.dirname(__file__), fname)
		self._config_dict = None
		self._load_config()

	def _load_config(self):
		with open(self._filename, u'r') as ymlfile:
			self._config_dict = yaml.load(ymlfile)


	def get_available_versions(self, psc_graph_elem_str):
=================
15159854
count:1


	def is_property_obj_valid(self, obj):
		"""
		Checks correct type of property object, used for correct serialization
		(we should not check too strictly, but things could go horribly wrong when wrong objects were serialized into an existing PSC rawline...)
		"""
		# FIXME: this doesn't work as expected when objects were created under '__main__' in Parser.py...
		# <class 'Parser.PscVar_RGB'> vs. <class '__main__.PscVar_RGB'>
		# ==>here is a similar problem: http://stackoverflow.com/questions/15159854/python-namespace-main-class-not-isinstance-of-package-class
		prop_obj = Mapping.obj_dict[self._property_obj_str]
		if DEBUGGING:
			my_print(u'is_property_obj_valid: prop_obj' + repr(prop_obj))
			my_print(u'is_property_obj_valid: type(obj)=' + repr(type(obj)))

		# first try: check if it's an instance of same class or subclass (ignoring problem mentioned above)
		if isinstance(obj, prop_obj):
			return True
		else:
			# second try: compare classname as fallback (caveat: doesn't work with subclasses...)
=================
510972
count:1
		if DEBUGGING:
			my_print(u'is_property_obj_valid: prop_obj' + repr(prop_obj))
			my_print(u'is_property_obj_valid: type(obj)=' + repr(type(obj)))

		# first try: check if it's an instance of same class or subclass (ignoring problem mentioned above)
		if isinstance(obj, prop_obj):
			return True
		else:
			# second try: compare classname as fallback (caveat: doesn't work with subclasses...)
			# idea from http://stackoverflow.com/questions/510972/getting-the-class-name-of-an-instance-in-python
			# =>trial and error showed this: '__name__' and '__class__' doesn't work for both types (instances and classes)
			if DEBUGGING:
				my_print(u'type(obj).__name__: ' + str(type(obj).__name__) + u', repr(prop_obj): ' + repr(prop_obj))
			searchpattern = u'.' + type(obj).__name__ + u"'>"
			return searchpattern in repr(prop_obj)


class Mapping_split(Mapping):
	"""
	use split argument to slice PSC line
=================
3224268
count:1
		# (first encoding is source file encoding, second one is encoding of console)
		unicode_line = line.decode(ENCODING_SRC_FILE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	if not ENCODING_STDOUT:
		get_encoding()
	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	print(unicode_line.encode(ENCODING_STDOUT, errors='replace'))


class PscParser(object):
	# class variable, one instance for all PSC objects
	cfg = None

	@classmethod
	def load_config(cls, filename=PARSERCONFIGFILE):
		cls.cfg = ParserConfig.ParserConfig(filename)
=================
8009882
count:1


	def parse_file(self):
		"""
		Separation line-by-line into graphic objects "PSC window" and every "PSC element",
		handing all sourcecode lines to the fresh created objects
		"""
		# reading textfile: example from
		# https://docs.python.org/2/tutorial/inputoutput.html#methods-of-file-objects
		# http://stackoverflow.com/questions/8009882/how-to-read-large-file-line-by-line-in-python
		# http://stackoverflow.com/questions/3277503/python-read-file-line-by-line-into-array
		with codecs.open(self._filename, encoding=ENCODING_FILES_PSC, mode=u'r') as f:
			curr_elem = collections.OrderedDict()
			curr_window = collections.OrderedDict()
			for line in f:
				curr_line = line.rstrip(u'\n\r')
				property_str = curr_line.split(u';')[0]
				if property_str in PscWindow.LINE_PREFIXES:
					# found window definition
					curr_window[property_str] = curr_line
=================
3277503
count:1

	def parse_file(self):
		"""
		Separation line-by-line into graphic objects "PSC window" and every "PSC element",
		handing all sourcecode lines to the fresh created objects
		"""
		# reading textfile: example from
		# https://docs.python.org/2/tutorial/inputoutput.html#methods-of-file-objects
		# http://stackoverflow.com/questions/8009882/how-to-read-large-file-line-by-line-in-python
		# http://stackoverflow.com/questions/3277503/python-read-file-line-by-line-into-array
		with codecs.open(self._filename, encoding=ENCODING_FILES_PSC, mode=u'r') as f:
			curr_elem = collections.OrderedDict()
			curr_window = collections.OrderedDict()
			for line in f:
				curr_line = line.rstrip(u'\n\r')
				property_str = curr_line.split(u';')[0]
				if property_str in PscWindow.LINE_PREFIXES:
					# found window definition
					curr_window[property_str] = curr_line
				else:
=================
390250
count:1
						self._lines_dict[curr_mapping_obj.linemark] = new_raw_line
						if DEBUGGING:
							my_print(u'\tnew_raw_line=' + repr(new_raw_line))

						# test: read same value again
						my_prop = curr_mapping_obj.get_property_obj(new_raw_line)
						if DEBUGGING:
							my_print(u'\tmy_prop=' + repr(my_prop) + u' , type(my_prop)=' + repr(type(my_prop)))
						# FIXME: a cleaner way to really compare two objects would be overriding further internal methods:
						# http://stackoverflow.com/questions/390250/elegant-ways-to-support-equivalence-equality-in-python-classes
						assert repr(new_val) == repr(my_prop), u'ERROR: storing and reloading property failed! new_val=' + repr(new_val) + u', my_prop=' + repr(my_prop)



	def get_properties_list(self):
		"""
		Get a list of all available properties of this PSC graphic element
		"""
		return self._properties_mapping_dict.keys()

=================
3224268
count:1
		# (first encoding is source file encoding, second one is encoding of console)
		unicode_line = line.decode(ENCODING_SRC_FILE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	if not ENCODING_STDOUT:
		get_encoding()
	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	print(unicode_line.encode(ENCODING_STDOUT, errors='replace'))


class PSC_Input_Element(object):
	"""
	drawing informations of one PSC input element
	"""
	COLORS_LIST = ["red", "blue", "green", "yellow", "orange"]
	def __init__(self, rectangle_obj, draw_order):
		self.rectangle_obj = rectangle_obj
=================
3962247
count:1

		self._frame_formular.pack(fill=Tkconstants.BOTH, padx=5, pady=5)
		#for right in rights_list:


	def _buildCanvasVisu(self, parent):
		if self._canvas_visu:
			# widget already exists... =>delete it for redrawing
			# updating information ->first delete the widget, then redraw it
			# http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
			self._canvas_visu.grid_forget()
			self._canvas_visu.destroy()
		self._canvas_visu = Tkinter.Canvas(parent, width=1280, height=1024, background="white")
		self._canvas_visu.grid(row=0, column=1, padx=5)


	def _buildSideview(self, parent, nofelements=0):
		if self._canvas_sideview:
			# widget already exists... =>delete it for redrawing
			# updating information ->first delete the widget, then redraw it
=================
3962247
count:1
			self._canvas_visu.destroy()
		self._canvas_visu = Tkinter.Canvas(parent, width=1280, height=1024, background="white")
		self._canvas_visu.grid(row=0, column=1, padx=5)


	def _buildSideview(self, parent, nofelements=0):
		if self._canvas_sideview:
			# widget already exists... =>delete it for redrawing
			# updating information ->first delete the widget, then redraw it
			# http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
			self._canvas_sideview.grid_forget()
			self._canvas_sideview.destroy()

		self._canvas_sideview = Tkinter.Canvas(parent, width=max(nofelements * myGUI.SIDEVIEW_DEPTH, 50), height=1024, background="white")
		self._canvas_sideview.grid(row=0, column=0, padx=5)


	def _cb_button_selectfile(self):
		# file browser
		# (example from http://tkinter.unpythonic.net/wiki/tkFileDialog )
=================
3224268
count:1
		# (first encoding is source file encoding, second one is encoding of console)
		unicode_line = line.decode(ENCODING_SRC_FILE)
	else:
		# assuming unicode-string (we don't care about other situations, when called with wrong datatype then print() will throw exception)
		unicode_line = line

	if not ENCODING_STDOUT:
		get_encoding()
	# when a character isn't available in given ENCODING, then it gets replaced by "?". Other options:
	# http://stackoverflow.com/questions/3224268/python-unicode-encode-error
	print(unicode_line.encode(ENCODING_STDOUT, errors='replace'))





def main(argv=None):
	# FIXME: implement a cleaner way for keeping ONE instance of ParserConfig in whole program...
	Parser.PscParser.load_config(Parser.PARSERCONFIGFILE)

=================
390250
count:1
	'''
	def set_value(self, new_val):
		self._value = new_val

	def get_value(self):
		return self._value


	# allow comparison of PscVariable objects with their python counterpart
	# based on example from http://stackoverflow.com/questions/390250/elegant-ways-to-support-equivalence-equality-in-python-classes
	def __eq__(self, other):
		"""Override the default Equals behavior"""
		if isinstance(other, self.__class__):
			return self.__dict__ == other.__dict__
		return NotImplemented

	def __ne__(self, other):
		"""Define a non-equality test"""
		if isinstance(other, self.__class__):
			return not self.__eq__(other)
=================
455612
count:1
	'''
	Float representation in PSC files
	=>it has always 6 decimals
	'''
	def __init__(self, float_val=u'0.000000'):
		self._value = float(float_val)

	def get_serialized(self):
		# return format used in PSC file
		# help from http://stackoverflow.com/questions/455612/limiting-floats-to-two-decimal-points
		return u'{0:.2f}'.format(self._value)


class PscVar_bool(PscVariable):
	'''
	Boolean representation in PSC files
	=>0 means False, 1 means True
	'''
	def __init__(self, bool_as_str=u'0'):
		self.set_value(bool_as_str)
=================
390250
count:1

	def get_value(self):
		return self.x, self.y

	def __repr__(self):
		return u'(' + unicode(self.x) + u',' + unicode(self.y) + u')'


	# allow comparison of PscVar_point objects
	# example from http://stackoverflow.com/questions/390250/elegant-ways-to-support-equivalence-equality-in-python-classes
	def __eq__(self, other):
		"""Override the default Equals behavior"""
		if isinstance(other, self.__class__):
			return self.__dict__ == other.__dict__
		return NotImplemented

	def __ne__(self, other):
		"""Define a non-equality test"""
		if isinstance(other, self.__class__):
			return not self.__eq__(other)
=================
390250
count:1
		# (tuple of four integers)
		my_tuple = (self._point1.x, self._point1.y, self._point2.x, self._point2.y)
		return map(unicode, my_tuple)

	def __repr__(self):
		return u'[' + repr(self._point1) + u',' + repr(self._point2) + u']'


	# allow comparison of PscVar_rectangle objects
	# example from http://stackoverflow.com/questions/390250/elegant-ways-to-support-equivalence-equality-in-python-classes
	def __eq__(self, other):
		"""Override the default Equals behavior"""
		if isinstance(other, self.__class__):
			## comparing only internal int-values is enough (don't care for any other attributes)
			return self.get_coordinates() == other.get_coordinates()
		# return self.__dict__ == other.__dict__
		return NotImplemented


	def __ne__(self, other):
=================
4647050
count:1
		"""
		Used in initialisations as dynamic foreground-color mappings between values of one DMS-keys and their RGB-color counterpart
		=>excepted: list of all value_float, rgb_int values (alternated)
		"""
		assert len(elem_list) % 2 == 0, u'PscVar_value_rgb_pairs() expects a list of all value_float / rgb_int values (alternated appearance)'
		self._pairs_list = []
		value_float = None
		rgb_int = None
		# conversion of list into list of tuples:
		# and http://stackoverflow.com/questions/4647050/collect-every-pair-of-elements-from-a-list-into-tuples-in-python
		for elem_tuple in zip(elem_list[0::2], elem_list[1::2]):
			value_float = float(elem_tuple[0])
			rgb_int = int(elem_tuple[1])
			mytuple = (value_float, PscVar_RGB(rgb_int))
			#my_print(u'constructor of PscVar_value_rgb_pairs(): mytuple=' + repr(mytuple))
			self._pairs_list.append(mytuple)

	def get_value(self):
		# return a deep-copy of internal list (avoid external corruption of this list)
		return list(self._pairs_list)
=================
390250
count:1
		# return format used in PSC file
		# (tuple of two values)
		elements_list = []
		for value_float, rgb in self._pairs_list:
			elements_list.append(u'{0:.2f}'.format(value_float))
			elements_list.append(rgb.get_serialized())
		return elements_list

	# allow comparison of PscVar_value_rgb_pairs objects
	# example from http://stackoverflow.com/questions/390250/elegant-ways-to-support-equivalence-equality-in-python-classes
	def __eq__(self, other):
		"""Override the default Equals behavior"""
		if isinstance(other, self.__class__):
			# comparing internal list with deep comparison (don't care for any other attributes)
			# =>simplification: we compare strings generated by __repr__()
			return repr(self) == repr(other)
		return NotImplemented


	def __ne__(self, other):
=================
390250
count:1

	def get_serialized(self):
		# return format used in PSC file
		return unicode(self._style_int)

	def __repr__(self):
		return self.get_serialized()

	# allow comparison of PscVar_line_style objects
	# example from http://stackoverflow.com/questions/390250/elegant-ways-to-support-equivalence-equality-in-python-classes
	def __eq__(self, other):
		"""Override the default Equals behavior"""
		if isinstance(other, self.__class__):
			## comparing only internal int-value is enough (don't care for any other attributes)
			return self._style_int == other._style_int
		# return self.__dict__ == other.__dict__
		return NotImplemented


	def __ne__(self, other):
=================
5676646
count:1

		return value_red, value_green, value_blue

	def get_int(self):
		return self._rgb_int

	def get_html(self):
		# return HTML-colorcode as string '#RRGGBB'
		# string filled to a fixed length with zeros
		# based on http://stackoverflow.com/questions/5676646/fill-out-a-python-string-with-spaces
		hex_string_parts = []
		for part in self.get_tuple():
			hex_string = hex(part).upper()[2:]
			hex_string_parts.append(hex_string.rjust(2, '0'))

		# string filled to a fixed length with zeros
		# based on http://stackoverflow.com/questions/5676646/fill-out-a-python-string-with-spaces
		return u'#' + u''.join(hex_string_parts)

	def get_serialized(self):
=================
5676646
count:1
		# return HTML-colorcode as string '#RRGGBB'
		# string filled to a fixed length with zeros
		# based on http://stackoverflow.com/questions/5676646/fill-out-a-python-string-with-spaces
		hex_string_parts = []
		for part in self.get_tuple():
			hex_string = hex(part).upper()[2:]
			hex_string_parts.append(hex_string.rjust(2, '0'))

		# string filled to a fixed length with zeros
		# based on http://stackoverflow.com/questions/5676646/fill-out-a-python-string-with-spaces
		return u'#' + u''.join(hex_string_parts)

	def get_serialized(self):
		# return format used in PSC file
		return unicode(self._rgb_int)

	def __repr__(self):
		val_r, val_g, val_b = self.get_tuple()
		return u'PscVar_RGB(' + u','.join([unicode(val_r), unicode(val_g), unicode(val_b)]) + u')'

=================
390250
count:1
	def get_serialized(self):
		# return format used in PSC file
		return unicode(self._rgb_int)

	def __repr__(self):
		val_r, val_g, val_b = self.get_tuple()
		return u'PscVar_RGB(' + u','.join([unicode(val_r), unicode(val_g), unicode(val_b)]) + u')'

	# allow comparison of PscVar_RGB objects
	# example from http://stackoverflow.com/questions/390250/elegant-ways-to-support-equivalence-equality-in-python-classes
	def __eq__(self, other):
		"""Override the default Equals behavior"""
		if isinstance(other, self.__class__):
			## comparing only internal RGB-value is enough (don't care for any other attributes)
			return self._rgb_int == other._rgb_int
			#return self.__dict__ == other.__dict__
		return NotImplemented

	def __ne__(self, other):
		"""Define a non-equality test"""
=================
19775685
count:1





class _Mydict(collections.Mapping):
	""" dictionary-like superclass with attribute access """

	# inherit from abstract class "Mapping" for getting dictionary-interface
	# https://stackoverflow.com/questions/19775685/how-to-correctly-implement-the-mapping-protocol-in-python
	# https://docs.python.org/2.7/library/collections.html#collections.MutableMapping
	# (then the options are similar to Tkinter widgets: http://effbot.org/tkinterbook/tkinter-widget-configuration.htm )

	def __init__(self, **kwargs):
		self._values_dict = {}

	def __getitem__(self, key):
		return self._values_dict[key]

	def __iter__(self):
=================
2405590
count:1
	def __iter__(self):
		return iter(self._values_dict)

	def __len__(self):
		return len(self._values_dict)

	def __getattr__(self, name):
		# get's called when attribute isn't found
		# =>convenient way for retrieving element from dictionary!
		# https://stackoverflow.com/questions/2405590/how-do-i-override-getattr-in-python-without-breaking-the-default-behavior
		try:
			return self._values_dict[name]
		except KeyError:
			# Default behaviour
			raise AttributeError

	def __repr__(self):
		""" developer representation of this object """
		return u'_Mydict(' + repr(self._values_dict) + u')'

=================
5624912
count:1



class _CmdGet(object):
	""" one unique "get" request, parsed from **kwargs """

	CMD_TYPE = u'get'

	def __init__(self, msghandler, path, **kwargs):
		# parsing of kwargs: help from https://stackoverflow.com/questions/5624912/kwargs-parsing-best-practice
		# deleting keys from kwargs while iteration over it
		# https://stackoverflow.com/questions/5384914/how-to-delete-items-from-a-dictionary-while-iterating-over-it
		self.path = u'' + path
		self.query = None
		self.histData = None
		self.changelog = None
		self.showExtInfos = None
		self.tag = msghandler.prepare_tag()

		for key in kwargs.keys():
=================
5384914
count:1

class _CmdGet(object):
	""" one unique "get" request, parsed from **kwargs """

	CMD_TYPE = u'get'

	def __init__(self, msghandler, path, **kwargs):
		# parsing of kwargs: help from https://stackoverflow.com/questions/5624912/kwargs-parsing-best-practice
		# deleting keys from kwargs while iteration over it
		# https://stackoverflow.com/questions/5384914/how-to-delete-items-from-a-dictionary-while-iterating-over-it
		self.path = u'' + path
		self.query = None
		self.histData = None
		self.changelog = None
		self.showExtInfos = None
		self.tag = msghandler.prepare_tag()

		for key in kwargs.keys():
			if key == u'showExtInfos':
				showExtInfos = kwargs.pop(key)
=================
5624912
count:1
		return _CmdGet.CMD_TYPE


class _CmdSet(object):
	""" one unique "Set" request, parsed from **kwargs """

	CMD_TYPE = u'set'

	def __init__(self, msghandler, path, value, **kwargs):
		# parsing of kwargs: help from https://stackoverflow.com/questions/5624912/kwargs-parsing-best-practice
		# =>since all fields in "set" object and all it's subobjects are unique, we could handle them in the same loop
		self.path = u'' + path
		self.value = value
		self.request = {}
		self.tag = msghandler.prepare_tag()

		for key in kwargs.keys():
			# parsing request options
			val = None
			if key == u'create':
=================
5624912
count:1



class _CmdSub(object):
	""" one unique "subscribe" request, parsed from **kwargs """

	CMD_TYPE = u'subscribe'

	def __init__(self, msghandler, path, **kwargs):
		# parsing of kwargs: help from https://stackoverflow.com/questions/5624912/kwargs-parsing-best-practice
		# =>since all fields in "sub" object and all it's subobjects are unique, we could handle them in the same loop
		self.path = u'' + path
		self.query = None
		curr_tag = None
		if u'tag' in kwargs.keys():
			# caller wants to reuse existing tag =>DMS will update subscription when path and tag match a current subscription
			curr_tag = kwargs.pop(u'tag')
		self.tag = msghandler.prepare_tag(curr_tag=curr_tag)


=================
5624912
count:1



class _CmdChangelogRead(object):
	""" one unique "changelogRead" request, parsed from **kwargs """

	CMD_TYPE = u'changelogRead'

	def __init__(self, msghandler, group, start, **kwargs):
		# parsing of kwargs: help from https://stackoverflow.com/questions/5624912/kwargs-parsing-best-practice
		# =>since all fields in "changelogRead" object and all it's subobjects are unique, we could handle them in the same loop
		self.group = u'' + group

		# convert datetime.datetime object to ISO 8601 format
		try:
			self.start = u'' + start.isoformat()
		except AttributeError:
			# now we assume it's already a string
			self.start = u'' + start

=================
969285
count:1
	def __init__(self, histobj_list):
		super(HistData_detail, self).__init__()
		# internal storage: list of dictionarys

		for histobj in histobj_list:
			curr_dict = {}
			for field in HistData_detail._fields:
				if field == u'stamp':
					# timestamps are ISO 8601 formatted (or "null" after DMS restart or on nodes with type "none")
					# https://stackoverflow.com/questions/969285/how-do-i-translate-a-iso-8601-datetime-string-into-a-python-datetime-object
					try:
						curr_dict[field] = dateutil.parser.parse(histobj[field])
					except ValueError:
						# something went wrong, conversion into a datetime.datetime() object isn't possible
						logger.exception('constructor of HistData_detail(): ERROR: timestamp in current response could not get parsed as valid datetime.datetime() object!')
						curr_dict[field] = None
				else:
					# other fields are number or string, currently no special treatment
					try:
						curr_dict[field] = histobj[field]
=================
969285
count:1
		super(HistData_compact, self).__init__()
		# internal storage: list of tuples (timestamp, value)
		self._values_list = []

		for histobj in histobj_list:
			# info: dictionary items() method returns a list of (key, value) tuples...
			stamp_str, value = histobj.items()[0]

			# timestamps are ISO 8601 formatted (or "null" after DMS restart or on nodes with type "none")
			# https://stackoverflow.com/questions/969285/how-do-i-translate-a-iso-8601-datetime-string-into-a-python-datetime-object
			try:
				stamp = dateutil.parser.parse(stamp_str)
			except ValueError:
				# something went wrong, conversion into a datetime.datetime() object isn't possible
				logger.exception('constructor of HistData_compact(): ERROR: timestamp in current response could not get parsed as valid datetime.datetime() object!')
				stamp = None

			curr_tuple = (stamp, value)
			self._values_list.append(curr_tuple)

=================
969285
count:1
	def __init__(self, obj_list):
		super(Changelog_Protocol, self).__init__()
		# internal storage: list of dictionarys

		for obj in obj_list:
			curr_dict = {}
			for field in Changelog_Protocol._fields:
				if field == u'stamp':
					# timestamps are ISO 8601 formatted (or "null" after DMS restart or on nodes with type "none")
					# https://stackoverflow.com/questions/969285/how-do-i-translate-a-iso-8601-datetime-string-into-a-python-datetime-object
					try:
						curr_dict[field] = dateutil.parser.parse(obj[field])
					except ValueError:
						# something went wrong, conversion into a datetime.datetime() object isn't possible
						logger.exception('constructor of Changelog_Protocol(): ERROR: timestamp in current response could not get parsed as valid datetime.datetime() object!')
						curr_dict[field] = None
				elif field == u'path':
					# path is optional when only one datapoint was requested
					if u'path' in obj:
						curr_dict[field] = obj[field]
=================
19775685
count:1
		return u'Changelog_Alarm(' + repr(self._values_list) + u')'




class _Response(object):
	""" all common response fields """

	# inherit from abstract class "Mapping" for getting dictionary-interface
	# https://stackoverflow.com/questions/19775685/how-to-correctly-implement-the-mapping-protocol-in-python
	# https://docs.python.org/2.7/library/collections.html#collections.MutableMapping
	# (then the options are similar to Tkinter widgets: http://effbot.org/tkinterbook/tkinter-widget-configuration.htm )

	# string constants
	CODE_OK = u'ok'
	CODE_NOPERM = u'no perm'
	CODE_NOTFOUND = u'not found'
	CODE_ERROR = u'error'

	# these fields are common for all responses
=================
969285
count:1
	           u'tag')

	def __init__(self, **kwargs):
		_Mydict.__init__(self, **kwargs)

		for field in RespGet._fields:
			try:
				if field == u'stamp':
					# timestamps are ISO 8601 formatted (or "null" after DMS restart or on nodes with type "none")
					# https://stackoverflow.com/questions/969285/how-do-i-translate-a-iso-8601-datetime-string-into-a-python-datetime-object
					try:
						self._values_dict[field] = dateutil.parser.parse(kwargs.pop(field))
					except:
						self._values_dict[field] = None
				elif field == u'extInfos':
					extInfos_dict = kwargs.pop(field)
					self._values_dict[field] = ExtInfos(**extInfos_dict)
				elif field == u'histData':
					histData_list = kwargs.pop(field)
					if histData_list:
=================
969285
count:1
	           u'tag')

	def __init__(self, **kwargs):
		_Mydict.__init__(self, **kwargs)

		for field in RespSet._fields:
			try:
				if field == u'stamp':
					# timestamps are ISO 8601 formatted (or "null" after DMS restart or on nodes with type "none")
					# https://stackoverflow.com/questions/969285/how-do-i-translate-a-iso-8601-datetime-string-into-a-python-datetime-object
					try:
						self._values_dict[field] = dateutil.parser.parse(kwargs.pop(field))
					except:
						self._values_dict[field] = None
				else:
					# default: no special treatment
					self._values_dict[field] = kwargs.pop(field)
			except KeyError:
				# argument was not in response =>setting default value
				logger.debug('RespSet() constructor: field "' + field + '" is not in response.')
=================
969285
count:1
	           u'tag')

	def __init__(self, **kwargs):
		_Mydict.__init__(self, **kwargs)

		for field in RespSub._fields:
			try:
				if field == u'stamp':
					# timestamps are ISO 8601 formatted (or "null" after DMS restart or on nodes with type "none")
					# https://stackoverflow.com/questions/969285/how-do-i-translate-a-iso-8601-datetime-string-into-a-python-datetime-object
					try:
						self._values_dict[field] = dateutil.parser.parse(kwargs.pop(field))
					except:
						self._values_dict[field] = None
				elif field == u'query':
					# handle optional "query" object
					query_dict = kwargs.pop(field)
					try:
						self._values_dict[field] = Query(**query_dict)
					except ValueError as ex:
=================
969285
count:1
	           u'tag')

	def __init__(self, **kwargs):
		_Mydict.__init__(self, **kwargs)

		for field in RespUnsub._fields:
			try:
				if field == u'stamp':
					# timestamps are ISO 8601 formatted (or "null" after DMS restart or on nodes with type "none")
					# https://stackoverflow.com/questions/969285/how-do-i-translate-a-iso-8601-datetime-string-into-a-python-datetime-object
					try:
						self._values_dict[field] = dateutil.parser.parse(kwargs.pop(field))
					except:
						self._values_dict[field] = None
				elif field == u'query':
					# handle optional "query" object
					query_dict = kwargs.pop(field)
					try:
						self._values_dict[field] = Query(**query_dict)
					except ValueError as ex:
=================
969285
count:1
	           u'tag')

	def __init__(self, **kwargs):
		super(DMSEvent, self).__init__()

		for field in DMSEvent._fields:
			try:
				if field == u'stamp':
					# timestamps are ISO 8601 formatted (or "null" after DMS restart or on nodes with type "none")
					# https://stackoverflow.com/questions/969285/how-do-i-translate-a-iso-8601-datetime-string-into-a-python-datetime-object
					try:
						self._values_dict[field] = dateutil.parser.parse(kwargs[field])
					except:
						self._values_dict[field] = None
				elif field == u'code':
					# attention: difference to other commands: "code" in DMS-events means trigger of this event
					self._values_dict[field] = u'' + kwargs[field]
				else:
					# default: no special treatment
					self._values_dict[field] = kwargs[field]
=================
8487673
count:1
		self._whois_str = whois_str
		self._user_str = user_str

		# Queue for firing Subscription-EventSystem objects
		self._subES_queue = subES_queue

		# thread safety for shared dictionaries =>we want to be on the safe side!
		# (documentation: https://docs.python.org/2/library/threading.html#lock-objects )
		# http://effbot.org/pyfaq/what-kinds-of-global-value-mutation-are-thread-safe.htm
		# https://stackoverflow.com/questions/8487673/how-would-you-make-this-python-dictionary-thread-safe

		# dict for pending responses (key: cmd-tag, value: list of CmdResponse-objects)
		# =>None means request is sent, but answer is not yet here
		self._pending_response_dict = {}
		self._pending_response_lock = threading.Lock()


		# dict for DMS-events (key: tag, value: SubscriptionES-objects)
		# =>DMS-event will fire our python event
		# (our chosen tag for DMS subscription command is unique across all events related to this subscription)
=================
5191830
count:1


					# storing collected list for other thread
					logger.debug('message handler: storing of response for other thread...')
					with self._pending_response_lock:
						self._pending_response_dict[curr_tag].response_list = self._curr_response.resp_list
						# inform other thread
						self._pending_response_dict[curr_tag].isAvailable.set()
		except Exception as ex:
			# help from https://stackoverflow.com/questions/5191830/best-way-to-log-a-python-exception
			logger.exception("exception occurred in _MessageHandler.handle()")


		if u'event' in payload_dict:
			# handling DMS-events
			for event in payload_dict[u'event']:
				# trigger Python event
				try:
					event_obj = DMSEvent(**event)
					with self._subscriptionES_objs_lock:
=================
5082753
count:1
import decimal
import dms.datapoint
import misc.visi_binaries

DEBUGGING = True
ENCODING = 'windows-1252'


class DMS_STRING(ctypes.Structure):
	# loosely based on http://stackoverflow.com/questions/5082753/how-do-i-build-a-python-string-from-a-ctype-struct
	# http://stackoverflow.com/questions/10006610/sending-stucture-containing-mutable-string-to-c-from-python-thru-ctypes/10007443#10007443
	# but ignoring handling of strings containing NULL characters inside...

	MAXLENGTH = 81  #  (max. string length in DMS: 80 characters + NULL character)

	def __init__(self, bytestring='\x00'):
		ctypes.Structure.__init__(self)
		size = len(bytestring)
		if size > DMS_STRING.MAXLENGTH:
			raise ValueError("bytestring %s too large for buffer", repr(bytestring))
=================
10007443
count:1
import dms.datapoint
import misc.visi_binaries

DEBUGGING = True
ENCODING = 'windows-1252'


class DMS_STRING(ctypes.Structure):
	# loosely based on http://stackoverflow.com/questions/5082753/how-do-i-build-a-python-string-from-a-ctype-struct
	# http://stackoverflow.com/questions/10006610/sending-stucture-containing-mutable-string-to-c-from-python-thru-ctypes/10007443#10007443
	# but ignoring handling of strings containing NULL characters inside...

	MAXLENGTH = 81  #  (max. string length in DMS: 80 characters + NULL character)

	def __init__(self, bytestring='\x00'):
		ctypes.Structure.__init__(self)
		size = len(bytestring)
		if size > DMS_STRING.MAXLENGTH:
			raise ValueError("bytestring %s too large for buffer", repr(bytestring))
		ctypes.memmove(self.buffer, bytestring, size)
=================
31078728
count:1

hide internal asynchronous details of twisted:
https://crochet.readthedocs.io/en/1.7.0/using.html#hide-twisted-and-crochet

ideas:
-reconnection when connection is lost:
https://github.com/crossbario/autobahn-python/tree/master/examples/twisted/websocket/reconnecting

example for clean connection establishment and closing
https://stackoverflow.com/questions/31078728/exiting-python-program-after-closing-connection-in-twisted


This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
"""


=================
5624912
count:2
		sendfunc.sendMessage(req_str)


class _DMSCmdGet(object):
	""" one unique "get" request, parsed from **kwargs """

	CMD_TYPE = u'get'

	def __init__(self, dmsclient, path, **kwargs):
		# parsing of kwargs: help from https://stackoverflow.com/questions/5624912/kwargs-parsing-best-practice
		# =>since all fields in "get" object and all it's subobjects are unique, we could handle them in the same loop
		self.dmsclient = dmsclient
		self.path = u'' + path
		self.query = {}
		self.histData = {}
		self.showExtInfos = None
		self.tag, self._deferred = dmsclient.generate_tag()

		for key in kwargs:
			# parsing "query" object
=================
3249524
count:1
	import sys

	#log.startLogging(sys.stdout)

	# example for logging on https://crochet.readthedocs.io/en/stable/introduction.html
	logging.basicConfig(stream=sys.stderr, level=logging.DEBUG)
	myClient = DMSClient(u'test', u'user', dms_host_str='192.168.10.181')
	print('\n=>WebSocket connection runs now in background...')
	for x in range(3):
		# appending string to current line: https://stackoverflow.com/questions/3249524/print-in-one-line-dynamically
		print '.',
		time.sleep(1)
	print('\nTesting creation of Request command:')
	print('"get":')
	response = myClient.dp_get(path="System:Time")
	print(repr(response))
=================
21025959
count:1
	"""
	String (max. MAX_NAME characters)
	"""
	def __init__(self, value):
		Dp.__init__(self)
		self.value = str(value)


class Dms_dp_Factory(object):
	# example of "factory" pattern: http://stackoverflow.com/questions/21025959/factory-design-pattern
	dp_types_dict = { 'NONE':   Dp_NONE,
					'BIT':	Dp_BIT,
					'BYS':	Dp_BYS,
					'WOS':	Dp_WOS,
					'DWS':	Dp_DWS,
					'BYU':	Dp_BYU,
					'WOU':	Dp_WOU,
					'DWU':	Dp_DWU,
					'FLT':	Dp_FLT,
					'STR':	Dp_STR,
=================
31078728
count:1
handling of JSON messages like a database:
http://tinydb.readthedocs.io/en/latest/


ideas:
-reconnection when connection is lost:
https://github.com/crossbario/autobahn-python/tree/master/examples/twisted/websocket/reconnecting

example for clean connection establishment and closing
https://stackoverflow.com/questions/31078728/exiting-python-program-after-closing-connection-in-twisted


This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
"""


=================
6526923
count:1

			print('TinyDB contains now: ' + repr(db.all()))

			#Dp = Query()
			#for attr in ["path", "code", "type", "value", "stamp", "hasChild"]:
			#print("path:\t" + str(db.search(where('path'))))


		# stopping twisted reactor loop after this message...
		# idea from https://stackoverflow.com/questions/6526923/stop-twisted-reactor-on-a-condition
		reactor.callFromThread(reactor.stop)




if __name__ == '__main__':

	import sys

	#log.startLogging(sys.stdout)
=================
231855
count:1
     "metadata": {},
     "outputs": [],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Very nice explanation of the `yield` keyword is available at\n",
      "http://stackoverflow.com/a/231855/4205267.\n",
      "Basically, anim returns a \"generator\", a function that will act like a list that can only be traversed once (conceptually a queue).\n",
      "What happens in practice is that the `while` loop is executed once for each frame, and that's what we care about."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "initial_condition = np.zeros(nparticles*6, dtype = np.float)\n",
      "initial_condition[3*nparticles:] = np.random.randn(nparticles*3)\n",
=================
616645
count:1
  implementing write(), close(), flush() methods.

So:

- redirect plain Python stderr/stdout
- handle subprocess stuff 

See

- https://stackoverflow.com/questions/616645/how-do-i-duplicate-sys-stdout-to-a-log-file-in-python
- https://stackoverflow.com/questions/24931/how-to-capture-python-interpreters-and-or-cmd-exes-output-from-a-python-script
- https://www.python.org/dev/peps/pep-0343/

- https://stackoverflow.com/questions/4675728/redirect-stdout-to-a-file-in-python
- https://eli.thegreenplace.net/2015/redirecting-all-kinds-of-stdout-in-python/ 

- https://stackoverflow.com/questions/2996887/how-to-replicate-tee-behavior-in-python-when-using-subprocess

- https://stackoverflow.com/questions/4984428/python-subprocess-get-childrens-output-to-file-and-terminal/4985080#4985080

=================
24931
count:1

So:

- redirect plain Python stderr/stdout
- handle subprocess stuff 

See

- https://stackoverflow.com/questions/616645/how-do-i-duplicate-sys-stdout-to-a-log-file-in-python
- https://stackoverflow.com/questions/24931/how-to-capture-python-interpreters-and-or-cmd-exes-output-from-a-python-script
- https://www.python.org/dev/peps/pep-0343/

- https://stackoverflow.com/questions/4675728/redirect-stdout-to-a-file-in-python
- https://eli.thegreenplace.net/2015/redirecting-all-kinds-of-stdout-in-python/ 

- https://stackoverflow.com/questions/2996887/how-to-replicate-tee-behavior-in-python-when-using-subprocess

- https://stackoverflow.com/questions/4984428/python-subprocess-get-childrens-output-to-file-and-terminal/4985080#4985080

"""  # noqa
=================
4675728
count:1
- redirect plain Python stderr/stdout
- handle subprocess stuff 

See

- https://stackoverflow.com/questions/616645/how-do-i-duplicate-sys-stdout-to-a-log-file-in-python
- https://stackoverflow.com/questions/24931/how-to-capture-python-interpreters-and-or-cmd-exes-output-from-a-python-script
- https://www.python.org/dev/peps/pep-0343/

- https://stackoverflow.com/questions/4675728/redirect-stdout-to-a-file-in-python
- https://eli.thegreenplace.net/2015/redirecting-all-kinds-of-stdout-in-python/ 

- https://stackoverflow.com/questions/2996887/how-to-replicate-tee-behavior-in-python-when-using-subprocess

- https://stackoverflow.com/questions/4984428/python-subprocess-get-childrens-output-to-file-and-terminal/4985080#4985080

"""  # noqa

from contextlib import contextmanager
from io import TextIOWrapper
=================
2996887
count:1
See

- https://stackoverflow.com/questions/616645/how-do-i-duplicate-sys-stdout-to-a-log-file-in-python
- https://stackoverflow.com/questions/24931/how-to-capture-python-interpreters-and-or-cmd-exes-output-from-a-python-script
- https://www.python.org/dev/peps/pep-0343/

- https://stackoverflow.com/questions/4675728/redirect-stdout-to-a-file-in-python
- https://eli.thegreenplace.net/2015/redirecting-all-kinds-of-stdout-in-python/ 

- https://stackoverflow.com/questions/2996887/how-to-replicate-tee-behavior-in-python-when-using-subprocess

- https://stackoverflow.com/questions/4984428/python-subprocess-get-childrens-output-to-file-and-terminal/4985080#4985080

"""  # noqa

from contextlib import contextmanager
from io import TextIOWrapper
import logging
import os
from subprocess import PIPE, Popen
=================
4985080
count:1
- https://stackoverflow.com/questions/616645/how-do-i-duplicate-sys-stdout-to-a-log-file-in-python
- https://stackoverflow.com/questions/24931/how-to-capture-python-interpreters-and-or-cmd-exes-output-from-a-python-script
- https://www.python.org/dev/peps/pep-0343/

- https://stackoverflow.com/questions/4675728/redirect-stdout-to-a-file-in-python
- https://eli.thegreenplace.net/2015/redirecting-all-kinds-of-stdout-in-python/ 

- https://stackoverflow.com/questions/2996887/how-to-replicate-tee-behavior-in-python-when-using-subprocess

- https://stackoverflow.com/questions/4984428/python-subprocess-get-childrens-output-to-file-and-terminal/4985080#4985080

"""  # noqa

from contextlib import contextmanager
from io import TextIOWrapper
import logging
import os
from subprocess import PIPE, Popen
import sys
from threading import Thread
=================
4984428
count:1
    r"""
    Print the file-like object ``infile`` to the file-like object(s) ``files``
    in a separate thread.
    
    Starts and returns that thread.
    
    The type (text, binary) must MATCH across all files.

    From 
    https://stackoverflow.com/questions/4984428/python-subprocess-get-childrens-output-to-file-and-terminal

    A note on text versus binary IO:

    TEXT files include:
    
    - files opened in text mode (``"r"``, ``"rt"``, ``"w"``, ``"wt"``)
    - ``sys.stdin``, ``sys.stdout``
    - ``io.StringIO()``; see
      https://docs.python.org/3/glossary.html#term-text-file

=================
4984428
count:1
    """
    Runs a command and captures its output via :func:`tee` to one or more 
    destinations. The output is always captured (otherwise we would lose 
    control of the output and ability to ``tee`` it); if no destination is 
    specified, we add a null handler.

    We insist on ``TextIO`` output files to match ``sys.stdout`` (etc.).

    A variation on:
    https://stackoverflow.com/questions/4984428/python-subprocess-get-childrens-output-to-file-and-terminal

    Args:
        cmd_args: arguments for the command to run
        stdout_targets: file-like objects to write ``stdout`` to
        stderr_targets: file-like objects to write ``stderr`` to 
        encoding: encoding to apply to ``stdout`` and ``stderr``
        kwargs: additional arguments for :class:`subprocess.Popen`
        
    """  # noqa
    # Make a copy so we can append without damaging the original:
=================
27921629
count:1
    Use it like this:
    
    .. code-block:: python
    
        parser.add_argument(
            '--password', type=str, action=PasswordPromptAction,
            help="MySQL password")
     
    Modified from
    http://stackoverflow.com/questions/27921629/python-using-getpass-with-argparse 
    """  # noqa
    # noinspection PyShadowingBuiltins
    def __init__(self,
                 option_strings: List[str],
                 dest: str = None,
                 nargs: Union[int, str] = "?",  # 0 or 1
                 default: Any = None,
                 required: bool = False,
                 type: Callable[[str], Any] = None,
                 metavar: str = None,
=================
538666
count:1

        'timedelta',        # treats input as a datetime.timedelta
        's', 'seconds',
        'm', 'minutes',
        'h', 'hours',
        'd', 'days',
        'w', 'weeks'

    Modified from
    https://stackoverflow.com/questions/538666/python-format-timedelta-to-string
    """  # noqa

    # Convert tdelta to integer seconds.
    if inputtype == 'timedelta':
        remainder = int(tdelta.total_seconds())
    elif inputtype in ['s', 'seconds']:
        remainder = int(tdelta)
    elif inputtype in ['m', 'minutes']:
        remainder = int(tdelta) * 60
    elif inputtype in ['h', 'hours']:
=================
787287
count:1
    except ImportError:
        Figure = None


# =============================================================================
# Image embedding in PDFs
# =============================================================================
# xhtml2pdf (2013-04-11) supports PNG, but not SVG.
# You can convert SVG to PNG for embedding:
# http://stackoverflow.com/questions/787287
# You could make a PDF and append it, though that would (without further
# effort) lack the patient headers.

def png_img_html_from_pyplot_figure(fig: "Figure",
                                    dpi: int = 100,
                                    extra_html_class: str = None) -> str:
    """
    Converts a ``pyplot`` figure to an HTML IMG tag with encapsulated PNG.
    """
    if fig is None:
=================
3899980
count:1
                            fontsize: Union[int, float] = 12) -> None:
    """
    Sets the current font size within the ``matplotlib`` library.

    **WARNING:** not an appropriate method for multithreaded environments, as
    it writes (indirectly) to ``matplotlib`` global objects. See CamCOPS for
    alternative methods.
    """
    font = {
        # http://stackoverflow.com/questions/3899980
        # http://matplotlib.org/users/customizing.html
        'family': 'sans-serif',
        # ... serif, sans-serif, cursive, fantasy, monospace
        'style': 'normal',  # normal (roman), italic, oblique
        'variant': 'normal',  # normal, small-caps
        'weight': 'normal',
        # ... normal [=400], bold [=700], bolder [relative to current],
        # lighter [relative], 100, 200, 300, ..., 900
        'size': fontsize  # in pt (default 12)
    }
=================
7125009
count:1
        'variant': 'normal',  # normal, small-caps
        'weight': 'normal',
        # ... normal [=400], bold [=700], bolder [relative to current],
        # lighter [relative], 100, 200, 300, ..., 900
        'size': fontsize  # in pt (default 12)
    }
    # noinspection PyUnresolvedReferences
    matplotlib.rc('font', **font)
    legend = {
        # http://stackoverflow.com/questions/7125009
        'fontsize': fontsize
    }
    # noinspection PyUnresolvedReferences
=================
952914
count:1
    Converts a list of lists into a flat list.
    
    Args:
        x: list of lists 

    Returns:
        flat list
        
    As per
    http://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python

    """  # noqa
    return [item for sublist in x for item in sublist]


def unique_list(seq: Iterable[Any]) -> List[Any]:
    """
    Returns a list of all the unique elements in the input list.

    Args:
=================
480214
count:1
    Returns a list of all the unique elements in the input list.

    Args:
        seq: input list

    Returns:
        list of unique elements

    As per
    http://stackoverflow.com/questions/480214/how-do-you-remove-duplicates-from-a-list-in-whilst-preserving-order

    """  # noqa
    seen = set()
    seen_add = seen.add
    return [x for x in seq if not (x in seen or seen_add(x))]


def chunks(x: List[Any], n: int) -> Iterable[List[Any]]:
    """
    Yield successive ``n``-sized chunks from the list ``x``.
=================
8897593
count:1
        # Arbitrarily, better to have an earlier (lower) concept ID.
        return self.concept_id < other.concept_id

    def match_tuple(self, target: "AthenaConceptRow") -> Tuple[float, float]:
        """
        Returns a score reflecting our similarity to the target.

        See

        - https://stackoverflow.com/questions/8897593/similarity-between-two-text-documents
        - https://stackoverflow.com/questions/2380394/simple-implementation-of-n-gram-tf-idf-and-cosine-similarity-in-python
        - https://spacy.io/usage/vectors-similarity -- data not included
        - https://radimrehurek.com/gensim/index.html
        - https://radimrehurek.com/gensim/tut3.html
        - https://scikit-learn.org/stable/
        - http://www.nltk.org/

        BINNED. We will use human judgement.
        """  # noqa
        self_words = set(x.lower() for x in self.concept_name.split())
=================
2380394
count:1
        return self.concept_id < other.concept_id

    def match_tuple(self, target: "AthenaConceptRow") -> Tuple[float, float]:
        """
        Returns a score reflecting our similarity to the target.

        See

        - https://stackoverflow.com/questions/8897593/similarity-between-two-text-documents
        - https://stackoverflow.com/questions/2380394/simple-implementation-of-n-gram-tf-idf-and-cosine-similarity-in-python
        - https://spacy.io/usage/vectors-similarity -- data not included
        - https://radimrehurek.com/gensim/index.html
        - https://radimrehurek.com/gensim/tut3.html
        - https://scikit-learn.org/stable/
        - http://www.nltk.org/

        BINNED. We will use human judgement.
        """  # noqa
        self_words = set(x.lower() for x in self.concept_name.split())
        other_words = set(x.lower() for x in target.concept_name.split())
=================
597476
count:1

"""

from typing import Match, Optional, Pattern


# =============================================================================
# Class to store last match of compiled regex
# =============================================================================
# Based on http://stackoverflow.com/questions/597476/how-to-concisely-cascade-through-multiple-regex-statements-in-python  # noqa

class CompiledRegexMemory(object):
    """
    Class to store last match of compiled regex.
    
    Once you have called :func:`match` or :func:`search`, the attribute
    :attr:`last_match` contains the last match, and ``group(n)`` returns the
    *n*\ th group of that last match.
    
    Based on
=================
597476
count:1
class CompiledRegexMemory(object):
    """
    Class to store last match of compiled regex.
    
    Once you have called :func:`match` or :func:`search`, the attribute
    :attr:`last_match` contains the last match, and ``group(n)`` returns the
    *n*\ th group of that last match.
    
    Based on
    http://stackoverflow.com/questions/597476/how-to-concisely-cascade-through-multiple-regex-statements-in-python.
    """  # noqa
    def __init__(self) -> None:
        self.last_match = None  # type: Optional[Match]

    def match(self, compiled_regex: Pattern, text: str) -> Match:
        self.last_match = compiled_regex.match(text)
        return self.last_match

    def search(self, compiled_regex: Pattern, text: str) -> Match:
        self.last_match = compiled_regex.search(text)
=================
4832357
count:1
        )


class XmlResponse(Response):
    """
    Response class for returning XML to the user.
    """
    def __init__(self, body: str, **kwargs) -> None:
        # application/xml versus text/xml:
        # https://stackoverflow.com/questions/4832357
        super().__init__(
            content_type=MimeType.XML,
            body=body,
            **kwargs
        )


class ZipResponse(BinaryResponse):
    """
    Response class for returning a ZIP file to the user.
=================
1395151
count:1


class ZipResponse(BinaryResponse):
    """
    Response class for returning a ZIP file to the user.
    """
    def __init__(self, body: bytes, filename: str, **kwargs) -> None:
        # For ZIP, "inline" and "attachment" dispositions are equivalent, since
        # browsers don't display ZIP files inline.
        # https://stackoverflow.com/questions/1395151
        super().__init__(
            content_type=MimeType.ZIP,
            filename=filename,
            body=body,
            **kwargs
=================
5967500
count:1

from functools import partial, total_ordering
import re
from typing import Any, List, Union


# =============================================================================
# Natural sorting, e.g. for COM ports
# =============================================================================
# http://stackoverflow.com/questions/5967500/how-to-correctly-sort-a-string-with-a-number-inside  # noqa

def atoi(text: str) -> Union[int, str]:
    """
    Converts strings to integers if they're composed of digits; otherwise
    returns the strings unchanged. One way of sorting strings with numbers;
    it will mean that ``"11"`` is more than ``"2"``.
    """
    return int(text) if text.isdigit() else text


=================
5967500
count:1
    it will mean that ``"11"`` is more than ``"2"``.
    """
    return int(text) if text.isdigit() else text


def natural_keys(text: str) -> List[Union[int, str]]:
    """
    Sort key function.
    Returns text split into string/number parts, for natural sorting; as per
    http://stackoverflow.com/questions/5967500/how-to-correctly-sort-a-string-with-a-number-inside
    
    Example (as per the source above):
        
    .. code-block:: python
    
        >>> from cardinal_pythonlib.sort import natural_keys
        >>> alist=[
        ...     "something1",
        ...     "something12",
        ...     "something17",
=================
13299550
count:1
    Returns:
        The process object (which is also stored in :data:`processes`).
    """
    log.debug("{!r}", args)
    global processes
    global proc_args_list
    proc = Popen(args, stdin=stdin, stdout=stdout, stderr=stderr)
    # proc = Popen(args, stdin=None, stdout=PIPE, stderr=STDOUT)
    # proc = Popen(args, stdin=None, stdout=PIPE, stderr=PIPE)
    # Can't preserve colour: http://stackoverflow.com/questions/13299550/preserve-colored-output-from-python-os-popen  # noqa
    processes.append(proc)
    proc_args_list.append(args)
    return proc


def wait_for_processes(die_on_failure: bool = True,
                       timeout_sec: float = 1) -> None:
    """
    Wait for child processes (catalogued in :data:`processes`) to finish.

=================
16042647
count:1
    # [2] Standard WSGI as copies of standard HTTP request fields (thus,
    #     optional); http://wsgi.readthedocs.io/en/latest/definitions.html
    # [3] Also standard WSGI, but not CGI; must always be present.
    # [4] From non-standard but common HTTP request fields;
    #     https://en.wikipedia.org/wiki/List_of_HTTP_header_fields#Common_non-standard_request_fields  # noqa
    #     https://github.com/omnigroup/Apache/blob/master/httpd/modules/proxy/mod_proxy_http.c  # noqa
    # [5] Non-standard; Nginx-specific? Nonetheless, all "HTTP_" variables in
    #     WSGI should follow the HTTP request headers.
    # [6] Protocols (i.e. http versus https):
    #     https://stackoverflow.com/questions/16042647/whats-the-de-facto-standard-for-a-reverse-proxy-to-tell-the-backend-ssl-is-used  # noqa
=================
7835030
count:1
        """
        self.logger.log(self.loglevel, msg)

    def __call__(self,
                 environ: TYPE_WSGI_ENVIRON,
                 start_response: TYPE_WSGI_START_RESPONSE) \
            -> TYPE_WSGI_APP_RESULT:
        query_string = environ.get(WsgiEnvVar.QUERY_STRING, "")
        try:
            # https://stackoverflow.com/questions/7835030/obtaining-client-ip-address-from-a-wsgi-app-using-eventlet  # noqa
            # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For  # noqa
            forwarded_for = " [forwarded for {}]".format(
                environ[WsgiEnvVar.HTTP_X_FORWARDED_FOR])
        except KeyError:
            forwarded_for = ""
        request_details = (
            '{remote}{fwd}: "{method} {path}{qmark}{query} {proto}"'.format(
                remote=environ.get(WsgiEnvVar.REMOTE_ADDR, ""),
                fwd=forwarded_for,
                method=environ.get(WsgiEnvVar.REQUEST_METHOD, ""),
=================
49547
count:1
)

log = get_brace_style_log_with_null_handler(__name__)
# log.setLevel(logging.DEBUG)


# =============================================================================
# DisableClientSideCachingMiddleware
# =============================================================================
# http://stackoverflow.com/questions/49547/making-sure-a-web-page-is-not-cached-across-all-browsers  # noqa
# http://stackoverflow.com/questions/3859097/how-to-add-http-headers-in-wsgi-middleware  # noqa

def add_never_cache_headers(headers: TYPE_WSGI_RESPONSE_HEADERS) -> None:
    """
    Adds WSGI headers to say "never cache this response".
    """
    headers.append(("Cache-Control", "no-cache, no-store, must-revalidate"))  # HTTP 1.1  # noqa
    headers.append(("Pragma", "no-cache"))  # HTTP 1.0
    headers.append(("Expires", "0"))  # Proxies

=================
3859097
count:1

log = get_brace_style_log_with_null_handler(__name__)
# log.setLevel(logging.DEBUG)


# =============================================================================
# DisableClientSideCachingMiddleware
# =============================================================================
# http://stackoverflow.com/questions/49547/making-sure-a-web-page-is-not-cached-across-all-browsers  # noqa
# http://stackoverflow.com/questions/3859097/how-to-add-http-headers-in-wsgi-middleware  # noqa

def add_never_cache_headers(headers: TYPE_WSGI_RESPONSE_HEADERS) -> None:
    """
    Adds WSGI headers to say "never cache this response".
    """
    headers.append(("Cache-Control", "no-cache, no-store, must-revalidate"))  # HTTP 1.1  # noqa
    headers.append(("Pragma", "no-cache"))  # HTTP 1.0
    headers.append(("Expires", "0"))  # Proxies


=================
16042647
count:1
        #   ... SSL Proxy requested for wombat:443 but not enabled [Hint: SSLProxyEngine]
        #   ... failed to enable ssl support for 0.0.0.0:0 (httpd-UDS)
    SSLProxyEngine on
    
    <Location /camcops>
            # (c) Allow access
        Require all granted

            # (d) Tell the proxied application that we are using HTTPS:
            # ... https://stackoverflow.com/questions/16042647
            # Enable mod_headers (e.g. "sudo a2enmod headers") and:
        RequestHeader set X-Forwarded-Proto https
        RequestHeader set X-Script-Name /camcops
    </Location>

        # ---------------------------------------------------------------------
        # 2. Serve static files
        # ---------------------------------------------------------------------
        # a) offer them at the appropriate URL
        # b) provide permission
=================
2297403
count:1

        Should we be looking at HTTP_X_FORWARDED_HOST or
        HTTP_X_FORWARDED_SERVER?
        See https://github.com/omnigroup/Apache/blob/master/httpd/modules/proxy/mod_proxy_http.c  # noqa
        ... and let's follow mod_wsgi.

        -----------------------------------------------------------------------
        HTTP_HOST versus SERVER_NAME
        -----------------------------------------------------------------------
        https://stackoverflow.com/questions/2297403/what-is-the-difference-between-http-host-and-server-name-in-php  # noqa

        -----------------------------------------------------------------------
        REWRITING THE PROTOCOL
        -----------------------------------------------------------------------
        Consider how we get here. For example, we may have this sequence:
        
        .. code-block:: none

            user's web browser
            -> Apache front-end web server via HTTPS on port 443
=================
8506897
count:1
    - This is defined in HTTP/1.1; see https://www.ietf.org/rfc/rfc2616.txt.
    - The gzip format is the most broadly supported, according to
      https://en.wikipedia.org/wiki/HTTP_compression.
    - This format is defined in https://www.ietf.org/rfc/rfc1952.txt.
    - The gzip format has a header; see above and
      https://en.wikipedia.org/wiki/Gzip.
    - Python's :func:`gzip.compress` writes to a memory file internally and
      writes the header.
    - So the work in the most popular answer here is unnecessary:
      https://stackoverflow.com/questions/8506897/how-do-i-gzip-compress-a-string-in-python
    - All we need is conversion of the string to bytes (via the appropriate
      encoding) and then :func:`gzip.compress`.
    - The requestor should also set HTTP ``Accept-Encoding`` if it wants 
      compressed data back. See RFC2616 again (as above).

    Args:
        text:
            a string to compress
        encoding:
            encoding to use when converting string to bytes prior to
=================
5649407
count:1
        "X'CDE7A24B1A9DBA3148BCB7A0B9DA5BB6A424486C'"

    Original purpose and notes:

    - SPECIAL HANDLING for BLOBs: a string like ``X'01FF'`` means a hex-encoded
      BLOB. Titanium is rubbish at BLOBs, so we encode them as special string
      literals.
    - SQLite uses this notation: https://sqlite.org/lang_expr.html
    - Strip off the start and end and convert it to a byte array:
      http://stackoverflow.com/questions/5649407
    """
    if len(s) < 3 or not s.startswith("X'") or not s.endswith("'"):
        return None
    return binascii.unhexlify(s[2:-1])


# =============================================================================
# Encoding: binary as hex in 64'...' format (which is idiosyncratic!)
# =============================================================================

=================
475074
count:1
def base64_64format_decode(s: str) -> Optional[bytes]:
    """
    Reverse :func:`base64_64format_encode`.

    Original purpose and notes:

    - THIS IS ANOTHER WAY OF DOING BLOBS: base64 encoding, e.g. a string like
      ``64'cGxlYXN1cmUu'`` is a base-64-encoded BLOB (the ``64'...'`` bit is my
      representation).
    - regex from http://stackoverflow.com/questions/475074
    - better one from http://www.perlmonks.org/?node_id=775820

    """
    if len(s) < 4 or not s.startswith("64'") or not s.endswith("'"):
        return None
=================
5228158
count:1
"""

from itertools import product
from typing import Dict, Iterable


def product_dict(**kwargs: Iterable) -> Iterable[Dict]:
    """
    See
    https://stackoverflow.com/questions/5228158/cartesian-product-of-a-dictionary-of-lists.

    Takes keyword arguments, and yields dictionaries containing every
    combination of possibilities for each keyword.

    Examples:

    .. code-block:: python

        >>> list(product_dict(a=[1, 2], b=[3, 4]))
        [{'a': 1, 'b': 3}, {'a': 1, 'b': 4}, {'a': 2, 'b': 3}, {'a': 2, 'b': 4}]
=================
33019698
count:1
        2.0 -> 2

        -1.6 -> -2
        etc.

    ... or the equivalent for a certain number of decimal places.

    Note that round() implements "banker's rounding", which is never what
    we want:
    - https://stackoverflow.com/questions/33019698/how-to-properly-round-up-half-float-numbers-in-python  # noqa
    """
    if not math.isfinite(x):
        return x
    factor = pow(10, dp)
    x = x * factor
    if x >= 0:
        x = math.floor(x + 0.5)
    else:
        x = math.ceil(x - 0.5)
    x = x / factor
=================
3410976
count:1
        return math.ceil(x - 0.5)


def round_sf(x: float, n: int = 2) -> float:
    """
    Round to a certain number of significant figures.
    
    As per http://code.activestate.com/lists/python-tutor/70739/, linked to
    from
    https://stackoverflow.com/questions/3410976/how-to-round-a-number-to-significant-figures-in-python

    Args:
        x: quantity to round
        n: number of significant figures

    Returns:
        float: x, rounded to n significant figures
        
    This does proper rounding:
    
=================
33560364
count:1
# import shlex
import subprocess
import sys
from typing import List, Union


def cmdline_split(s: str, platform: Union[int, str] = 'this') -> List[str]:
    """
    As per
    https://stackoverflow.com/questions/33560364/python-windows-parsing-command-lines-with-shlex.

    Multi-platform variant of ``shlex.split()`` for command-line splitting.
    For use with ``subprocess``, for ``argv`` injection etc. Using fast REGEX.
    
    Args:
        s:
            string to split
        platform:
            - ``'this'`` = auto from current platform;
            - ``1`` = POSIX;
=================
32404
count:1

===============================================================================

**Functions to manage Windows services.**

For an example, see ``crate_anon/tools/winservice.py``

*Details*

- http://stackoverflow.com/questions/32404
- http://www.chrisumbel.com/article/windows_services_in_python
- http://code.activestate.com/recipes/551780-win-services-helper/
- http://docs.activestate.com/activepython/2.4/pywin32/PyWin32.HTML

  - http://docs.activestate.com/activepython/2.4/pywin32/modules.html
  - source: ``...venv.../Lib/site-packages/win32/lib/win32serviceutil.py``

- http://docs.activestate.com/activepython/3.3/pywin32/servicemanager.html
- http://timgolden.me.uk/pywin32-docs/contents.html

=================
34696815
count:1
        -> win32serviceutil.HandleCommandLine()
            ... fishes things out of cls._exe_name_, etc.
        -> win32serviceutil.InstallService()
            ... builds a command line
            ... by default:
            "d:\venvs\crate\lib\site-packages\win32\PythonService.exe"
        -> win32service.CreateService()
        
  - So how, in the normal situation, does PythonService.exe find our script?
  - At this point, see also http://stackoverflow.com/questions/34696815
  - Source code is: 
    https://github.com/tjguk/pywin32/blob/master/win32/src/PythonService.cpp
    
  - Starting a service directly with PrepareToHostSingle:
  
    - https://mail.python.org/pipermail/python-win32/2008-April/007299.html
    - https://mail.python.org/pipermail/python-win32/2010-May/010487.html
      
  - SUCCESS! Method is:
    
=================
7085604
count:1

but it crashed in a print statement -- Python 2 only at present (2016-05-11,
version 0.1.1). However, its process management is instructive; it uses
"multiprocessing", not "subprocess". The multiprocessing module calls Python
functions. And its docs explicitly note that terminate() leaves descendant
processes orphaned.

See in particular

- http://stackoverflow.com/questions/7085604/sending-c-to-python-subprocess-objects-on-windows
- http://stackoverflow.com/questions/140111/sending-an-arbitrary-signal-in-windows

Python bug?

- http://bugs.python.org/issue3905
- http://bugs.python.org/issue13368

Maybe a subprocess bug. Better luck with
``ctypes.windll.kernel32.GenerateConsoleCtrlEvent``.

=================
140111
count:1
but it crashed in a print statement -- Python 2 only at present (2016-05-11,
version 0.1.1). However, its process management is instructive; it uses
"multiprocessing", not "subprocess". The multiprocessing module calls Python
functions. And its docs explicitly note that terminate() leaves descendant
processes orphaned.

See in particular

- http://stackoverflow.com/questions/7085604/sending-c-to-python-subprocess-objects-on-windows
- http://stackoverflow.com/questions/140111/sending-an-arbitrary-signal-in-windows

Python bug?

- http://bugs.python.org/issue3905
- http://bugs.python.org/issue13368

Maybe a subprocess bug. Better luck with
``ctypes.windll.kernel32.GenerateConsoleCtrlEvent``.

Current method tries a variety of things under Windows:
=================
20561990
count:1
.. code-block:: none

    CTRL-C -> CTRL-BREAK -> TASKKILL /T -> TASKKILL /T /F -> kill()
    
... which are progressively less graceful in terms of child processes getting
to clean up. Still, it works (usually at one of the two TASKKILL stages).

*"The specified service is marked for deletion"*

- http://stackoverflow.com/questions/20561990

"""  # noqa

import atexit
import ctypes
import os
import platform
import subprocess
import sys
import traceback
=================
18682681
count:1
        args = [
            "taskkill",  # built in to Windows XP and higher
            "/pid", str(self.process.pid),
            "/t",  # tree kill: kill all children
        ]
        if force:
            args.append("/f")  # forcefully
        callname = " ".join(args)
        retcode = subprocess.call(args)
        # http://stackoverflow.com/questions/18682681/what-are-exit-codes-from-the-taskkill-utility  # noqa
        # noinspection PyUnresolvedReferences
        if retcode == winerror.ERROR_SUCCESS:  # 0
            self.info("Killed with " + repr(callname))
        elif retcode == winerror.ERROR_INVALID_FUNCTION:  # 1
            self.warning(
                repr(callname) +
                " failed (error code 1 = ERROR_INVALID_FUNCTION; "
                "can mean 'Access denied', or 'This process can only be "
                "terminated forcefully (with /F option)').")
        elif retcode == winerror.ERROR_WAIT_NO_CHILDREN:  # 128
=================
1230669
count:1
        return retcode

    def _kill(self) -> None:
        """
        Hard kill.
        
        - PROBLEM: originally, via ``self.process.kill()``, could leave orphans
          under Windows.
        - SOLUTION: see
          https://stackoverflow.com/questions/1230669/subprocess-deleting-child-processes-in-windows,
          which uses ``psutil``.

        """  # noqa
        self.warning("Using a recursive hard kill; will assume it worked")
        pid = self.process.pid
        gone, still_alive = kill_proc_tree(pid, including_parent=True,
                                           timeout_s=self.kill_timeout_sec)
        self.debug("Killed: {!r}".format(gone))
        self.warning("Still alive: {!r}".format(still_alive))

=================
16333054
count:1
                Windows stop event for this service (default ``1000``)
            kill_timeout_sec: how long (in seconds) will we wait for the
                subprocesses to end peacefully, before we try to kill them?

        .. todo::
            cardinal_pythonlib.winservice.WindowsService: NOT YET IMPLEMENTED:
            Windows service autorestart
        """

        # https://stackoverflow.com/questions/16333054
        def cleanup():
            self.debug("atexit function called: cleaning up")
            for pmgr_ in self.process_managers:
                pmgr_.stop()

        atexit.register(cleanup)

        # Set up process info
        self.process_managers = []  # type: List[ProcessManager]
        n = len(procdetails)
=================
6783921
count:1
    .. code-block:: python

        import mimetypes
        mimetypes.types_map['.pdf']  # 'application/pdf'
        
    See:

    - Binary:

      - https://stackoverflow.com/questions/6783921/which-mime-type-to-use-for-a-binary-file-thats-specific-to-my-program

    - CSV
    
      - http://stackoverflow.com/questions/264256/what-is-the-best-mime-type-and-extension-to-use-when-exporting-tab-delimited
      - http://www.iana.org/assignments/media-types/text/tab-separated-values
    
    - ZIP
    
      - http://stackoverflow.com/questions/4411757/zip-mime-types-when-to-pick-which-one
      
=================
264256
count:1
        
    See:

    - Binary:

      - https://stackoverflow.com/questions/6783921/which-mime-type-to-use-for-a-binary-file-thats-specific-to-my-program

    - CSV
    
      - http://stackoverflow.com/questions/264256/what-is-the-best-mime-type-and-extension-to-use-when-exporting-tab-delimited
      - http://www.iana.org/assignments/media-types/text/tab-separated-values
    
    - ZIP
    
      - http://stackoverflow.com/questions/4411757/zip-mime-types-when-to-pick-which-one
      
    - Microsoft Office
    
      - https://filext.com/faq/office_mime_types.html
      
=================
4411757
count:1
      - https://stackoverflow.com/questions/6783921/which-mime-type-to-use-for-a-binary-file-thats-specific-to-my-program

    - CSV
    
      - http://stackoverflow.com/questions/264256/what-is-the-best-mime-type-and-extension-to-use-when-exporting-tab-delimited
      - http://www.iana.org/assignments/media-types/text/tab-separated-values
    
    - ZIP
    
      - http://stackoverflow.com/questions/4411757/zip-mime-types-when-to-pick-which-one
      
    - Microsoft Office
    
      - https://filext.com/faq/office_mime_types.html
      
    - OpenOffice
    
      - https://www.openoffice.org/framework/documentation/mimetypes/mimetypes.html
      - https://stackoverflow.com/questions/31489757/what-is-correct-mimetype-with-apache-openoffice-files-like-odt-ods-odp

=================
31489757
count:1
      - http://stackoverflow.com/questions/4411757/zip-mime-types-when-to-pick-which-one
      
    - Microsoft Office
    
      - https://filext.com/faq/office_mime_types.html
      
    - OpenOffice
    
      - https://www.openoffice.org/framework/documentation/mimetypes/mimetypes.html
      - https://stackoverflow.com/questions/31489757/what-is-correct-mimetype-with-apache-openoffice-files-like-odt-ods-odp

    """  # noqa
    BINARY = "application/octet-stream"
    CSV = "text/csv"
    DOC = "application/msword"
    DOCX = "application/vnd.openxmlformats-officedocument.wordprocessingml.document"  # noqa
    DOT = DOC
    DOTX = "application/vnd.openxmlformats-officedocument.wordprocessingml.template"  # noqa
    FORCE_DOWNLOAD = "application/force-download"
    ODP = "application/vnd.oasis.opendocument.presentation"
=================
32214614
count:1
            horse = ()
            dog = ()
            whale = ()
        
        print(Animal.horse)
        print(Animal.horse == 'horse')
        print(Animal.horse.name, Animal.horse.value)

    See
    http://stackoverflow.com/questions/32214614/automatically-setting-an-enum-members-value-to-its-name/32215467
    and then inherit from :class:`StrEnum` rather than :class:`Enum`.

    """  # noqa
    pass


# -----------------------------------------------------------------------------
# LowerCaseAutoStrEnumMeta
# -----------------------------------------------------------------------------

=================
36932
count:1
    """
    pass


# =============================================================================
# enum: TOO OLD; NAME CLASH; DEPRECATED/REMOVED
# =============================================================================

# def enum(**enums: Any) -> Enum:
#     """Enum support, as at http://stackoverflow.com/questions/36932"""
#     return type('Enum', (), enums)


# =============================================================================
# AttrDict: DEPRECATED
# =============================================================================

class AttrDict(dict):
    """
    Dictionary with attribute access; see
=================
4984647
count:1


# =============================================================================
# AttrDict: DEPRECATED
# =============================================================================

class AttrDict(dict):
    """
    Dictionary with attribute access; see
    http://stackoverflow.com/questions/4984647
    """
    def __init__(self, *args, **kwargs) -> None:
        super(AttrDict, self).__init__(*args, **kwargs)
        self.__dict__ = self


# =============================================================================
# OrderedNamespace
# =============================================================================
# for attrdict itself: use the attrdict package
=================
455059
count:1


# =============================================================================
# OrderedNamespace
# =============================================================================
# for attrdict itself: use the attrdict package

class OrderedNamespace(object):
    """
    As per http://stackoverflow.com/questions/455059, modified for
    ``__init__``.
    """
    def __init__(self, *args):
        super().__setattr__('_odict', OrderedDict(*args))

    def __getattr__(self, key):
        odict = super().__getattribute__('_odict')
        if key in odict:
            return odict[key]
        return super().__getattribute__(key)
=================
3310584
count:1
        else:
            memfile = io.BytesIO()
            # noinspection PyUnresolvedReferences
            xhtml2pdf.document.pisaDocument(html, memfile)
            # ... returns a document, but we don't use it, so we don't store it
            # to stop pychecker complaining
            # http://xhtml2pdf.appspot.com/static/pisa-en.html
            memfile.seek(0)
            return memfile.read()
            # http://stackoverflow.com/questions/3310584

    elif processor == Processors.WEASYPRINT:

        if on_disk:
            # noinspection PyUnresolvedReferences
            return weasyprint.HTML(string=html).write_pdf(output_path)
        else:
            # http://ampad.de/blog/generating-pdfs-django/
            # noinspection PyUnresolvedReferences
            return weasyprint.HTML(string=html).write_pdf()
=================
15169101
count:1
                    wkhtmltopdf=wkhtmltopdf_filename.encode('utf-8'))
                # the bug is that pdfkit.pdfkit.PDFKit.__init__ will attempt to
                # decode the string in its configuration object;
                # https://github.com/JazzCore/python-pdfkit/issues/32
            else:
                # noinspection PyUnresolvedReferences
                config = pdfkit.configuration(wkhtmltopdf=wkhtmltopdf_filename)

        # Temporary files that a subprocess can read:
        #   http://stackoverflow.com/questions/15169101
        # wkhtmltopdf requires its HTML files to have ".html" extensions:
        #   http://stackoverflow.com/questions/5776125
        h_filename = None
        f_filename = None
        try:
            if header_html:
                h_fd, h_filename = tempfile.mkstemp(suffix='.html')
                os.write(h_fd, header_html.encode(file_encoding))
                os.close(h_fd)
                wkhtmltopdf_options["header-html"] = h_filename
=================
5776125
count:1
                # decode the string in its configuration object;
                # https://github.com/JazzCore/python-pdfkit/issues/32
            else:
                # noinspection PyUnresolvedReferences
                config = pdfkit.configuration(wkhtmltopdf=wkhtmltopdf_filename)

        # Temporary files that a subprocess can read:
        #   http://stackoverflow.com/questions/15169101
        # wkhtmltopdf requires its HTML files to have ".html" extensions:
        #   http://stackoverflow.com/questions/5776125
        h_filename = None
        f_filename = None
        try:
            if header_html:
                h_fd, h_filename = tempfile.mkstemp(suffix='.html')
                os.write(h_fd, header_html.encode(file_encoding))
                os.close(h_fd)
                wkhtmltopdf_options["header-html"] = h_filename
            if footer_html:
                f_fd, f_filename = tempfile.mkstemp(suffix='.html')
=================
312230
count:1
def serve_pdf_to_stdout(pdf: bytes) -> None:
    """
    Serves a PDF to ``stdout`` (for web servers).

    Writes a ``Content-Type: application/pdf`` header and then the PDF to
    ``stdout``.

    See:

    - http://stackoverflow.com/questions/312230/proper-mime-type-for-pdf-files
    - http://www.askapache.com/htaccess/pdf-cookies-headers-rewrites.html
    - http://stackoverflow.com/questions/2374427

    """
    # print("Content-type: text/plain\n")  # for debugging
    print("Content-Type: application/pdf\n")
    # https://stackoverflow.com/questions/908331/how-to-write-binary-data-to-stdout-in-python-3  # noqa
    sys.stdout.buffer.write(pdf)


=================
2374427
count:1
    Serves a PDF to ``stdout`` (for web servers).

    Writes a ``Content-Type: application/pdf`` header and then the PDF to
    ``stdout``.

    See:

    - http://stackoverflow.com/questions/312230/proper-mime-type-for-pdf-files
    - http://www.askapache.com/htaccess/pdf-cookies-headers-rewrites.html
    - http://stackoverflow.com/questions/2374427

    """
    # print("Content-type: text/plain\n")  # for debugging
    print("Content-Type: application/pdf\n")
    # https://stackoverflow.com/questions/908331/how-to-write-binary-data-to-stdout-in-python-3  # noqa
    sys.stdout.buffer.write(pdf)


def make_pdf_writer() -> PdfFileWriter:
    """
=================
908331
count:1
    See:

    - http://stackoverflow.com/questions/312230/proper-mime-type-for-pdf-files
    - http://www.askapache.com/htaccess/pdf-cookies-headers-rewrites.html
    - http://stackoverflow.com/questions/2374427

    """
    # print("Content-type: text/plain\n")  # for debugging
    print("Content-Type: application/pdf\n")
    # https://stackoverflow.com/questions/908331/how-to-write-binary-data-to-stdout-in-python-3  # noqa
    sys.stdout.buffer.write(pdf)


def make_pdf_writer() -> PdfFileWriter:
    """
    Creates and returns a PyPDF2 writer.
    """
    return PdfFileWriter()


=================
7543452
count:1
# =============================================================================
# Serve concatenated PDFs
# =============================================================================
# Two ways in principle to do this:
# (1) Load data from each PDF into memory; concatenate; serve the result.
# (2) With each PDF on disk, create a temporary file (e.g. with pdftk),
#     serve the result (e.g. in one go), then delete the temporary file.
#     This may be more memory-efficient.
#     However, there can be problems:
#       http://stackoverflow.com/questions/7543452/how-to-launch-a-pdftk-subprocess-while-in-wsgi  # noqa
# Others' examples:
#   https://gist.github.com/zyegfryed/918403
#   https://gist.github.com/grantmcconnaughey/ce90a689050c07c61c96
#   http://stackoverflow.com/questions/3582414/removing-tmp-file-after-return-httpresponse-in-django  # noqa

# def append_disk_pdf_to_writer(filename, writer):
#     """Appends a PDF from disk to a pyPDF writer."""
#     if writer.getNumPages() % 2 != 0:
#         writer.addBlankPage()
#         # ... keeps final result suitable for double-sided printing
=================
3582414
count:1
# (1) Load data from each PDF into memory; concatenate; serve the result.
# (2) With each PDF on disk, create a temporary file (e.g. with pdftk),
#     serve the result (e.g. in one go), then delete the temporary file.
#     This may be more memory-efficient.
#     However, there can be problems:
#       http://stackoverflow.com/questions/7543452/how-to-launch-a-pdftk-subprocess-while-in-wsgi  # noqa
# Others' examples:
#   https://gist.github.com/zyegfryed/918403
#   https://gist.github.com/grantmcconnaughey/ce90a689050c07c61c96
#   http://stackoverflow.com/questions/3582414/removing-tmp-file-after-return-httpresponse-in-django  # noqa

# def append_disk_pdf_to_writer(filename, writer):
#     """Appends a PDF from disk to a pyPDF writer."""
#     if writer.getNumPages() % 2 != 0:
#         writer.addBlankPage()
#         # ... keeps final result suitable for double-sided printing
#     with open(filename, mode='rb') as infile:
#         reader = PdfFileReader(infile)
#         for page_num in range(reader.numPages):
#             writer.addPage(reader.getPage(page_num))
=================
17104926
count:1

    Args:
        filenames: iterable of filenames of PDFs to concatenate
        start_recto: start a new right-hand page for each new PDF?

    Returns:
        concatenated PDF, as ``bytes``

    """
    # http://stackoverflow.com/questions/17104926/pypdf-merging-multiple-pdf-files-into-one-pdf  # noqa
    # https://en.wikipedia.org/wiki/Recto_and_verso
    if start_recto:
        writer = PdfFileWriter()
        for filename in filenames:
            if filename:
                if writer.getNumPages() % 2 != 0:
                    writer.addBlankPage()
                writer.appendPagesFromReader(
                    PdfFileReader(open(filename, 'rb')))
        return pdf_from_writer(writer)
=================
2203424
count:1

def get_class_name_from_frame(fr: FrameType) -> Optional[str]:
    """
    A frame contains information about a specific call in the Python call
    stack; see https://docs.python.org/3/library/inspect.html.

    If the call was to a member function of a class, this function attempts
    to read the class's name. It returns ``None`` otherwise.
    """
    # http://stackoverflow.com/questions/2203424/python-how-to-retrieve-class-information-from-a-frame-object  # noqa
    args, _, _, value_dict = inspect.getargvalues(fr)
    # we check the first parameter for the frame function is named 'self'
    if len(args) and args[0] == 'self':
        # in that case, 'self' will be referenced in value_dict
        instance = value_dict.get('self', None)
        if instance:
            # return its class
            cls = getattr(instance, '__class__', None)
            if cls:
                return cls.__name__
=================
5067604
count:1
    will produce:

    .. code-block:: none

        I am: MyClass.classfunc
        I was called by: f2
        That was called by: f1

    """
    # http://stackoverflow.com/questions/5067604/determine-function-name-from-within-that-function-without-using-traceback  # noqa
    try:
        # noinspection PyProtectedMember
        frame = sys._getframe(back + 2)
    except ValueError:
        # Stack isn't deep enough.
        return '?'
    function_name = frame.f_code.co_name
    class_name = get_class_name_from_frame(frame)
    if class_name:
        return f"{class_name}.{function_name}"
=================
123558
count:1
    """
    If we're running under SQL Server, disable constraint checking for the
    specified table while the resource is held.

    Args:
        session: SQLAlchemy :class:`Session`
        tablename: table name

    See
    https://stackoverflow.com/questions/123558/sql-server-2005-t-sql-to-temporarily-disable-a-trigger
    """  # noqa
    engine = get_engine_from_session(session)
    if is_sqlserver(engine):
        quoted_tablename = quote_identifier(tablename, engine)
        session.execute(
            f"ALTER TABLE {quoted_tablename} NOCHECK CONSTRAINT all")
        yield
        session.execute(
            f"ALTER TABLE {quoted_tablename} WITH CHECK CHECK CONSTRAINT all")
    else:
=================
123558
count:1
    """
    If we're running under SQL Server, disable triggers for the specified table
    while the resource is held.

    Args:
        session: SQLAlchemy :class:`Session`
        tablename: table name

    See
    https://stackoverflow.com/questions/123558/sql-server-2005-t-sql-to-temporarily-disable-a-trigger
    """  # noqa
    engine = get_engine_from_session(session)
    if is_sqlserver(engine):
        quoted_tablename = quote_identifier(tablename, engine)
        session.execute(
            f"ALTER TABLE {quoted_tablename} DISABLE TRIGGER all")
        yield
        session.execute(
            f"ALTER TABLE {quoted_tablename} ENABLE TRIGGER all")
    else:
=================
2537471
count:1

class SqlAlchemyAttrDictMixin(object):
    """
    Mixin to:

    - get a plain dictionary-like object (with attributes so we can use ``x.y``
      rather than ``x['y']``) from an SQLAlchemy ORM object
    - make a nice ``repr()`` default, maintaining field order

    See http://stackoverflow.com/questions/2537471 and in particular
    http://stackoverflow.com/questions/2441796.
    """

    def get_attrdict(self) -> OrderedNamespace:
        """
        Returns what looks like a plain object with the values of the
        SQLAlchemy ORM object.
        """
        # noinspection PyUnresolvedReferences
        columns = self.__table__.columns.keys()
=================
2441796
count:1
class SqlAlchemyAttrDictMixin(object):
    """
    Mixin to:

    - get a plain dictionary-like object (with attributes so we can use ``x.y``
      rather than ``x['y']``) from an SQLAlchemy ORM object
    - make a nice ``repr()`` default, maintaining field order

    See http://stackoverflow.com/questions/2537471 and in particular
    http://stackoverflow.com/questions/2441796.
    """

    def get_attrdict(self) -> OrderedNamespace:
        """
        Returns what looks like a plain object with the values of the
        SQLAlchemy ORM object.
        """
        # noinspection PyUnresolvedReferences
        columns = self.__table__.columns.keys()
        values = (getattr(self, x) for x in columns)
=================
19175311
count:1
        engine: SQLAlchemy :class:`Engine` object
        ormclass: SQLAlchemy ORM class
        without_constraints: don't add foreign key constraints
    """
    table = ormclass.__table__  # type: Table
    log.info("Creating table {} on engine {}{}",
             table.name,
             get_safe_url_from_engine(engine),
             " (omitting constraints)" if without_constraints else "")
    # https://stackoverflow.com/questions/19175311/how-to-create-only-one-table-with-sqlalchemy  # noqa
    if without_constraints:
        include_foreign_key_constraints = []
    else:
        include_foreign_key_constraints = None  # the default
    creator = CreateTable(
        table,
        include_foreign_key_constraints=include_foreign_key_constraints
    )
=================
24622170
count:1
    "pk": "pk_%(table_name)s"
}

DEFAULT_ALEMBIC_VERSION_TABLE = "alembic_version"


# =============================================================================
# Alembic revision/migration system
# =============================================================================
# http://stackoverflow.com/questions/24622170/using-alembic-api-from-inside-application-code  # noqa

def get_head_revision_from_alembic(
        alembic_config_filename: str,
        alembic_base_dir: str = None,
        version_table: str = DEFAULT_ALEMBIC_VERSION_TABLE) -> str:
    """
    Ask Alembic what its head revision is (i.e. where the Python code would
    like the database to be at).

    Arguments:
=================
870925
count:1

    Args:
        metadata: SQLAlchemy :class:`MetaData`
        dialect_name: string name of SQL dialect to generate DDL in
        fileobj: file-like object to send DDL to
        checkfirst: if ``True``, use ``CREATE TABLE IF NOT EXISTS`` or
            equivalent.
    """
    # http://docs.sqlalchemy.org/en/rel_0_8/faq.html#how-can-i-get-the-create-table-drop-table-output-as-a-string  # noqa
    # http://stackoverflow.com/questions/870925/how-to-generate-a-file-with-ddl-in-the-engines-sql-dialect-in-sqlalchemy  # noqa
    # https://github.com/plq/scripts/blob/master/pg_dump.py
    # noinspection PyUnusedLocal
    def dump(querysql, *multiparams, **params):
        compsql = querysql.compile(dialect=engine.dialect)
        writeline_nl(fileobj, f"{compsql};")

    writeline_nl(fileobj,
                 sql_comment(f"Schema (for dialect {dialect_name}):"))
    engine = create_engine(f'{dialect_name}://',
                           strategy='mock', executor=dump)
=================
5631078
count:1

    # noinspection PyTypeChecker
    return GenericMapper


class StringLiteral(String):
    """
    Teach SQLAlchemy how to literalize various things.
    See
    http://stackoverflow.com/questions/5631078/sqlalchemy-print-the-actual-query
    """
    def literal_processor(self,
                          dialect: DefaultDialect) -> Callable[[Any], str]:
        super_processor = super().literal_processor(dialect)

        def process(value: Any) -> str:
            log.debug("process: {!r}", value)
            if isinstance(value, int):
                return str(value)
            if not isinstance(value, str):
=================
5631078
count:1
        return process


# noinspection PyPep8Naming
def make_literal_query_fn(dialect: DefaultDialect) -> Callable[[str], str]:
    DialectClass = dialect.__class__

    # noinspection PyClassHasNoInit,PyAbstractClass
    class LiteralDialect(DialectClass):
        # http://stackoverflow.com/questions/5631078/sqlalchemy-print-the-actual-query  # noqa
        colspecs = {
            # prevent various encoding explosions
            String: StringLiteral,
            # teach SA about how to literalize a datetime
            DateTime: StringLiteral,
            # don't format py2 long integers to NULL
            NullType: StringLiteral,
        }

    def literal_query(statement: str) -> str:
=================
5631078
count:1
            # don't format py2 long integers to NULL
            NullType: StringLiteral,
        }

    def literal_query(statement: str) -> str:
        """
        NOTE: This is entirely insecure. DO NOT execute the resulting
        strings.
        """
        # http://stackoverflow.com/questions/5631078/sqlalchemy-print-the-actual-query  # noqa
        if isinstance(statement, Query):
            statement = statement.statement
        return statement.compile(
            dialect=LiteralDialect(),
            compile_kwargs={'literal_binds': True},
        ).string + ";"

    return literal_query


=================
5631078
count:1

# noinspection PyProtectedMember
def get_literal_query(statement: Union[Query, Executable],
                      bind: Connectable = None) -> str:
    """
    Takes an SQLAlchemy statement and produces a literal SQL version, with
    values filled in.
    
    As per
    http://stackoverflow.com/questions/5631078/sqlalchemy-print-the-actual-query
    
    Notes:
    - for debugging purposes *only*
    - insecure; you should always separate queries from their values
    - please also note that this function is quite slow 
    
    Args:
        statement: the SQL statement (a SQLAlchemy object) to use
        bind: if the statement is unbound, you will need to specify an object
            here that supports SQL execution 
=================
5631078
count:1
    Args:
        engine: SQLAlchemy :class:`Engine`
        table_name: name of the table
        fileobj: file-like object to write to
        wheredict: optional dictionary of ``{column_name: value}`` to use as
            ``WHERE`` filters
        include_ddl: if ``True``, include the DDL to create the table as well
        multirow: write multi-row ``INSERT`` statements
    """
    # http://stackoverflow.com/questions/5631078/sqlalchemy-print-the-actual-query  # noqa
    # http://docs.sqlalchemy.org/en/latest/faq/sqlexpressions.html
    # http://www.tylerlesmann.com/2009/apr/27/copying-databases-across-platforms-sqlalchemy/  # noqa
    # https://github.com/plq/scripts/blob/master/pg_dump.py
    log.info("dump_data_as_insert_sql: table_name={}", table_name)
    writelines_nl(fileobj, [
        SEP1,
        sql_comment(f"Data for table: {table_name}"),
        SEP2,
        sql_comment(f"Filters: {wheredict}"),
    ])
=================
5014700
count:1
    Args:
        engine: SQLAlchemy :class:`Engine`
        baseobj: starting SQLAlchemy ORM object
        fileobj: file-like object to write to

    Problem: foreign key constraints.
    
    - MySQL/InnoDB doesn't wait to the end of a transaction to check FK
      integrity (which it should):
      http://stackoverflow.com/questions/5014700/in-mysql-can-i-defer-referential-integrity-checks-until-commit  # noqa
    - PostgreSQL can.
    - Anyway, slightly ugly hacks...
      https://dev.mysql.com/doc/refman/5.5/en/optimizing-innodb-bulk-data-loading.html
    - Not so obvious how we can iterate through the list of ORM objects and
      guarantee correct insertion order with respect to all FKs.
    """  # noqa
    writeline_nl(
        fileobj,
        sql_comment("Data for all objects related to the first below:"))
    bulk_insert_extras(engine.dialect.name, fileobj, start=True)
=================
6611563
count:1

===============================================================================

**Add "INSERT ON DUPLICATE KEY UPDATE" functionality to SQLAlchemy for MySQL.**

- https://www.reddit.com/r/Python/comments/p5grh/sqlalchemy_whats_the_idiomatic_way_of_writing/
- https://github.com/bedwards/sqlalchemy_mysql_ext/blob/master/duplicate.py
  ... modified
- http://docs.sqlalchemy.org/en/rel_1_0/core/compiler.html
- http://stackoverflow.com/questions/6611563/sqlalchemy-on-duplicate-key-update
- http://dev.mysql.com/doc/refman/5.7/en/insert-on-duplicate.html

Once implemented, you can do

.. code-block:: python

    q = sqla_table.insert_on_duplicate().values(destvalues)
    session.execute(q)

**Note: superseded by SQLAlchemy v1.2:**
=================
6611563
count:1
    ON DUPLICATE KEY UPDATE`` statement.

    Notes:
 
    - We can't get the fieldnames directly from ``insert`` or ``compiler``.
    - We could rewrite the innards of the visit_insert statement
      (https://github.com/bedwards/sqlalchemy_mysql_ext/blob/master/duplicate.py)... 
      but, like that, it will get outdated.
    - We could use a hack-in-by-hand method
      (http://stackoverflow.com/questions/6611563/sqlalchemy-on-duplicate-key-update)
      ... but a little automation would be nice.
    - So, regex to the rescue.
    - NOTE THAT COLUMNS ARE ALREADY QUOTED by this stage; no need to repeat.
    """  # noqa
    # log.critical(compiler.__dict__)
    # log.critical(compiler.dialect.__dict__)
    # log.critical(insert.__dict__)
    s = compiler.visit_insert(insert, **kw)
    # log.critical(s)
    m = RE_INSERT_FIELDNAMES.match(s)
=================
12941416
count:1
    result = session.execute(sql)  # type: ResultProxy
    fieldnames = result.keys()
    rows = result.fetchall()
    return rows, fieldnames


# =============================================================================
# SELECT COUNT(*) (SQLAlchemy Core)
# =============================================================================
# http://stackoverflow.com/questions/12941416

def count_star(session: Union[Session, Engine, Connection],
               tablename: str,
               *criteria: Any) -> int:
    """
    Returns the result of ``COUNT(*)`` from the specified table (with
    additional ``WHERE`` criteria if desired).

    Args:
        session: SQLAlchemy :class:`Session`, :class:`Engine`, or
=================
15381604
count:1
    for criterion in criteria:
        query = query.where(criterion)
    result = session.execute(query)
    return result.fetchone()  # count, maximum


# =============================================================================
# SELECT EXISTS (SQLAlchemy Core)
# =============================================================================
# http://stackoverflow.com/questions/15381604
# http://docs.sqlalchemy.org/en/latest/orm/query.html

def exists_in_table(session: Session, table_: Table, *criteria: Any) -> bool:
    """
    Implements an efficient way of detecting if a record or records exist;
    should be faster than ``COUNT(*)`` in some circumstances.

    Args:
        session: SQLAlchemy :class:`Session`, :class:`Engine`, or
            :class:`Connection` object
=================
14636192
count:1
                         " (DUMMY RUN)" if dummy_run else "",
                         table_num, tablename,
                         table_record_num, overall_record_num)

            if tdc.standalone:
                # Our table has neither parents nor children. We can therefore
                # simply move the instance from one session to the other,
                # blanking primary keys.

                # https://stackoverflow.com/questions/14636192/sqlalchemy-modification-of-detached-object  # noqa
                src_session.expunge(instance)
                make_transient(instance)
                if wipe_pk:
                    wipe_primary_key(instance)

                instance = translate(instance, instance)
                if not instance:
                    continue  # translate_fn elected to skip it

                if not dummy_run:
=================
1323455
count:1
      .. code-block:: python

        setUp()
        testSOMETHING()
        tearDown()

      ... see https://docs.python.org/3.6/library/unittest.html#test-cases

    - If you use mixins, they go AFTER :class:`unittest.TestCase`; see
      https://stackoverflow.com/questions/1323455/python-unit-test-with-base-and-sub-class

    """  # noqa
    def setUp(self) -> None:
        # log.info('In setUp()')

        class Parent(self.Base):
            __tablename__ = "parent"
            id = Column(Integer, primary_key=True, autoincrement=True)
            name = Column(Text)

=================
6455560
count:1
        session: SQLAlchemy :class:`Session`, :class:`Engine`, or
            :class:`Connection` object
        query: SQLAlchemy :class:`Query`

    Returns:
        ``(rows, fieldnames)`` where ``rows`` is the usual set of results and
        ``fieldnames`` are the name of the result columns/fields.

    """
    # https://stackoverflow.com/questions/6455560/how-to-get-column-names-from-sqlalchemy-result-declarative-syntax  # noqa
    # No! Returns e.g. "User" for session.Query(User)...
    # fieldnames = [cd['name'] for cd in query.column_descriptions]
    result = session.execute(query)  # type: ResultProxy
    fieldnames = result.keys()
    # ... yes! Comes out as "_table_field", which is how SQLAlchemy SELECTs
    # things.
    rows = result.fetchall()
    return rows, fieldnames


=================
2546207
count:1
        session: an SQLAlchemy :class:`Session`
        model: an SQLAlchemy ORM class
        defaults: default initialization arguments (in addition to relevant
            filter criteria) if we have to create a new instance
        kwargs: optional filter criteria

    Returns:
        a tuple ``(instance, newly_created)``

    See http://stackoverflow.com/questions/2546207 (this function is a
    composite of several suggestions).
    """
    instance = session.query(model).filter_by(**kwargs).first()
    if instance:
        return instance, False
    else:
        params = dict((k, v) for k, v in kwargs.items()
                      if not isinstance(v, ClauseElement))
        params.update(defaults or {})
        instance = model(**params)
=================
12941416
count:1
# =============================================================================

# noinspection PyAbstractClass
class CountStarSpecializedQuery(Query):
    def __init__(self, *args, **kwargs) -> None:
        """
        Optimizes ``COUNT(*)`` queries.

        See
        https://stackoverflow.com/questions/12941416/how-to-count-rows-with-select-count-with-sqlalchemy

        Example use:

        .. code-block:: python

            q = CountStarSpecializedQuery([cls], session=dbsession)\
                .filter(cls.username == username)
            return q.count_star()

        """  # noqa
=================
87747
count:1
      .. code-block:: sql

        SELECT table_name, column_name
        FROM information_schema.columns
        WHERE COLUMNPROPERTY(OBJECT_ID(table_schema + '.' + table_name),
                             column_name,
                             'IsIdentity') = 1
        ORDER BY table_name;

      ... http://stackoverflow.com/questions/87747

    - Also:

      .. code-block:: sql

        sp_columns 'tablename';

      ... which is what SQLAlchemy does (``dialects/mssql/base.py``, in
      :func:`get_columns`).
    """
=================
2937229
count:1
    if dialect.name == SqlaDialectName.MSSQL:
        return Column(column_name, BigInteger,
                      Sequence('dummy_name', start=1, increment=1))
    else:
        # return Column(column_name, BigInteger, autoincrement=True)
        # noinspection PyUnresolvedReferences
        raise AssertionError(
            f"SQLAlchemy doesn't support non-PK autoincrement fields yet for "
            f"dialect {dialect.name!r}")
        # see http://stackoverflow.com/questions/2937229


def column_creation_ddl(sqla_column: Column, dialect: Dialect) -> str:
    """
    Returns DDL to create a column, using the specified dialect.

    The column should already be bound to a table (because e.g. the SQL Server
    dialect requires this for DDL generation).

    Manual testing:
=================
10262426
count:1
        return mysql.base.BIT()

    # -------------------------------------------------------------------------
    # TIMESTAMP
    # -------------------------------------------------------------------------
    is_mssql_timestamp = isinstance(coltype, MSSQL_TIMESTAMP)
    if is_mssql_timestamp and to_mssql and convert_mssql_timestamp:
        # You cannot write explicitly to a TIMESTAMP field in SQL Server; it's
        # used for autogenerated values only.
        # - http://stackoverflow.com/questions/10262426/sql-server-cannot-insert-an-explicit-value-into-a-timestamp-column  # noqa
        # - https://social.msdn.microsoft.com/Forums/sqlserver/en-US/5167204b-ef32-4662-8e01-00c9f0f362c2/how-to-tranfer-a-column-with-timestamp-datatype?forum=transactsql  # noqa
        #   ... suggesting BINARY(8) to store the value.
        # MySQL is more helpful:
        # - http://stackoverflow.com/questions/409286/should-i-use-field-datetime-or-timestamp  # noqa
        return mssql.base.BINARY(8)

    # -------------------------------------------------------------------------
    # Some other type
    # -------------------------------------------------------------------------
    return coltype
=================
409286
count:1
    # -------------------------------------------------------------------------
    is_mssql_timestamp = isinstance(coltype, MSSQL_TIMESTAMP)
    if is_mssql_timestamp and to_mssql and convert_mssql_timestamp:
        # You cannot write explicitly to a TIMESTAMP field in SQL Server; it's
        # used for autogenerated values only.
        # - http://stackoverflow.com/questions/10262426/sql-server-cannot-insert-an-explicit-value-into-a-timestamp-column  # noqa
        # - https://social.msdn.microsoft.com/Forums/sqlserver/en-US/5167204b-ef32-4662-8e01-00c9f0f362c2/how-to-tranfer-a-column-with-timestamp-datatype?forum=transactsql  # noqa
        #   ... suggesting BINARY(8) to store the value.
        # MySQL is more helpful:
        # - http://stackoverflow.com/questions/409286/should-i-use-field-datetime-or-timestamp  # noqa
        return mssql.base.BINARY(8)

    # -------------------------------------------------------------------------
    # Some other type
    # -------------------------------------------------------------------------
    return coltype


# =============================================================================
# Questions about SQLAlchemy column types
=================
32917867
count:1
    .. code-block:: none
    
       sqlalchemy\dialects\mssql\base.py:1921: SAWarning: Did not recognize type 'xml' of column '...'

    We will convert anything of type ``XML`` into type ``TEXT``.

    """  # noqa
    log.debug("Adding type 'xml' to SQLAlchemy reflection for dialect 'mssql'")
    mssql.base.ischema_names['xml'] = mssql.base.TEXT
    # http://stackoverflow.com/questions/32917867/sqlalchemy-making-schema-reflection-find-use-a-custom-type-for-all-instances  # noqa

    # print(repr(mssql.base.ischema_names.keys()))
    # print(repr(mssql.base.ischema_names))


# =============================================================================
# Check column definition equality
# =============================================================================

def column_types_equal(a_coltype: TypeEngine, b_coltype: TypeEngine) -> bool:
=================
34787794
count:1
# =============================================================================
# Check column definition equality
# =============================================================================

def column_types_equal(a_coltype: TypeEngine, b_coltype: TypeEngine) -> bool:
    """
    Checks that two SQLAlchemy column types are equal (by comparing ``str()``
    versions of them).
    
    See http://stackoverflow.com/questions/34787794/sqlalchemy-column-type-comparison.
    
    IMPERFECT. 
    """  # noqa
    return str(a_coltype) == str(b_coltype)


def columns_equal(a: Column, b: Column) -> bool:
    """
    Are two SQLAlchemy columns are equal? Checks based on:

=================
1675181
count:1
        s: the argument

    See:

    - http://code.activestate.com/lists/python-list/272714/ -- does not work
      as null values get escaped in different ways in modern Python, and in a
      slightly unpredictable way
    - https://mail.python.org/pipermail/python-list/2003-April/236940.html --
      won't deal with repr() using triple-quotes
    - https://stackoverflow.com/questions/1675181/get-str-repr-with-double-quotes-python
      -- probably the right general approach

    Test code:

    .. code-block:: python

        from cardinal_pythonlib.snomed import double_quoted
        
        def test(s):
            print(f"double_quoted({s!r}) -> {double_quoted(s)}")
=================
3055477
count:1
            print(f"double_quoted({s!r}) -> {double_quoted(s)}")
        
        
        test("ab'cd")
        test("ab'c\"d")
        test('ab"cd')

    """  # noqa
    # For efficiency, we use a list:
    # https://stackoverflow.com/questions/3055477/how-slow-is-pythons-string-concatenation-vs-str-join  # noqa
    # https://waymoot.org/home/python_string/
    dquote = '"'
    ret = [dquote]  # type: List[str]
    for c in s:
        # "Named" characters
        if c == NEWLINE:
            ret.append(r"\n")
        elif c == TAB:
            ret.append(r"\t")
        elif c == QM:
=================
169070
count:1

        @preserve_cwd
        def myfunc():
            os.chdir("/faraway")

        os.chdir("/home")
        myfunc()
        assert os.getcwd() == "/home"
    """
    # http://stackoverflow.com/questions/169070/python-how-do-i-write-a-decorator-that-restores-the-cwd  # noqa
    def decorator(*args_, **kwargs) -> Any:
        cwd = os.getcwd()
        result = func(*args_, **kwargs)
        os.chdir(cwd)
        return result
    return decorator


def root_path() -> str:
    """
=================
12041525
count:1
        os.chdir(cwd)
        return result
    return decorator


def root_path() -> str:
    """
    Returns the system root directory.
    """
    # http://stackoverflow.com/questions/12041525
    return os.path.abspath(os.sep)


# =============================================================================
# Copy or move things
# =============================================================================

def copyglob(src: str, dest: str, allow_nothing: bool = False,
             allow_nonfiles: bool = False) -> None:
    """
=================
2656322
count:1

    If the error is due to an access error (read only file)
    it attempts to add write permission and then retries.

    If the error is for another reason it re-raises the error.

    Usage: ``shutil.rmtree(path, onerror=shutil_rmtree_onerror)``
    
    See
    https://stackoverflow.com/questions/2656322/shutil-rmtree-fails-on-windows-with-access-is-denied
    """  # noqa
    if not os.access(path, os.W_OK):
        # Is the error an access error ?
        os.chmod(path, stat.S_IWUSR)
        func(path)
    else:
        exc = exc_info[1]
        raise exc


=================
2853723
count:1
def chown_r(path: str, user: str, group: str) -> None:
    """
    Performs a recursive ``chown``.

    Args:
        path: path to walk down
        user: user name or ID
        group: group name or ID

    As per http://stackoverflow.com/questions/2853723
    """
    for root, dirs, files in os.walk(path):
        for x in dirs:
            shutil.chown(os.path.join(root, x), user, group)
        for x in files:
            shutil.chown(os.path.join(root, x), user, group)


def chmod_r(root: str, permission: int) -> None:
    """
=================
1392413
count:1
# =============================================================================
# Disk space
# =============================================================================

def get_directory_contents_size(directory: str = ".") -> int:
    """
    Returns the total size of all files within a directory.

    See
    https://stackoverflow.com/questions/1392413/calculating-a-directorys-size-using-python.

    Args:
        directory: directory to check

    Returns:
        int: size in bytes
    """  # noqa
    total_size = 0
    for dirpath, dirnames, filenames in os.walk(directory):
        for f in filenames:
=================
43878953
count:1

import os


def running_under_docker() -> bool:
    """
    Are we running inside a Docker container?

    As per
    https://stackoverflow.com/questions/43878953/how-does-one-detect-if-one-is-running-within-a-docker-container-within-python
    """  # noqa
    path = '/proc/self/cgroup'
    return (
        os.path.exists('/.dockerenv') or
        (
            os.path.isfile(path) and
            any('docker' in line for line in open(path))
        )
=================
51264355
count:1

# =============================================================================
# csv.writer
# =============================================================================

class CSVWriterType(object):
    """
    Type hint for the result of ``csv.writer()``

    See https://stackoverflow.com/questions/51264355/how-to-type-annotate-object-returned-by-csv-writer
    """  # noqa

    @abstractmethod
    def writerow(self, row: List[str]) -> None:
        pass

    @abstractmethod
    def writerows(self, rows: List[List[str]]) -> None:
        pass

=================
35344209
count:1
        pass

    # noinspection PyUnresolvedReferences
    @arraysize.setter
    @abstractmethod
    def arraysize(self, val: int) -> None:
        """
        See https://www.python.org/dev/peps/pep-0249/#cursor-objects
        """
        # https://stackoverflow.com/questions/35344209/python-abstract-property-setter-with-concrete-getter
        pass

    @abstractmethod
    def setinputsizes(self, sizes: Sequence[Union[Type, int]]) -> None:
        """
        See https://www.python.org/dev/peps/pep-0249/#cursor-objects
        """
        pass

    @abstractmethod
=================
7585435
count:1
# Support functions
# =============================================================================

def to_bytes(data: Any) -> bytearray:
    """
    Convert anything to a ``bytearray``.
    
    See
    
    - http://stackoverflow.com/questions/7585435/best-way-to-convert-string-to-bytes-in-python-3
    - http://stackoverflow.com/questions/10459067/how-to-convert-my-bytearrayb-x9e-x18k-x9a-to-something-like-this-x9e-x1
    """  # noqa
    if isinstance(data, int):
        return bytearray([data])
    return bytearray(data, encoding='latin-1')


def to_str(data: Any) -> str:
    """
    Convert anything to a ``str``.
=================
10459067
count:1
# =============================================================================

def to_bytes(data: Any) -> bytearray:
    """
    Convert anything to a ``bytearray``.
    
    See
    
    - http://stackoverflow.com/questions/7585435/best-way-to-convert-string-to-bytes-in-python-3
    - http://stackoverflow.com/questions/10459067/how-to-convert-my-bytearrayb-x9e-x18k-x9a-to-something-like-this-x9e-x1
    """  # noqa
    if isinstance(data, int):
        return bytearray([data])
    return bytearray(data, encoding='latin-1')


def to_str(data: Any) -> str:
    """
    Convert anything to a ``str``.
    """
=================
1604464
count:1
    version.

    Args:
        val: positive integer representing a number in two's complement format
        n_bits: number of bits (which must reflect a whole number of bytes)

    Returns:
        signed integer

    See http://stackoverflow.com/questions/1604464/twos-complement-in-python

    """
    assert n_bits % 8 == 0, "Must specify a whole number of bytes"
    n_bytes = n_bits // 8
    b = val.to_bytes(n_bytes, byteorder=sys.byteorder, signed=False)
    return int.from_bytes(b, byteorder=sys.byteorder, signed=True)


def signed_to_twos_comp(val: int, n_bits: int) -> int:
    """
=================
13305290
count:1
# =============================================================================

# -----------------------------------------------------------------------------
# SO ones
# -----------------------------------------------------------------------------

def murmur3_x86_32(data: Union[bytes, bytearray], seed: int = 0) -> int:
    """
    Pure 32-bit Python implementation of MurmurHash3; see
    http://stackoverflow.com/questions/13305290/is-there-a-pure-python-implementation-of-murmurhash.
     
    Args:
        data: data to hash 
        seed: seed

    Returns:
        integer hash

    """  # noqa
    c1 = 0xcc9e2d51
=================
13305290
count:1
    h1 ^= ((h1 & 0xffffffff) >> 16)

    return h1 & 0xffffffff


# noinspection PyPep8
def murmur3_64(data: Union[bytes, bytearray], seed: int = 19820125) -> int:
    """
    Pure 64-bit Python implementation of MurmurHash3; see
    http://stackoverflow.com/questions/13305290/is-there-a-pure-python-implementation-of-murmurhash
    (plus RNC bugfixes).
     
    Args:
        data: data to hash 
        seed: seed

    Returns:
        integer hash
    """  # noqa
    m = 0xc6a4a7935bd1e995
=================
1094841
count:1
===============================================================================
"""

from typing import Union


def sizeof_fmt(num: float, suffix: str = 'B') -> str:
    """
    Formats a number of bytes in a human-readable binary format (e.g. ``2048``
    becomes ``'2 KiB'``); from http://stackoverflow.com/questions/1094841.
    """
    for unit in ('', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi'):
        if abs(num) < 1024.0:
            return "%3.1f%s%s" % (num, unit, suffix)
        num /= 1024.0
    return "%.1f%s%s" % (num, 'Yi', suffix)


# see: https://en.wikipedia.org/wiki/Binary_prefix
SYMBOLS = {
=================
125222
count:1

- Author: Rudolf Cardinal (rudolf@pobox.com)
- Created: Feb 2015
- Last update: 24 Sep 2015

See also:

- Word

  - http://stackoverflow.com/questions/125222
  - http://stackoverflow.com/questions/42482

- PDF

  - http://stackoverflow.com/questions/25665
  - https://pypi.python.org/pypi/slate
  - http://stackoverflow.com/questions/5725278

- RTF

=================
42482
count:1
- Author: Rudolf Cardinal (rudolf@pobox.com)
- Created: Feb 2015
- Last update: 24 Sep 2015

See also:

- Word

  - http://stackoverflow.com/questions/125222
  - http://stackoverflow.com/questions/42482

- PDF

  - http://stackoverflow.com/questions/25665
  - https://pypi.python.org/pypi/slate
  - http://stackoverflow.com/questions/5725278

- RTF

  - unrtf
=================
25665
count:1
See also:

- Word

  - http://stackoverflow.com/questions/125222
  - http://stackoverflow.com/questions/42482

- PDF

  - http://stackoverflow.com/questions/25665
  - https://pypi.python.org/pypi/slate
  - http://stackoverflow.com/questions/5725278

- RTF

  - unrtf
  - http://superuser.com/questions/243084/rtf-to-txt-on-unix

- Multi-purpose:

=================
5725278
count:1
- Word

  - http://stackoverflow.com/questions/125222
  - http://stackoverflow.com/questions/42482

- PDF

  - http://stackoverflow.com/questions/25665
  - https://pypi.python.org/pypi/slate
  - http://stackoverflow.com/questions/5725278

- RTF

  - unrtf
  - http://superuser.com/questions/243084/rtf-to-txt-on-unix

- Multi-purpose:

  - https://pypi.python.org/pypi/fulltext/
  - https://media.readthedocs.org/pdf/textract/latest/textract.pdf
=================
13857856
count:1
        log.warning("chardet not installed; limits detection of encodings")
        return None
    # METHOD 1
    # http://chardet.readthedocs.io/en/latest/
    #
    # guess = chardet.detect(binary_contents)
    #
    # METHOD 2: faster with large files
    # http://chardet.readthedocs.io/en/latest/
    # http://stackoverflow.com/questions/13857856/split-byte-string-into-lines

    # noinspection PyCallingNonCallable
    detector = UniversalDetector()
    for byte_line in binary_contents.split(b"\n"):
        detector.feed(byte_line)
        if detector.done:
            break
    guess = detector.result
    # Handle result
    if 'encoding' not in guess:
=================
25228106
count:1
            with get_filelikeobject(filename, blob) as fp:
                document = docx.opendocx(fp)
                paratextlist = docx.getdocumenttext(document)
            return '\n\n'.join(paratextlist)

    - Newer ``docx`` is python-docx

      - https://pypi.python.org/pypi/python-docx
      - https://python-docx.readthedocs.org/en/latest/
      - http://stackoverflow.com/questions/25228106

      However, it uses ``lxml``, which has C dependencies, so it doesn't always
      install properly on e.g. bare Windows machines.

      PERFORMANCE of my method:

      - nice table formatting
      - but tables grouped at end, not in sensible places
      - can iterate via ``doc.paragraphs`` and ``doc.tables`` but not in
        true document order, it seems
=================
653368
count:1
                self._db = db
                self._schema = schema
                self._table = table

    """
    if DEBUG:
        print(f"register_for_json: args = {args!r}")
        print(f"register_for_json: kwargs = {kwargs!r}")

    # http://stackoverflow.com/questions/653368/how-to-create-a-python-decorator-that-can-be-used-either-with-or-without-paramet  # noqa
    # In brief,
    #   @decorator
    #   x
    #
    # means
    #   x = decorator(x)
    #
    # so
    #   @decorator(args)
    #   x
=================
510357
count:1
except ImportError:
    msvcrt = None
    import termios  # Unix only
    import tty  # requires termios, so Unix only


# =============================================================================
# Read single character, waiting for it
# =============================================================================
# http://stackoverflow.com/questions/510357/python-read-a-single-character-from-the-user  # noqa
# http://home.wlu.edu/~levys/software/kbhit.py
# ... modified a little

def _getch_windows() -> str:
    """
    Under Windows, wets a single character from standard input. Does not echo
    to the screen.
    """
    # noinspection PyUnresolvedReferences
    return msvcrt.getch().decode('utf-8')
=================
2408560
count:1
    the screen. Note that the terminal will have been pre-configured, below.
    """
    return sys.stdin.read(1)


# =============================================================================
# Is a keystroke available?
# =============================================================================
# http://code.activestate.com/recipes/572182-how-to-implement-kbhit-on-linux/
# http://stackoverflow.com/questions/2408560/python-nonblocking-console-input

def _kbhit_windows() -> bool:
    """
    Under Windows: is a keystroke available?
    """
    # noinspection PyUnresolvedReferences
    return msvcrt.kbhit()


def _kbhit_unix() -> bool:
=================
12296214
count:1

.. code-block:: python

    import logging
    log = logging.getLogger(__name__)

    # ... and if you want to suppress output unless the user configures logs:
    log.addHandler(logging.NullHandler())
    # ... which only needs to be done in the __init__.py for the package
    #     http://stackoverflow.com/questions/12296214

    # LIBRARY CODE SHOULD NOT ADD ANY OTHER HANDLERS; see above.

DO NOT call this module "logging"! Many things may get confused.

"""

from html import escape
from inspect import Parameter, signature
import json
=================
7484454
count:1
    Args:
        logger: logger to modify
        level: log level to set
        remove_existing: remove existing handlers from logger first?
        extranames: additional names to append to the logger's name
        with_process_id: include the process ID in the logger's name?
        with_thread_id: include the thread ID in the logger's name?
    """
    if remove_existing:
        logger.handlers = []  # http://stackoverflow.com/questions/7484454
    handler = get_colour_handler(extranames,
                                 with_process_id=with_process_id,
                                 with_thread_id=with_thread_id)
    handler.setLevel(level)
    logger.addHandler(handler)
    logger.setLevel(level)


def main_only_quicksetup_rootlogger(level: int = logging.DEBUG,
                                    with_process_id: bool = False,
=================
7484454
count:1
    Generally MORE SENSIBLE just to apply a handler to the root logger.

    Args:
        handler: the handler to apply
        remove_existing: remove existing handlers from logger first?
    """
    # noinspection PyUnresolvedReferences
    for name, obj in logging.Logger.manager.loggerDict.items():
        if remove_existing:
            obj.handlers = []  # http://stackoverflow.com/questions/7484454
        obj.addHandler(handler)


def copy_root_log_to_file(filename: str,
                          fmt: str = LOG_FORMAT,
                          datefmt: str = LOG_DATEFMT) -> None:
    """
    Copy all currently configured logs to the specified file.

    Should ONLY be called from the ``if __name__ == 'main'`` script;
=================
13131400
count:1
        except:  # nopep8
            self.handleError(record)


# =============================================================================
# Brace formatters, for log.info("{}, {}", "hello", "world")
# =============================================================================

# - https://docs.python.org/3/howto/logging-cookbook.html#use-of-alternative-formatting-styles  # noqa
# - https://stackoverflow.com/questions/13131400/logging-variable-data-with-new-format-string  # noqa
# - https://stackoverflow.com/questions/13131400/logging-variable-data-with-new-format-string/24683360#24683360  # noqa
# ... plus modifications to use inspect.signature() not inspect.getargspec()
# ... plus a performance tweak so we're not calling signature() every time
# See also:
# - https://www.simonmweber.com/2014/11/24/python-logging-traps.html

class BraceMessage(object):
    """
    Class to represent a message that includes a message including braces
    (``{}``) and a set of ``args``/``kwargs``. When converted to a ``str``,
=================
24683360
count:1
            self.handleError(record)


# =============================================================================
# Brace formatters, for log.info("{}, {}", "hello", "world")
# =============================================================================

# - https://docs.python.org/3/howto/logging-cookbook.html#use-of-alternative-formatting-styles  # noqa
# - https://stackoverflow.com/questions/13131400/logging-variable-data-with-new-format-string  # noqa
# - https://stackoverflow.com/questions/13131400/logging-variable-data-with-new-format-string/24683360#24683360  # noqa
# ... plus modifications to use inspect.signature() not inspect.getargspec()
# ... plus a performance tweak so we're not calling signature() every time
# See also:
# - https://www.simonmweber.com/2014/11/24/python-logging-traps.html

class BraceMessage(object):
    """
    Class to represent a message that includes a message including braces
    (``{}``) and a set of ``args``/``kwargs``. When converted to a ``str``,
    the message is realized via ``msg.format(*args, **kwargs)``.
=================
31992424
count:1
    (``{}``) and a set of ``args``/``kwargs``. When converted to a ``str``,
    the message is realized via ``msg.format(*args, **kwargs)``.
    """
    def __init__(self,
                 fmt: str,
                 args: Tuple[Any, ...],
                 kwargs: Dict[str, Any]) -> None:
        # This version uses args and kwargs, not *args and **kwargs, for
        # performance reasons:
        # https://stackoverflow.com/questions/31992424/performance-implications-of-unpacking-dictionaries-in-python  # noqa
        # ... and since we control creation entirely, we may as well go fast
        self.fmt = fmt
        self.args = args
        self.kwargs = kwargs
        # print("Creating BraceMessage with: fmt={}, args={}, "
        #       "kwargs={}".format(repr(fmt), repr(args), repr(kwargs)))

    def __str__(self) -> str:
        return self.fmt.format(*self.args, **self.kwargs)

=================
1987919
count:1
            return f"Testclass.noparams: hello; a={self.a}"

        @mycache.cache_on_arguments(function_key_generator=kw_fkg)
        def no_params_instance_cache(self) -> str:
            fn_called("PER-INSTANCE-CACHED FUNCTION "
                      "TestClass.no_params_instance_cache() CALLED")
            return f"TestClass.no_params_instance_cache: a={self.a}"

        # Decorator order is critical here:
        # https://stackoverflow.com/questions/1987919/why-can-decorator-not-decorate-a-staticmethod-or-a-classmethod  # noqa
        @classmethod
        @mycache.cache_on_arguments(function_key_generator=plain_fkg)
        def classy(cls) -> str:
            fn_called("CACHED FUNCTION TestClass.classy() CALLED")
            return f"TestClass.classy: hello; c={cls.c}"

        @staticmethod
        @mycache.cache_on_arguments(function_key_generator=plain_fkg)
        def static() -> str:
            fn_called("CACHED FUNCTION TestClass.static() CALLED")
=================
1987919
count:1
            return f"Inherited.noparams: hello; a={self.a}"

        @mycache.cache_on_arguments(function_key_generator=kw_fkg)
        def no_params_instance_cache(self) -> str:
            fn_called("PER-INSTANCE-CACHED FUNCTION "
                      "Inherited.no_params_instance_cache() CALLED")
            return f"Inherited.no_params_instance_cache: a={self.a}"

        # Decorator order is critical here:
        # https://stackoverflow.com/questions/1987919/why-can-decorator-not-decorate-a-staticmethod-or-a-classmethod  # noqa
        @classmethod
        @mycache.cache_on_arguments(function_key_generator=plain_fkg)
        def classy(cls) -> str:
            fn_called("CACHED FUNCTION Inherited.classy() CALLED")
            return f"Inherited.classy: hello; c={cls.c}"

        @staticmethod
        @mycache.cache_on_arguments(function_key_generator=plain_fkg)
        def static() -> str:
            fn_called("CACHED FUNCTION Inherited.static() CALLED")
=================
4020539
count:1
    s = s.replace("\n", r"\n")  # escape \n; note ord("\n") == 10
    s = s.replace("\r", r"\r")  # escape \r; note ord("\r") == 13
    return s


def unescape_newlines(s: str) -> str:
    """
    Reverses :func:`escape_newlines`.
    """
    # See also http://stackoverflow.com/questions/4020539
    if not s:
        return s
    d = ""  # the destination string
    in_escape = False
    for i in range(len(s)):
        c = s[i]  # the character being processed
        if in_escape:
            if c == "r":
                d += "\r"
            elif c == "n":
=================
4020539
count:1
    s = s.replace("\r", r"\r")  # escape \r; note ord("\r") == 13
    s = s.replace("\t", r"\t")  # escape \t; note ord("\t") == 9
    return s


def unescape_tabs_newlines(s: str) -> str:
    """
    Reverses :func:`escape_tabs_newlines`.

    See also http://stackoverflow.com/questions/4020539.
    """
    if not s:
        return s
    d = ""  # the destination string
    in_escape = False
    for i in range(len(s)):
        c = s[i]  # the character being processed
        if in_escape:
            if c == "r":
                d += "\r"
=================
13233076
count:1
        if isinstance(src, int):
            charlist.append(chr(src))
        else:
            # Range like "0041-005A"
            first, last = [int(x, 16) for x in src.split("-")]
            charlist += [chr(x) for x in range(first, last + 1)]
    return "".join(charlist)


# https://stackoverflow.com/questions/13233076/determine-if-a-unicode-character-is-alphanumeric-without-using-a-regular-express  # noqa
_UNICODE_CATEGORY_SRC = {
    # From https://github.com/slevithan/xregexp/blob/master/tools/scripts/property-regex.py  # noqa
    'ASCII': ['0000-007F'],
    'Alphabetic': ['0041-005A', '0061-007A', 0x00AA, 0x00B5, 0x00BA, '00C0-00D6', '00D8-00F6', '00F8-02C1', '02C6-02D1', '02E0-02E4', 0x02EC, 0x02EE, 0x0345, '0370-0374', 0x0376, 0x0377, '037A-037D', 0x037F, 0x0386, '0388-038A', 0x038C, '038E-03A1', '03A3-03F5', '03F7-0481', '048A-052F', '0531-0556', 0x0559, '0561-0587', '05B0-05BD', 0x05BF, 0x05C1, 0x05C2, 0x05C4, 0x05C5, 0x05C7, '05D0-05EA', '05F0-05F2', '0610-061A', '0620-0657', '0659-065F', '066E-06D3', '06D5-06DC', '06E1-06E8', '06ED-06EF', '06FA-06FC', 0x06FF, '0710-073F', '074D-07B1', '07CA-07EA', 0x07F4, 0x07F5, 0x07FA, '0800-0817', '081A-082C', '0840-0858', '08A0-08B4', '08B6-08BD', '08D4-08DF', '08E3-08E9', '08F0-093B', '093D-094C', '094E-0950', '0955-0963', '0971-0983', '0985-098C', 0x098F, 0x0990, '0993-09A8', '09AA-09B0', 0x09B2, '09B6-09B9', '09BD-09C4', 0x09C7, 0x09C8, 0x09CB, 0x09CC, 0x09CE, 0x09D7, 0x09DC, 0x09DD, '09DF-09E3', 0x09F0, 0x09F1, '0A01-0A03', '0A05-0A0A', 0x0A0F, 0x0A10, '0A13-0A28', '0A2A-0A30', 0x0A32, 0x0A33, 0x0A35, 0x0A36, 0x0A38, 0x0A39, '0A3E-0A42', 0x0A47, 0x0A48, 0x0A4B, 0x0A4C, 0x0A51, '0A59-0A5C', 0x0A5E, '0A70-0A75', '0A81-0A83', '0A85-0A8D', '0A8F-0A91', '0A93-0AA8', '0AAA-0AB0', 0x0AB2, 0x0AB3, '0AB5-0AB9', '0ABD-0AC5', '0AC7-0AC9', 0x0ACB, 0x0ACC, 0x0AD0, '0AE0-0AE3', 0x0AF9, '0B01-0B03', '0B05-0B0C', 0x0B0F, 0x0B10, '0B13-0B28', '0B2A-0B30', 0x0B32, 0x0B33, '0B35-0B39', '0B3D-0B44', 0x0B47, 0x0B48, 0x0B4B, 0x0B4C, 0x0B56, 0x0B57, 0x0B5C, 0x0B5D, '0B5F-0B63', 0x0B71, 0x0B82, 0x0B83, '0B85-0B8A', '0B8E-0B90', '0B92-0B95', 0x0B99, 0x0B9A, 0x0B9C, 0x0B9E, 0x0B9F, 0x0BA3, 0x0BA4, '0BA8-0BAA', '0BAE-0BB9', '0BBE-0BC2', '0BC6-0BC8', '0BCA-0BCC', 0x0BD0, 0x0BD7, '0C00-0C03', '0C05-0C0C', '0C0E-0C10', '0C12-0C28', '0C2A-0C39', '0C3D-0C44', '0C46-0C48', '0C4A-0C4C', 0x0C55, 0x0C56, '0C58-0C5A', '0C60-0C63', '0C80-0C83', '0C85-0C8C', '0C8E-0C90', '0C92-0CA8', '0CAA-0CB3', '0CB5-0CB9', '0CBD-0CC4', '0CC6-0CC8', '0CCA-0CCC', 0x0CD5, 0x0CD6, 0x0CDE, '0CE0-0CE3', 0x0CF1, 0x0CF2, '0D01-0D03', '0D05-0D0C', '0D0E-0D10', '0D12-0D3A', '0D3D-0D44', '0D46-0D48', '0D4A-0D4C', 0x0D4E, '0D54-0D57', '0D5F-0D63', '0D7A-0D7F', 0x0D82, 0x0D83, '0D85-0D96', '0D9A-0DB1', '0DB3-0DBB', 0x0DBD, '0DC0-0DC6', '0DCF-0DD4', 0x0DD6, '0DD8-0DDF', 0x0DF2, 0x0DF3, '0E01-0E3A', '0E40-0E46', 0x0E4D, 0x0E81, 0x0E82, 0x0E84, 0x0E87, 0x0E88, 0x0E8A, 0x0E8D, '0E94-0E97', '0E99-0E9F', '0EA1-0EA3', 0x0EA5, 0x0EA7, 0x0EAA, 0x0EAB, '0EAD-0EB9', '0EBB-0EBD', '0EC0-0EC4', 0x0EC6, 0x0ECD, '0EDC-0EDF', 0x0F00, '0F40-0F47', '0F49-0F6C', '0F71-0F81', '0F88-0F97', '0F99-0FBC', '1000-1036', 0x1038, '103B-103F', '1050-1062', '1065-1068', '106E-1086', 0x108E, 0x109C, 0x109D, '10A0-10C5', 0x10C7, 0x10CD, '10D0-10FA', '10FC-1248', '124A-124D', '1250-1256', 0x1258, '125A-125D', '1260-1288', '128A-128D', '1290-12B0', '12B2-12B5', '12B8-12BE', 0x12C0, '12C2-12C5', '12C8-12D6', '12D8-1310', '1312-1315', '1318-135A', 0x135F, '1380-138F', '13A0-13F5', '13F8-13FD', '1401-166C', '166F-167F', '1681-169A', '16A0-16EA', '16EE-16F8', '1700-170C', '170E-1713', '1720-1733', '1740-1753', '1760-176C', '176E-1770', 0x1772, 0x1773, '1780-17B3', '17B6-17C8', 0x17D7, 0x17DC, '1820-1877', '1880-18AA', '18B0-18F5', '1900-191E', '1920-192B', '1930-1938', '1950-196D', '1970-1974', '1980-19AB', '19B0-19C9', '1A00-1A1B', '1A20-1A5E', '1A61-1A74', 0x1AA7, '1B00-1B33', '1B35-1B43', '1B45-1B4B', '1B80-1BA9', '1BAC-1BAF', '1BBA-1BE5', '1BE7-1BF1', '1C00-1C35', '1C4D-1C4F', '1C5A-1C7D', '1C80-1C88', '1CE9-1CEC', '1CEE-1CF3', 0x1CF5, 0x1CF6, '1D00-1DBF', '1DE7-1DF4', '1E00-1F15', '1F18-1F1D', '1F20-1F45', '1F48-1F4D', '1F50-1F57', 0x1F59, 0x1F5B, 0x1F5D, '1F5F-1F7D', '1F80-1FB4', '1FB6-1FBC', 0x1FBE, '1FC2-1FC4', '1FC6-1FCC', '1FD0-1FD3', '1FD6-1FDB', '1FE0-1FEC', '1FF2-1FF4', '1FF6-1FFC', 0x2071, 0x207F, '2090-209C', 0x2102, 0x2107, '210A-2113', 0x2115, '2119-211D', 0x2124, 0x2126, 0x2128, '212A-212D', '212F-2139', '213C-213F', '2145-2149', 0x214E, '2160-2188', '24B6-24E9', '2C00-2C2E', '2C30-2C5E', '2C60-2CE4', '2CEB-2CEE', 0x2CF2, 0x2CF3, '2D00-2D25', 0x2D27, 0x2D2D, '2D30-2D67', 0x2D6F, '2D80-2D96', '2DA0-2DA6', '2DA8-2DAE', '2DB0-2DB6', '2DB8-2DBE', '2DC0-2DC6', '2DC8-2DCE', '2DD0-2DD6', '2DD8-2DDE', '2DE0-2DFF', 0x2E2F, '3005-3007', '3021-3029', '3031-3035', '3038-303C', '3041-3096', '309D-309F', '30A1-30FA', '30FC-30FF', '3105-312D', '3131-318E', '31A0-31BA', '31F0-31FF', '3400-4DB5', '4E00-9FD5', 'A000-A48C', 'A4D0-A4FD', 'A500-A60C', 'A610-A61F', 0xA62A, 0xA62B, 'A640-A66E', 'A674-A67B', 'A67F-A6EF', 'A717-A71F', 'A722-A788', 'A78B-A7AE', 'A7B0-A7B7', 'A7F7-A801', 'A803-A805', 'A807-A80A', 'A80C-A827', 'A840-A873', 'A880-A8C3', 0xA8C5, 'A8F2-A8F7', 0xA8FB, 0xA8FD, 'A90A-A92A', 'A930-A952', 'A960-A97C', 'A980-A9B2', 'A9B4-A9BF', 0xA9CF, 'A9E0-A9E4', 'A9E6-A9EF', 'A9FA-A9FE', 'AA00-AA36', 'AA40-AA4D', 'AA60-AA76', 0xAA7A, 'AA7E-AABE', 0xAAC0, 0xAAC2, 'AADB-AADD', 'AAE0-AAEF', 'AAF2-AAF5', 'AB01-AB06', 'AB09-AB0E', 'AB11-AB16', 'AB20-AB26', 'AB28-AB2E', 'AB30-AB5A', 'AB5C-AB65', 'AB70-ABEA', 'AC00-D7A3', 'D7B0-D7C6', 'D7CB-D7FB', 'F900-FA6D', 'FA70-FAD9', 'FB00-FB06', 'FB13-FB17', 'FB1D-FB28', 'FB2A-FB36', 'FB38-FB3C', 0xFB3E, 0xFB40, 0xFB41, 0xFB43, 0xFB44, 'FB46-FBB1', 'FBD3-FD3D', 'FD50-FD8F', 'FD92-FDC7', 'FDF0-FDFB', 'FE70-FE74', 'FE76-FEFC', 'FF21-FF3A', 'FF41-FF5A', 'FF66-FFBE', 'FFC2-FFC7', 'FFCA-FFCF', 'FFD2-FFD7', 'FFDA-FFDC', '10000-1000B', '1000D-10026', '10028-1003A', 0x1003C, 0x1003D, '1003F-1004D', '10050-1005D', '10080-100FA', '10140-10174', '10280-1029C', '102A0-102D0', '10300-1031F', '10330-1034A', '10350-1037A', '10380-1039D', '103A0-103C3', '103C8-103CF', '103D1-103D5', '10400-1049D', '104B0-104D3', '104D8-104FB', '10500-10527', '10530-10563', '10600-10736', '10740-10755', '10760-10767', '10800-10805', 0x10808, '1080A-10835', 0x10837, 0x10838, 0x1083C, '1083F-10855', '10860-10876', '10880-1089E', '108E0-108F2', 0x108F4, 0x108F5, '10900-10915', '10920-10939', '10980-109B7', 0x109BE, 0x109BF, '10A00-10A03', 0x10A05, 0x10A06, '10A0C-10A13', '10A15-10A17', '10A19-10A33', '10A60-10A7C', '10A80-10A9C', '10AC0-10AC7', '10AC9-10AE4', '10B00-10B35', '10B40-10B55', '10B60-10B72', '10B80-10B91', '10C00-10C48', '10C80-10CB2', '10CC0-10CF2', '11000-11045', '11082-110B8', '110D0-110E8', '11100-11132', '11150-11172', 0x11176, '11180-111BF', '111C1-111C4', 0x111DA, 0x111DC, '11200-11211', '11213-11234', 0x11237, 0x1123E, '11280-11286', 0x11288, '1128A-1128D', '1128F-1129D', '1129F-112A8', '112B0-112E8', '11300-11303', '11305-1130C', 0x1130F, 0x11310, '11313-11328', '1132A-11330', 0x11332, 0x11333, '11335-11339', '1133D-11344', 0x11347, 0x11348, 0x1134B, 0x1134C, 0x11350, 0x11357, '1135D-11363', '11400-11441', '11443-11445', '11447-1144A', '11480-114C1', 0x114C4, 0x114C5, 0x114C7, '11580-115B5', '115B8-115BE', '115D8-115DD', '11600-1163E', 0x11640, 0x11644, '11680-116B5', '11700-11719', '1171D-1172A', '118A0-118DF', 0x118FF, '11AC0-11AF8', '11C00-11C08', '11C0A-11C36', '11C38-11C3E', 0x11C40, '11C72-11C8F', '11C92-11CA7', '11CA9-11CB6', '12000-12399', '12400-1246E', '12480-12543', '13000-1342E', '14400-14646', '16800-16A38', '16A40-16A5E', '16AD0-16AED', '16B00-16B36', '16B40-16B43', '16B63-16B77', '16B7D-16B8F', '16F00-16F44', '16F50-16F7E', '16F93-16F9F', 0x16FE0, '17000-187EC', '18800-18AF2', 0x1B000, 0x1B001, '1BC00-1BC6A', '1BC70-1BC7C', '1BC80-1BC88', '1BC90-1BC99', 0x1BC9E, '1D400-1D454', '1D456-1D49C', 0x1D49E, 0x1D49F, 0x1D4A2, 0x1D4A5, 0x1D4A6, '1D4A9-1D4AC', '1D4AE-1D4B9', 0x1D4BB, '1D4BD-1D4C3', '1D4C5-1D505', '1D507-1D50A', '1D50D-1D514', '1D516-1D51C', '1D51E-1D539', '1D53B-1D53E', '1D540-1D544', 0x1D546, '1D54A-1D550', '1D552-1D6A5', '1D6A8-1D6C0', '1D6C2-1D6DA', '1D6DC-1D6FA', '1D6FC-1D714', '1D716-1D734', '1D736-1D74E', '1D750-1D76E', '1D770-1D788', '1D78A-1D7A8', '1D7AA-1D7C2', '1D7C4-1D7CB', '1E000-1E006', '1E008-1E018', '1E01B-1E021', 0x1E023, 0x1E024, '1E026-1E02A', '1E800-1E8C4', '1E900-1E943', 0x1E947, '1EE00-1EE03', '1EE05-1EE1F', 0x1EE21, 0x1EE22, 0x1EE24, 0x1EE27, '1EE29-1EE32', '1EE34-1EE37', 0x1EE39, 0x1EE3B, 0x1EE42, 0x1EE47, 0x1EE49, 0x1EE4B, '1EE4D-1EE4F', 0x1EE51, 0x1EE52, 0x1EE54, 0x1EE57, 0x1EE59, 0x1EE5B, 0x1EE5D, 0x1EE5F, 0x1EE61, 0x1EE62, 0x1EE64, '1EE67-1EE6A', '1EE6C-1EE72', '1EE74-1EE77', '1EE79-1EE7C', 0x1EE7E, '1EE80-1EE89', '1EE8B-1EE9B', '1EEA1-1EEA3', '1EEA5-1EEA9', '1EEAB-1EEBB', '1F130-1F149', '1F150-1F169', '1F170-1F189', '20000-2A6D6', '2A700-2B734', '2B740-2B81D', '2B820-2CEA1', '2F800-2FA1D'],  # noqa
    'Any': ['0000-10FFFF'],
    # 'Assigned': [], # Defined as the inverse of category Cn
    'Default_Ignorable_Code_Point': [0x00AD, 0x034F, 0x061C, 0x115F, 0x1160, 0x17B4, 0x17B5, '180B-180E', '200B-200F', '202A-202E', '2060-206F', 0x3164, 'FE00-FE0F', 0xFEFF, 0xFFA0, 'FFF0-FFF8', '1BCA0-1BCA3', '1D173-1D17A', 'E0000-E0FFF'],  # noqa
    'Lowercase': ['0061-007A', 0x00AA, 0x00B5, 0x00BA, '00DF-00F6', '00F8-00FF', 0x0101, 0x0103, 0x0105, 0x0107, 0x0109, 0x010B, 0x010D, 0x010F, 0x0111, 0x0113, 0x0115, 0x0117, 0x0119, 0x011B, 0x011D, 0x011F, 0x0121, 0x0123, 0x0125, 0x0127, 0x0129, 0x012B, 0x012D, 0x012F, 0x0131, 0x0133, 0x0135, 0x0137, 0x0138, 0x013A, 0x013C, 0x013E, 0x0140, 0x0142, 0x0144, 0x0146, 0x0148, 0x0149, 0x014B, 0x014D, 0x014F, 0x0151, 0x0153, 0x0155, 0x0157, 0x0159, 0x015B, 0x015D, 0x015F, 0x0161, 0x0163, 0x0165, 0x0167, 0x0169, 0x016B, 0x016D, 0x016F, 0x0171, 0x0173, 0x0175, 0x0177, 0x017A, 0x017C, '017E-0180', 0x0183, 0x0185, 0x0188, 0x018C, 0x018D, 0x0192, 0x0195, '0199-019B', 0x019E, 0x01A1, 0x01A3, 0x01A5, 0x01A8, 0x01AA, 0x01AB, 0x01AD, 0x01B0, 0x01B4, 0x01B6, 0x01B9, 0x01BA, '01BD-01BF', 0x01C6, 0x01C9, 0x01CC, 0x01CE, 0x01D0, 0x01D2, 0x01D4, 0x01D6, 0x01D8, 0x01DA, 0x01DC, 0x01DD, 0x01DF, 0x01E1, 0x01E3, 0x01E5, 0x01E7, 0x01E9, 0x01EB, 0x01ED, 0x01EF, 0x01F0, 0x01F3, 0x01F5, 0x01F9, 0x01FB, 0x01FD, 0x01FF, 0x0201, 0x0203, 0x0205, 0x0207, 0x0209, 0x020B, 0x020D, 0x020F, 0x0211, 0x0213, 0x0215, 0x0217, 0x0219, 0x021B, 0x021D, 0x021F, 0x0221, 0x0223, 0x0225, 0x0227, 0x0229, 0x022B, 0x022D, 0x022F, 0x0231, '0233-0239', 0x023C, 0x023F, 0x0240, 0x0242, 0x0247, 0x0249, 0x024B, 0x024D, '024F-0293', '0295-02B8', 0x02C0, 0x02C1, '02E0-02E4', 0x0345, 0x0371, 0x0373, 0x0377, '037A-037D', 0x0390, '03AC-03CE', 0x03D0, 0x03D1, '03D5-03D7', 0x03D9, 0x03DB, 0x03DD, 0x03DF, 0x03E1, 0x03E3, 0x03E5, 0x03E7, 0x03E9, 0x03EB, 0x03ED, '03EF-03F3', 0x03F5, 0x03F8, 0x03FB, 0x03FC, '0430-045F', 0x0461, 0x0463, 0x0465, 0x0467, 0x0469, 0x046B, 0x046D, 0x046F, 0x0471, 0x0473, 0x0475, 0x0477, 0x0479, 0x047B, 0x047D, 0x047F, 0x0481, 0x048B, 0x048D, 0x048F, 0x0491, 0x0493, 0x0495, 0x0497, 0x0499, 0x049B, 0x049D, 0x049F, 0x04A1, 0x04A3, 0x04A5, 0x04A7, 0x04A9, 0x04AB, 0x04AD, 0x04AF, 0x04B1, 0x04B3, 0x04B5, 0x04B7, 0x04B9, 0x04BB, 0x04BD, 0x04BF, 0x04C2, 0x04C4, 0x04C6, 0x04C8, 0x04CA, 0x04CC, 0x04CE, 0x04CF, 0x04D1, 0x04D3, 0x04D5, 0x04D7, 0x04D9, 0x04DB, 0x04DD, 0x04DF, 0x04E1, 0x04E3, 0x04E5, 0x04E7, 0x04E9, 0x04EB, 0x04ED, 0x04EF, 0x04F1, 0x04F3, 0x04F5, 0x04F7, 0x04F9, 0x04FB, 0x04FD, 0x04FF, 0x0501, 0x0503, 0x0505, 0x0507, 0x0509, 0x050B, 0x050D, 0x050F, 0x0511, 0x0513, 0x0515, 0x0517, 0x0519, 0x051B, 0x051D, 0x051F, 0x0521, 0x0523, 0x0525, 0x0527, 0x0529, 0x052B, 0x052D, 0x052F, '0561-0587', '13F8-13FD', '1C80-1C88', '1D00-1DBF', 0x1E01, 0x1E03, 0x1E05, 0x1E07, 0x1E09, 0x1E0B, 0x1E0D, 0x1E0F, 0x1E11, 0x1E13, 0x1E15, 0x1E17, 0x1E19, 0x1E1B, 0x1E1D, 0x1E1F, 0x1E21, 0x1E23, 0x1E25, 0x1E27, 0x1E29, 0x1E2B, 0x1E2D, 0x1E2F, 0x1E31, 0x1E33, 0x1E35, 0x1E37, 0x1E39, 0x1E3B, 0x1E3D, 0x1E3F, 0x1E41, 0x1E43, 0x1E45, 0x1E47, 0x1E49, 0x1E4B, 0x1E4D, 0x1E4F, 0x1E51, 0x1E53, 0x1E55, 0x1E57, 0x1E59, 0x1E5B, 0x1E5D, 0x1E5F, 0x1E61, 0x1E63, 0x1E65, 0x1E67, 0x1E69, 0x1E6B, 0x1E6D, 0x1E6F, 0x1E71, 0x1E73, 0x1E75, 0x1E77, 0x1E79, 0x1E7B, 0x1E7D, 0x1E7F, 0x1E81, 0x1E83, 0x1E85, 0x1E87, 0x1E89, 0x1E8B, 0x1E8D, 0x1E8F, 0x1E91, 0x1E93, '1E95-1E9D', 0x1E9F, 0x1EA1, 0x1EA3, 0x1EA5, 0x1EA7, 0x1EA9, 0x1EAB, 0x1EAD, 0x1EAF, 0x1EB1, 0x1EB3, 0x1EB5, 0x1EB7, 0x1EB9, 0x1EBB, 0x1EBD, 0x1EBF, 0x1EC1, 0x1EC3, 0x1EC5, 0x1EC7, 0x1EC9, 0x1ECB, 0x1ECD, 0x1ECF, 0x1ED1, 0x1ED3, 0x1ED5, 0x1ED7, 0x1ED9, 0x1EDB, 0x1EDD, 0x1EDF, 0x1EE1, 0x1EE3, 0x1EE5, 0x1EE7, 0x1EE9, 0x1EEB, 0x1EED, 0x1EEF, 0x1EF1, 0x1EF3, 0x1EF5, 0x1EF7, 0x1EF9, 0x1EFB, 0x1EFD, '1EFF-1F07', '1F10-1F15', '1F20-1F27', '1F30-1F37', '1F40-1F45', '1F50-1F57', '1F60-1F67', '1F70-1F7D', '1F80-1F87', '1F90-1F97', '1FA0-1FA7', '1FB0-1FB4', 0x1FB6, 0x1FB7, 0x1FBE, '1FC2-1FC4', 0x1FC6, 0x1FC7, '1FD0-1FD3', 0x1FD6, 0x1FD7, '1FE0-1FE7', '1FF2-1FF4', 0x1FF6, 0x1FF7, 0x2071, 0x207F, '2090-209C', 0x210A, 0x210E, 0x210F, 0x2113, 0x212F, 0x2134, 0x2139, 0x213C, 0x213D, '2146-2149', 0x214E, '2170-217F', 0x2184, '24D0-24E9', '2C30-2C5E', 0x2C61, 0x2C65, 0x2C66, 0x2C68, 0x2C6A, 0x2C6C, 0x2C71, 0x2C73, 0x2C74, '2C76-2C7D', 0x2C81, 0x2C83, 0x2C85, 0x2C87, 0x2C89, 0x2C8B, 0x2C8D, 0x2C8F, 0x2C91, 0x2C93, 0x2C95, 0x2C97, 0x2C99, 0x2C9B, 0x2C9D, 0x2C9F, 0x2CA1, 0x2CA3, 0x2CA5, 0x2CA7, 0x2CA9, 0x2CAB, 0x2CAD, 0x2CAF, 0x2CB1, 0x2CB3, 0x2CB5, 0x2CB7, 0x2CB9, 0x2CBB, 0x2CBD, 0x2CBF, 0x2CC1, 0x2CC3, 0x2CC5, 0x2CC7, 0x2CC9, 0x2CCB, 0x2CCD, 0x2CCF, 0x2CD1, 0x2CD3, 0x2CD5, 0x2CD7, 0x2CD9, 0x2CDB, 0x2CDD, 0x2CDF, 0x2CE1, 0x2CE3, 0x2CE4, 0x2CEC, 0x2CEE, 0x2CF3, '2D00-2D25', 0x2D27, 0x2D2D, 0xA641, 0xA643, 0xA645, 0xA647, 0xA649, 0xA64B, 0xA64D, 0xA64F, 0xA651, 0xA653, 0xA655, 0xA657, 0xA659, 0xA65B, 0xA65D, 0xA65F, 0xA661, 0xA663, 0xA665, 0xA667, 0xA669, 0xA66B, 0xA66D, 0xA681, 0xA683, 0xA685, 0xA687, 0xA689, 0xA68B, 0xA68D, 0xA68F, 0xA691, 0xA693, 0xA695, 0xA697, 0xA699, 'A69B-A69D', 0xA723, 0xA725, 0xA727, 0xA729, 0xA72B, 0xA72D, 'A72F-A731', 0xA733, 0xA735, 0xA737, 0xA739, 0xA73B, 0xA73D, 0xA73F, 0xA741, 0xA743, 0xA745, 0xA747, 0xA749, 0xA74B, 0xA74D, 0xA74F, 0xA751, 0xA753, 0xA755, 0xA757, 0xA759, 0xA75B, 0xA75D, 0xA75F, 0xA761, 0xA763, 0xA765, 0xA767, 0xA769, 0xA76B, 0xA76D, 'A76F-A778', 0xA77A, 0xA77C, 0xA77F, 0xA781, 0xA783, 0xA785, 0xA787, 0xA78C, 0xA78E, 0xA791, 'A793-A795', 0xA797, 0xA799, 0xA79B, 0xA79D, 0xA79F, 0xA7A1, 0xA7A3, 0xA7A5, 0xA7A7, 0xA7A9, 0xA7B5, 0xA7B7, 'A7F8-A7FA', 'AB30-AB5A', 'AB5C-AB65', 'AB70-ABBF', 'FB00-FB06', 'FB13-FB17', 'FF41-FF5A', '10428-1044F', '104D8-104FB', '10CC0-10CF2', '118C0-118DF', '1D41A-1D433', '1D44E-1D454', '1D456-1D467', '1D482-1D49B', '1D4B6-1D4B9', 0x1D4BB, '1D4BD-1D4C3', '1D4C5-1D4CF', '1D4EA-1D503', '1D51E-1D537', '1D552-1D56B', '1D586-1D59F', '1D5BA-1D5D3', '1D5EE-1D607', '1D622-1D63B', '1D656-1D66F', '1D68A-1D6A5', '1D6C2-1D6DA', '1D6DC-1D6E1', '1D6FC-1D714', '1D716-1D71B', '1D736-1D74E', '1D750-1D755', '1D770-1D788', '1D78A-1D78F', '1D7AA-1D7C2', '1D7C4-1D7C9', 0x1D7CB, '1E922-1E943'],  # noqa
    'Noncharacter_Code_Point': ['FDD0-FDEF', 0xFFFE, 0xFFFF, 0x1FFFE, 0x1FFFF, 0x2FFFE, 0x2FFFF, 0x3FFFE, 0x3FFFF, 0x4FFFE, 0x4FFFF, 0x5FFFE, 0x5FFFF, 0x6FFFE, 0x6FFFF, 0x7FFFE, 0x7FFFF, 0x8FFFE, 0x8FFFF, 0x9FFFE, 0x9FFFF, 0xAFFFE, 0xAFFFF, 0xBFFFE, 0xBFFFF, 0xCFFFE, 0xCFFFF, 0xDFFFE, 0xDFFFF, 0xEFFFE, 0xEFFFF, 0xFFFFE, 0xFFFFF, 0x10FFFE, 0x10FFFF],  # noqa
    'Uppercase': ['0041-005A', '00C0-00D6', '00D8-00DE', 0x0100, 0x0102, 0x0104, 0x0106, 0x0108, 0x010A, 0x010C, 0x010E, 0x0110, 0x0112, 0x0114, 0x0116, 0x0118, 0x011A, 0x011C, 0x011E, 0x0120, 0x0122, 0x0124, 0x0126, 0x0128, 0x012A, 0x012C, 0x012E, 0x0130, 0x0132, 0x0134, 0x0136, 0x0139, 0x013B, 0x013D, 0x013F, 0x0141, 0x0143, 0x0145, 0x0147, 0x014A, 0x014C, 0x014E, 0x0150, 0x0152, 0x0154, 0x0156, 0x0158, 0x015A, 0x015C, 0x015E, 0x0160, 0x0162, 0x0164, 0x0166, 0x0168, 0x016A, 0x016C, 0x016E, 0x0170, 0x0172, 0x0174, 0x0176, 0x0178, 0x0179, 0x017B, 0x017D, 0x0181, 0x0182, 0x0184, 0x0186, 0x0187, '0189-018B', '018E-0191', 0x0193, 0x0194, '0196-0198', 0x019C, 0x019D, 0x019F, 0x01A0, 0x01A2, 0x01A4, 0x01A6, 0x01A7, 0x01A9, 0x01AC, 0x01AE, 0x01AF, '01B1-01B3', 0x01B5, 0x01B7, 0x01B8, 0x01BC, 0x01C4, 0x01C7, 0x01CA, 0x01CD, 0x01CF, 0x01D1, 0x01D3, 0x01D5, 0x01D7, 0x01D9, 0x01DB, 0x01DE, 0x01E0, 0x01E2, 0x01E4, 0x01E6, 0x01E8, 0x01EA, 0x01EC, 0x01EE, 0x01F1, 0x01F4, '01F6-01F8', 0x01FA, 0x01FC, 0x01FE, 0x0200, 0x0202, 0x0204, 0x0206, 0x0208, 0x020A, 0x020C, 0x020E, 0x0210, 0x0212, 0x0214, 0x0216, 0x0218, 0x021A, 0x021C, 0x021E, 0x0220, 0x0222, 0x0224, 0x0226, 0x0228, 0x022A, 0x022C, 0x022E, 0x0230, 0x0232, 0x023A, 0x023B, 0x023D, 0x023E, 0x0241, '0243-0246', 0x0248, 0x024A, 0x024C, 0x024E, 0x0370, 0x0372, 0x0376, 0x037F, 0x0386, '0388-038A', 0x038C, 0x038E, 0x038F, '0391-03A1', '03A3-03AB', 0x03CF, '03D2-03D4', 0x03D8, 0x03DA, 0x03DC, 0x03DE, 0x03E0, 0x03E2, 0x03E4, 0x03E6, 0x03E8, 0x03EA, 0x03EC, 0x03EE, 0x03F4, 0x03F7, 0x03F9, 0x03FA, '03FD-042F', 0x0460, 0x0462, 0x0464, 0x0466, 0x0468, 0x046A, 0x046C, 0x046E, 0x0470, 0x0472, 0x0474, 0x0476, 0x0478, 0x047A, 0x047C, 0x047E, 0x0480, 0x048A, 0x048C, 0x048E, 0x0490, 0x0492, 0x0494, 0x0496, 0x0498, 0x049A, 0x049C, 0x049E, 0x04A0, 0x04A2, 0x04A4, 0x04A6, 0x04A8, 0x04AA, 0x04AC, 0x04AE, 0x04B0, 0x04B2, 0x04B4, 0x04B6, 0x04B8, 0x04BA, 0x04BC, 0x04BE, 0x04C0, 0x04C1, 0x04C3, 0x04C5, 0x04C7, 0x04C9, 0x04CB, 0x04CD, 0x04D0, 0x04D2, 0x04D4, 0x04D6, 0x04D8, 0x04DA, 0x04DC, 0x04DE, 0x04E0, 0x04E2, 0x04E4, 0x04E6, 0x04E8, 0x04EA, 0x04EC, 0x04EE, 0x04F0, 0x04F2, 0x04F4, 0x04F6, 0x04F8, 0x04FA, 0x04FC, 0x04FE, 0x0500, 0x0502, 0x0504, 0x0506, 0x0508, 0x050A, 0x050C, 0x050E, 0x0510, 0x0512, 0x0514, 0x0516, 0x0518, 0x051A, 0x051C, 0x051E, 0x0520, 0x0522, 0x0524, 0x0526, 0x0528, 0x052A, 0x052C, 0x052E, '0531-0556', '10A0-10C5', 0x10C7, 0x10CD, '13A0-13F5', 0x1E00, 0x1E02, 0x1E04, 0x1E06, 0x1E08, 0x1E0A, 0x1E0C, 0x1E0E, 0x1E10, 0x1E12, 0x1E14, 0x1E16, 0x1E18, 0x1E1A, 0x1E1C, 0x1E1E, 0x1E20, 0x1E22, 0x1E24, 0x1E26, 0x1E28, 0x1E2A, 0x1E2C, 0x1E2E, 0x1E30, 0x1E32, 0x1E34, 0x1E36, 0x1E38, 0x1E3A, 0x1E3C, 0x1E3E, 0x1E40, 0x1E42, 0x1E44, 0x1E46, 0x1E48, 0x1E4A, 0x1E4C, 0x1E4E, 0x1E50, 0x1E52, 0x1E54, 0x1E56, 0x1E58, 0x1E5A, 0x1E5C, 0x1E5E, 0x1E60, 0x1E62, 0x1E64, 0x1E66, 0x1E68, 0x1E6A, 0x1E6C, 0x1E6E, 0x1E70, 0x1E72, 0x1E74, 0x1E76, 0x1E78, 0x1E7A, 0x1E7C, 0x1E7E, 0x1E80, 0x1E82, 0x1E84, 0x1E86, 0x1E88, 0x1E8A, 0x1E8C, 0x1E8E, 0x1E90, 0x1E92, 0x1E94, 0x1E9E, 0x1EA0, 0x1EA2, 0x1EA4, 0x1EA6, 0x1EA8, 0x1EAA, 0x1EAC, 0x1EAE, 0x1EB0, 0x1EB2, 0x1EB4, 0x1EB6, 0x1EB8, 0x1EBA, 0x1EBC, 0x1EBE, 0x1EC0, 0x1EC2, 0x1EC4, 0x1EC6, 0x1EC8, 0x1ECA, 0x1ECC, 0x1ECE, 0x1ED0, 0x1ED2, 0x1ED4, 0x1ED6, 0x1ED8, 0x1EDA, 0x1EDC, 0x1EDE, 0x1EE0, 0x1EE2, 0x1EE4, 0x1EE6, 0x1EE8, 0x1EEA, 0x1EEC, 0x1EEE, 0x1EF0, 0x1EF2, 0x1EF4, 0x1EF6, 0x1EF8, 0x1EFA, 0x1EFC, 0x1EFE, '1F08-1F0F', '1F18-1F1D', '1F28-1F2F', '1F38-1F3F', '1F48-1F4D', 0x1F59, 0x1F5B, 0x1F5D, 0x1F5F, '1F68-1F6F', '1FB8-1FBB', '1FC8-1FCB', '1FD8-1FDB', '1FE8-1FEC', '1FF8-1FFB', 0x2102, 0x2107, '210B-210D', '2110-2112', 0x2115, '2119-211D', 0x2124, 0x2126, 0x2128, '212A-212D', '2130-2133', 0x213E, 0x213F, 0x2145, '2160-216F', 0x2183, '24B6-24CF', '2C00-2C2E', 0x2C60, '2C62-2C64', 0x2C67, 0x2C69, 0x2C6B, '2C6D-2C70', 0x2C72, 0x2C75, '2C7E-2C80', 0x2C82, 0x2C84, 0x2C86, 0x2C88, 0x2C8A, 0x2C8C, 0x2C8E, 0x2C90, 0x2C92, 0x2C94, 0x2C96, 0x2C98, 0x2C9A, 0x2C9C, 0x2C9E, 0x2CA0, 0x2CA2, 0x2CA4, 0x2CA6, 0x2CA8, 0x2CAA, 0x2CAC, 0x2CAE, 0x2CB0, 0x2CB2, 0x2CB4, 0x2CB6, 0x2CB8, 0x2CBA, 0x2CBC, 0x2CBE, 0x2CC0, 0x2CC2, 0x2CC4, 0x2CC6, 0x2CC8, 0x2CCA, 0x2CCC, 0x2CCE, 0x2CD0, 0x2CD2, 0x2CD4, 0x2CD6, 0x2CD8, 0x2CDA, 0x2CDC, 0x2CDE, 0x2CE0, 0x2CE2, 0x2CEB, 0x2CED, 0x2CF2, 0xA640, 0xA642, 0xA644, 0xA646, 0xA648, 0xA64A, 0xA64C, 0xA64E, 0xA650, 0xA652, 0xA654, 0xA656, 0xA658, 0xA65A, 0xA65C, 0xA65E, 0xA660, 0xA662, 0xA664, 0xA666, 0xA668, 0xA66A, 0xA66C, 0xA680, 0xA682, 0xA684, 0xA686, 0xA688, 0xA68A, 0xA68C, 0xA68E, 0xA690, 0xA692, 0xA694, 0xA696, 0xA698, 0xA69A, 0xA722, 0xA724, 0xA726, 0xA728, 0xA72A, 0xA72C, 0xA72E, 0xA732, 0xA734, 0xA736, 0xA738, 0xA73A, 0xA73C, 0xA73E, 0xA740, 0xA742, 0xA744, 0xA746, 0xA748, 0xA74A, 0xA74C, 0xA74E, 0xA750, 0xA752, 0xA754, 0xA756, 0xA758, 0xA75A, 0xA75C, 0xA75E, 0xA760, 0xA762, 0xA764, 0xA766, 0xA768, 0xA76A, 0xA76C, 0xA76E, 0xA779, 0xA77B, 0xA77D, 0xA77E, 0xA780, 0xA782, 0xA784, 0xA786, 0xA78B, 0xA78D, 0xA790, 0xA792, 0xA796, 0xA798, 0xA79A, 0xA79C, 0xA79E, 0xA7A0, 0xA7A2, 0xA7A4, 0xA7A6, 0xA7A8, 'A7AA-A7AE', 'A7B0-A7B4', 0xA7B6, 'FF21-FF3A', '10400-10427', '104B0-104D3', '10C80-10CB2', '118A0-118BF', '1D400-1D419', '1D434-1D44D', '1D468-1D481', 0x1D49C, 0x1D49E, 0x1D49F, 0x1D4A2, 0x1D4A5, 0x1D4A6, '1D4A9-1D4AC', '1D4AE-1D4B5', '1D4D0-1D4E9', 0x1D504, 0x1D505, '1D507-1D50A', '1D50D-1D514', '1D516-1D51C', 0x1D538, 0x1D539, '1D53B-1D53E', '1D540-1D544', 0x1D546, '1D54A-1D550', '1D56C-1D585', '1D5A0-1D5B9', '1D5D4-1D5ED', '1D608-1D621', '1D63C-1D655', '1D670-1D689', '1D6A8-1D6C0', '1D6E2-1D6FA', '1D71C-1D734', '1D756-1D76E', '1D790-1D7A8', 0x1D7CA, '1E900-1E921', '1F130-1F149', '1F150-1F169', '1F170-1F189'],  # noqa
=================
1214496
count:1
    Take a command (either a single command or list of arguments) and return
    the environment created after running that command. Note that the command
    must be a batch (``.bat``) file or ``.cmd`` file, or the changes to the
    environment will not be captured.

    If ``initial_env`` is supplied, it is used as the initial environment
    passed to the child process. (Otherwise, this process's ``os.environ()``
    will be used by default.)

    From https://stackoverflow.com/questions/1214496/how-to-get-environment-from-a-subprocess-in-python,
    with decoding bug fixed for Python 3.

    PURPOSE: under Windows, ``VCVARSALL.BAT`` sets up a lot of environment
    variables to compile for a specific target architecture. We want to be able
    to read them, not to replicate its work.
    
    METHOD: create a composite command that executes the specified command, 
    then echoes an unusual string tag, then prints the environment via ``SET``;
    capture the output, work out what came from ``SET``.

=================
34124636
count:1
            if not in_quote:
                return True
    return False


def contains_unquoted_ampersand_dangerous_to_windows(x: str) -> bool:
    """
    Under Windows, if an ampersand is in a path and is not quoted, it'll break
    lots of things.
    See https://stackoverflow.com/questions/34124636.
    Simple example:

    .. code-block:: bat

        set RUBBISH=a & b           # 'b' is not recognizable as a... command
        set RUBBISH='a & b'         # 'b'' is not recognizable as a... command
        set RUBBISH="a & b"         # OK

    ... and you get similar knock-on effects, e.g. if you set RUBBISH using the
    Control Panel to the literal
=================
2953462
count:1
**Network support functions.**

NOTES:

- ``ping`` requires root authority to create ICMP sockets in Linux
- the ``/bin/ping`` command doesn't need prior root authority (because it has
  the setuid bit set)
- For Linux, it's therefore best to use the system ``ping``.

http://stackoverflow.com/questions/2953462/pinging-servers-in-python
http://stackoverflow.com/questions/316866/ping-a-site-in-python

- Note that if you want a sub-second timeout, things get trickier.
  One option is ``fping``.

"""

import os
import ssl
import subprocess
=================
316866
count:1

NOTES:

- ``ping`` requires root authority to create ICMP sockets in Linux
- the ``/bin/ping`` command doesn't need prior root authority (because it has
  the setuid bit set)
- For Linux, it's therefore best to use the system ``ping``.

http://stackoverflow.com/questions/2953462/pinging-servers-in-python
http://stackoverflow.com/questions/316866/ping-a-site-in-python

- Note that if you want a sub-second timeout, things get trickier.
  One option is ``fping``.

"""

import os
import ssl
import subprocess
import sys
=================
27804710
count:1
    """
    log.info("Downloading from {} to {}", url, filename)

    # urllib.request.urlretrieve(url, filename)
    # ... sometimes fails (e.g. downloading
    # https://www.openssl.org/source/openssl-1.1.0g.tar.gz under Windows) with:
    # ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777)  # noqa
    # ... due to this certificate root problem (probably because OpenSSL
    #     [used by Python] doesn't play entirely by the same rules as others?):
    # https://stackoverflow.com/questions/27804710
    # So:

    ctx = ssl.create_default_context()  # type: ssl.SSLContext
    if skip_cert_verify:
        log.debug("Skipping SSL certificate check for " + url)
        ctx.check_hostname = False
        ctx.verify_mode = ssl.CERT_NONE
    with urllib.request.urlopen(url, context=ctx) as u, open(filename,
                                                             'wb') as f:  # noqa
        f.write(u.read())
=================
530526
count:1
    return html.escape(value) if value is not None else None


def get_cgi_fieldstorage_from_wsgi_env(
        env: Dict[str, str],
        include_query_string: bool = True) -> cgi.FieldStorage:
    """
    Returns a :class:`cgi.FieldStorage` object from the WSGI environment.
    """
    # http://stackoverflow.com/questions/530526/accessing-post-data-from-wsgi
    post_env = env.copy()
    if not include_query_string:
        post_env['QUERY_STRING'] = ''
    form = cgi.FieldStorage(
        fp=env['wsgi.input'],
        environ=post_env,
        keep_blank_values=True
    )
    return form

=================
151079
count:1
        get_png_data_url(blob)
    )


# =============================================================================
# HTTP results
# =============================================================================

# Also, filenames:
#   http://stackoverflow.com/questions/151079
#   http://greenbytes.de/tech/tc2231/#inlwithasciifilenamepdf

def pdf_result(pdf_binary: bytes,
               extraheaders: TYPE_WSGI_RESPONSE_HEADERS = None,
               filename: str = None) -> WSGI_TUPLE_TYPE:
    """
    Returns ``(contenttype, extraheaders, data)`` tuple for a PDF.
    """
    extraheaders = extraheaders or []
    if filename:
=================
1061697
count:1
        v = str(v)
    return html.escape(v).replace("\n", nl).replace("\\n", nl)


def websafe(value: str) -> str:
    """
    Makes a string safe for inclusion in ASCII-encoded HTML.
    """
    return html.escape(value).encode('ascii', 'xmlcharrefreplace')
    # http://stackoverflow.com/questions/1061697


def replace_nl_with_html_br(string: str) -> str:
    """
    Replaces newlines with ``<br>``.
    """
    return _NEWLINE_REGEX.sub("<br>", string)


def bold_if_not_blank(x: Optional[str]) -> str:
=================
1071191
count:1
    return f"<b>{x}</b>"


def make_urls_hyperlinks(text: str) -> str:
    """
    Adds hyperlinks to text that appears to contain URLs.

    See

    - http://stackoverflow.com/questions/1071191

      - ... except that double-replaces everything; e.g. try with
        ``text = "me@somewhere.com me@somewhere.com"``

    - http://stackp.online.fr/?p=19
    """
    find_url = r'''
        (?x)(              # verbose identify URLs within text
        (http|ftp|gopher)  # make sure we find a resource type
        ://                # ...needs to be followed by colon-slash-slash
=================
10397968
count:1
        (/?|               # could be just the domain name (maybe w/ slash)
        [^ \n\r"]+         # or stuff then space, newline, tab, quote
        [\w/])             # resource name ends in alphanumeric or slash
        (?=[\s\.,>)'"\]])  # assert: followed by white or clause ending
        )                  # end of match group
    '''
    replace_url = r'<a href="\1">\1</a>'
    find_email = re.compile(r'([.\w\-]+@(\w[\w\-]+\.)+[\w\-]+)')
    # '.' doesn't need escaping inside square brackets
    # https://stackoverflow.com/questions/10397968/escape-dot-in-a-regex-range
    replace_email = r'<a href="mailto:\1">\1</a>'
    text = re.sub(find_url, replace_url, text)
    text = re.sub(find_email, replace_email, text)
    return text


# noinspection PyShadowingNames
def html_table_from_query(rows: Iterable[Iterable[Optional[str]]],
                          descriptions: Iterable[Optional[str]]) -> str:
    """
=================
1883980
count:1
    Finds the position of *n*\ th occurrence of ``x`` in ``s``, or ``-1`` if
    there isn't one.

    - The ``n`` parameter is zero-based (i.e. 0 for the first, 1 for the
      second...).
    - If ``overlap`` is true, allows fragments to overlap. If not, they must be
      distinct.
      
    As per
    https://stackoverflow.com/questions/1883980/find-the-nth-occurrence-of-substring-in-a-string 
    """  # noqa
    length_of_fragment = 1 if overlap else len(x)
    i = -length_of_fragment
    for _ in range(n + 1):
        i = s.find(x, i + length_of_fragment)
        if i < 0:
            break
    return i


=================
9475241
count:1

# =============================================================================
# Splitting
# =============================================================================

def split_string(x: str, n: int) -> List[str]:
    """
    Split string into chunks of length n
    """
    # https://stackoverflow.com/questions/9475241/split-string-every-nth-character  # noqa
    return [x[i:i+n] for i in range(0, len(x), n)]


# =============================================================================
# Replacement
# =============================================================================

def multiple_replace(text: str, rep: Dict[str, str]) -> str:
    """
    Returns a version of ``text`` in which the keys of ``rep`` (a dict) have
=================
6116978
count:1
# Replacement
# =============================================================================

def multiple_replace(text: str, rep: Dict[str, str]) -> str:
    """
    Returns a version of ``text`` in which the keys of ``rep`` (a dict) have
    been replaced by their values.

    As per
    http://stackoverflow.com/questions/6116978/python-replace-multiple-strings.
    """
    rep = dict((re.escape(k), v) for k, v in rep.items())
    pattern = re.compile("|".join(rep.keys()))
    return pattern.sub(lambda m: rep[re.escape(m.group(0))], text)


def replace_in_list(stringlist: Iterable[str],
                    replacedict: Dict[str, str]) -> List[str]:
    """
    Returns a list produced by applying :func:`multiple_replace` to every
=================
1207457
count:1

# =============================================================================
# Mangling to ASCII
# =============================================================================

def mangle_unicode_to_ascii(s: Any) -> str:
    """
    Mangle unicode to ASCII, losing accents etc. in the process.
    """
    # http://stackoverflow.com/questions/1207457
    if s is None:
        return ""
    if not isinstance(s, str):
        s = str(s)
    return (
        unicodedata.normalize('NFKD', s)
                   .encode('ascii', 'ignore')  # gets rid of accents
                   .decode('ascii')  # back to a string
    )

=================
30254739
count:1
        bd[80]  # 'high'
        bd[50]  # 'medium'
        bd[-5]  # raises KeyError
    
    Various implementation alternatives:
    
    - http://joshuakugler.com/archives/30-BetweenDict,-a-Python-dict-for-value-ranges.html
      ... NB has initialization default argument bug
    - https://pypi.python.org/pypi/rangedict/0.1.5
    - http://stackoverflow.com/questions/30254739/is-there-a-library-implemented-rangedict-in-python
    """  # noqa
    INVALID_MSG_TYPE = "Key must be an iterable with length 2"
    INVALID_MSG_VALUE = "First element of key must be less than second element"

    # noinspection PyMissingConstructor
    def __init__(self, d: Dict = None) -> None:
        d = d or {}
        for k, v in d.items():
            self[k] = v

=================
42980201
count:1
    crashing with ``ValueError: math domain error``.

    Args:
        x: parameter

    Returns:
        float: ln(x), the natural logarithm of x

    See
    https://stackoverflow.com/questions/42980201/logarithm-of-zero-in-python.

    For speed, use ``from math import log as math_log``, etc.:

    .. code-block: python

        import math
        from math import log as math_log
        import timeit
        INFINITY = math.inf
        MINUS_INFINITY = -math.inf
=================
42980201
count:1
    crashing with ``ValueError: math domain error``.

    Args:
        x: parameter

    Returns:
        float: log10(x), the logarithm to base 10 of x

    See
    https://stackoverflow.com/questions/42980201/logarithm-of-zero-in-python.
    """
    return math_log10(x) if x != 0 else MINUS_INFINITY


# =============================================================================
# Basic probability
# =============================================================================

def odds_from_probability(p: float) -> float:
    r"""
=================
9157210
count:1
# =============================================================================
# Exception handling
# =============================================================================

def add_info_to_exception(err: Exception, info: Dict) -> None:
    """
    Adds an information dictionary to an exception.
    
    See
    http://stackoverflow.com/questions/9157210/how-do-i-raise-the-same-exception-with-a-custom-message-in-python
    
    Args:
        err: the exception to be modified
        info: the information to add
    """  # noqa
    if not err.args:
        err.args = ('', )
    err.args += (info, )


=================
9555133
count:1


def die(exc: Exception = None, exit_code: int = 1) -> None:
    """
    It is not clear that Python guarantees to exit with a non-zero exit code
    (errorlevel in DOS/Windows) upon an unhandled exception. So this function
    produces the usual stack trace then dies with the specified exit code.

    See
    http://stackoverflow.com/questions/9555133/e-printstacktrace-equivalent-in-python.

    Test code:
    
    .. code-block:: python

        import logging
        import sys
        import traceback
        logging.basicConfig(level=logging.DEBUG)
        log = logging.getLogger()
=================
22094852
count:1
                'print_good': args.good,
                'delete_if_bad': args.delete_if_bad,
            }
            # log.critical("start")
            pool.apply_async(process_openxml_file, [], kwargs)
            # result = pool.apply_async(process_file, [], kwargs)
            # result.get()  # will re-raise any child exceptions
            # ... but it waits for the process to complete! That's no help.
            # log.critical("next")
            # ... https://stackoverflow.com/questions/22094852/how-to-catch-exceptions-in-workers-in-multiprocessing  # noqa
        pool.close()
        pool.join()

        log.debug("Finished scan.")
        if args.run_repeatedly is None:
            break
        log.info("Sleeping for {} s...", args.run_repeatedly)
        sleep(args.run_repeatedly)


=================
19924104
count:1
                log.info("Deleting: " + filename)
                os.remove(filename)
    except Exception as e:
        # Must explicitly catch and report errors, since otherwise they vanish
        # into the ether.
        log.critical("Uncaught error in subprocess: {!r}\n{}", e,
                     traceback.format_exc())
        raise
        # See also good advice, not implemented here, at
        # https://stackoverflow.com/questions/19924104/python-multiprocessing-handling-child-errors-in-parent  # noqa
        # https://stackoverflow.com/questions/6126007/python-getting-a-traceback-from-a-multiprocessing-process/26096355#26096355  # noqa
    # log.critical("process_file: end")


def main() -> None:
    """
    Command-line handler for the ``find_recovered_openxml`` tool.
    Use the ``--help`` option for help.
    """
    parser = ArgumentParser(
=================
26096355
count:1
                os.remove(filename)
    except Exception as e:
        # Must explicitly catch and report errors, since otherwise they vanish
        # into the ether.
        log.critical("Uncaught error in subprocess: {!r}\n{}", e,
                     traceback.format_exc())
        raise
        # See also good advice, not implemented here, at
        # https://stackoverflow.com/questions/19924104/python-multiprocessing-handling-child-errors-in-parent  # noqa
        # https://stackoverflow.com/questions/6126007/python-getting-a-traceback-from-a-multiprocessing-process/26096355#26096355  # noqa
    # log.critical("process_file: end")


def main() -> None:
    """
    Command-line handler for the ``find_recovered_openxml`` tool.
    Use the ``--help`` option for help.
    """
    parser = ArgumentParser(
        formatter_class=RawDescriptionHelpFormatter,
=================
22094852
count:1
                    args.delete_if_not_specified_file_type,
                'show_zip_output': args.show_zip_output,
            }
            # log.critical("start")
            pool.apply_async(process_file, [], kwargs)
            # result = pool.apply_async(process_file, [], kwargs)
            # result.get()  # will re-raise any child exceptions
            # ... but it waits for the process to complete! That's no help.
            # log.critical("next")
            # ... https://stackoverflow.com/questions/22094852/how-to-catch-exceptions-in-workers-in-multiprocessing  # noqa
        pool.close()
        pool.join()

        log.info("Finished scan.")
        if args.run_repeatedly is None:
            break
        log.info("Sleeping for {} s...", args.run_repeatedly)
        sleep(args.run_repeatedly)


=================
1230669
count:1
# (via subprocess) can leave orphans.
# =============================================================================

def kill_proc_tree(pid: int,
                   including_parent: bool = True,
                   timeout_s: float = 5) \
        -> Tuple[Set[psutil.Process], Set[psutil.Process]]:
    """
    Kills a tree of processes, starting with the parent. Slightly modified from
    https://stackoverflow.com/questions/1230669/subprocess-deleting-child-processes-in-windows.
    
    Args:
        pid: process ID of the parent
        including_parent: kill the parent too?
        timeout_s: timeout to wait for processes to close

    Returns:
        tuple: ``(gone, still_alive)``, where both are sets of
        :class:`psutil.Process` objects

=================
34458583
count:1
# =============================================================================

def nice_call(*popenargs, timeout: float = None,
              cleanup_timeout: float = None, **kwargs) -> int:
    """
    Like :func:`subprocess.call`, but give the child process time to
    clean up and communicate if a :exc:`KeyboardInterrupt` is raised.
    
    Modified from
    https://stackoverflow.com/questions/34458583/python-subprocess-call-doesnt-handle-signal-correctly
    """  # noqa
    with subprocess.Popen(*popenargs, **kwargs) as p:
        try:
            return p.wait(timeout=timeout)
        except KeyboardInterrupt:
            log.error("KeyboardInterrupt received")
            if cleanup_timeout:
                # Wait again, now that the child has received SIGINT, too.
                log.info(f"Waiting {cleanup_timeout} seconds "
                         f"for child process {p.pid} to finish...")
=================
17602878
count:1
@contextmanager
def smart_open(filename: str, mode: str = 'Ur', buffering: int = -1,
               encoding: str = None, errors: str = None, newline: str = None,
               closefd: bool = True) -> IO:
    """
    Context manager (for use with ``with``) that opens a filename and provides
    a :class:`IO` object. If the filename is ``'-'``, however, then
    ``sys.stdin`` is used for reading and ``sys.stdout`` is used for writing.
    """
    # https://stackoverflow.com/questions/17602878/how-to-handle-both-with-open-and-sys-stdout-nicely  # noqa
    # https://stackoverflow.com/questions/1744989/read-from-file-or-stdin/29824059#29824059  # noqa
    if filename == '-':
        if mode is None or mode == '' or 'r' in mode:
            fh = sys.stdin
        else:
            fh = sys.stdout
    else:
        fh = open(filename, mode=mode,
                  buffering=buffering, encoding=encoding, errors=errors,
                  newline=newline, closefd=closefd)
=================
29824059
count:1
def smart_open(filename: str, mode: str = 'Ur', buffering: int = -1,
               encoding: str = None, errors: str = None, newline: str = None,
               closefd: bool = True) -> IO:
    """
    Context manager (for use with ``with``) that opens a filename and provides
    a :class:`IO` object. If the filename is ``'-'``, however, then
    ``sys.stdin`` is used for reading and ``sys.stdout`` is used for writing.
    """
    # https://stackoverflow.com/questions/17602878/how-to-handle-both-with-open-and-sys-stdout-nicely  # noqa
    # https://stackoverflow.com/questions/1744989/read-from-file-or-stdin/29824059#29824059  # noqa
    if filename == '-':
        if mode is None or mode == '' or 'r' in mode:
            fh = sys.stdin
        else:
            fh = sys.stdout
    else:
        fh = open(filename, mode=mode,
                  buffering=buffering, encoding=encoding, errors=errors,
                  newline=newline, closefd=closefd)
    try:
=================
13730107
count:1
    """
    fileobj.write(line + '\n')


def writelines_nl(fileobj: TextIO, lines: Iterable[str]) -> None:
    """
    Writes lines, plus terminating newline characters, to the file.

    (Since :func:`fileobj.writelines` doesn't add newlines...
    http://stackoverflow.com/questions/13730107/writelines-writes-lines-without-newline-just-fills-the-file)
    """  # noqa
    fileobj.write('\n'.join(lines) + '\n')


def write_text(filename: str, text: str) -> None:
    """
    Writes text to a file.
    """
    with open(filename, 'w') as f:  # type: TextIO
        print(text, file=f)
=================
25728472
count:1
def write_gzipped_text(basefilename: str, text: str) -> None:
    """
    Writes text to a file compressed with ``gzip`` (a ``.gz`` file).
    The filename is used directly for the "inner" file and the extension
    ``.gz`` is appended to the "outer" (zipped) file's name.
    
    This function exists primarily because Lintian wants non-timestamped gzip
    files, or it complains:
    - https://lintian.debian.org/tags/package-contains-timestamped-gzip.html
    - See http://stackoverflow.com/questions/25728472/python-gzip-omit-the-original-filename-and-timestamp
    """  # noqa
    zipfilename = basefilename + '.gz'
    compresslevel = 9
    mtime = 0
    with open(zipfilename, 'wb') as f:
        with gzip.GzipFile(basefilename, 'wb', compresslevel, f, mtime) as gz:
            with io.TextIOWrapper(gz) as tw:
                tw.write(text)


=================
12821961
count:1

    Args:
        zipfilenames_or_files: iterable of filenames or :class:`BinaryIO`
            file-like objects, giving the ``.zip`` files
        filespec: filespec to filter the "inner" files against
        on_disk: if ``True``, extracts inner files to disk yields file-like
            objects that access disk files (and are therefore seekable); if
            ``False``, extracts them in memory and yields file-like objects to
            those memory files (which will not be seekable; e.g.
            https://stackoverflow.com/questions/12821961/)

    Yields:
        file-like object for each inner file matching ``filespec``; may be
        in memory or on disk, as per ``on_disk``

    """
    for zipfilename_or_file in zipfilenames_or_files:
        with zipfile.ZipFile(zipfilename_or_file) as zf:
            infolist = zf.infolist()  # type: List[zipfile.ZipInfo]
            infolist.sort(key=attrgetter('filename'))
=================
12821961
count:1
                log.debug("Reading subfile {}", zipinfo.filename)
                if on_disk:
                    with tempfile.TemporaryDirectory() as tmpdir:
                        zf.extract(zipinfo.filename, tmpdir)
                        diskfilename = os.path.join(tmpdir, zipinfo.filename)
                        with open(diskfilename, 'rb') as subfile:
                            yield subfile
                else:
                    # Will not be seekable; e.g.
                    # https://stackoverflow.com/questions/12821961/
                    with zf.open(zipinfo.filename) as subfile:
                        yield subfile


def gen_part_from_line(lines: Iterable[str],
                       part_index: int,
                       splitter: str = None) -> Generator[str, None, None]:
    """
    Splits lines with ``splitter`` and yields a specified part by index.

=================
12771480
count:1
    Args:
        iterables: iterable of anything
        part_index: part index

    Yields:
        ``item[part_index] for item in iterable``

    """
    # RST: make part of word bold/italic:
    # https://stackoverflow.com/questions/12771480/part-of-a-word-bold-in-restructuredtext  # noqa
    for iterable in iterables:
        yield iterable[part_index]


def gen_rows_from_csv_binfiles(
        csv_files: Iterable[BinaryIO],
        encoding: str = UTF8,
        skip_header: bool = False,
        **csv_reader_kwargs) -> Generator[Iterable[str], None, None]:
    """
=================
3647692
count:1
# bool
# =============================================================================

def is_false(x: Any) -> bool:
    """
    Positively false? Evaluates: ``not x and x is not None``.
    """
    # beware: "0 is False" evaluates to False -- AVOID "is False"!
    # ... but "0 == False" evaluates to True
    # http://stackoverflow.com/questions/3647692/
    # ... but comparisons to booleans with "==" fail PEP8:
    # http://legacy.python.org/dev/peps/pep-0008/
    # ... so use e.g. "bool(x)" or "x" or "not x"
    # http://google-styleguide.googlecode.com/svn/trunk/pyguide.html?showone=True/False_evaluations#True/False_evaluations  # noqa
=================
3365740
count:1
    Args:
        package: package (name or actual module)
        base_package_for_relative_import: path to prepend?
        recursive: import submodules too?

    Returns:
        dict: mapping from full module name to module

    """
    # http://stackoverflow.com/questions/3365740/how-to-import-all-submodules
    if isinstance(package, str):
        package = importlib.import_module(package,
                                          base_package_for_relative_import)
    results = {}
    for loader, name, is_pkg in pkgutil.walk_packages(package.__path__):
        full_name = package.__name__ + '.' + name
        log.debug("importing: {}", full_name)
        results[full_name] = importlib.import_module(full_name)
        if recursive and is_pkg:
            results.update(import_submodules(full_name))
=================
20339053
count:1

def is_module_a_package(module: ModuleType) -> bool:
    assert inspect.ismodule(module)
    return os.path.basename(inspect.getfile(module)) == "__init__.py"


def is_c_extension(module: ModuleType) -> bool:
    """
    Modified from
    https://stackoverflow.com/questions/20339053/in-python-how-can-one-tell-if-a-module-comes-from-a-c-extension.
    
    ``True`` only if the passed module is a C extension implemented as a
    dynamically linked shared library specific to the current platform.

    Args:
        module: Previously imported module object to be tested.

    Returns:
        bool: ``True`` only if this module is a C extension.
        
=================
3365740
count:1
            return True

    if import_all_submodules:
        if not is_module_a_package(module):
            log.debug("Top-level module is not a package: {!r}", module)
            return False

        # Otherwise, for things like Django, we need to recurse in a different
        # way to scan everything.
        # See https://stackoverflow.com/questions/3365740/how-to-import-all-submodules.  # noqa
        log.debug("Walking path: {!r}", top_path)
        # noinspection PyBroadException
        try:
            for loader, module_name, is_pkg in pkgutil.walk_packages([top_path]):  # noqa
                if not is_pkg:
                    log.debug("Skipping, not a package: {!r}", module_name)
                    continue
                log.debug("Manually importing: {!r}", module_name)
                # noinspection PyBroadException
                try:
=================
20638040
count:1
        Args:
            filename: filename
            globtext: glob

        Returns:
            does the filename match the glob?

        See also:

        - https://stackoverflow.com/questions/20638040/glob-exclude-pattern

        """
        # Quick check on basename-only matching
        if fnmatch(filename, globtext):
            log.debug("{!r} matches {!r}", filename, globtext)
            return True
        bname = basename(filename)
        if fnmatch(bname, globtext):
            log.debug("{!r} matches {!r}", bname, globtext)
            return True
=================
1776994
count:1

from typing import Generator, List, Type, TypeVar


# =============================================================================
# Does a derived class implement a method?
# =============================================================================

"""
http://stackoverflow.com/questions/1776994
https://docs.python.org/3/library/inspect.html
https://github.com/edoburu/django-fluent-contents/issues/43
https://bytes.com/topic/python/answers/843424-python-2-6-3-0-determining-if-method-inherited  # noqa
https://docs.python.org/3/reference/datamodel.html

In Python 2, you can do this:
    return derived_method.__func__ != base_method.__func__
In Python 3.4:
    ...

=================
3862310
count:1
    #     return derived_method.__func__ != base_method.__func__
    # else:
    #     return derived_method is not base_method
    return derived_method is not base_method


# =============================================================================
# Subclasses
# =============================================================================
# https://stackoverflow.com/questions/3862310/how-can-i-find-all-subclasses-of-a-class-given-its-name  # noqa

def gen_all_subclasses(cls: Type) -> Generator[Type, None, None]:
    """
    Generates all subclasses of a class.

    Args:
        cls: a class

    Yields:
        all subclasses
=================
128573
count:1
# Class properties
# =============================================================================

class ClassProperty(property):
    """
    One way to mark a function as a class property (logically, a combination of
    ``@classmethod`` and ``@property``).

    See
    https://stackoverflow.com/questions/128573/using-property-on-classmethods.

    However, in practice we use :class:`classproperty`, a slightly different
    version.
    """
    # https://stackoverflow.com/questions/128573/using-property-on-classmethods
    # noinspection PyMethodOverriding
    def __get__(self, cls, owner):
        # noinspection PyUnresolvedReferences
        return self.fget.__get__(None, owner)()

=================
128573
count:1
    One way to mark a function as a class property (logically, a combination of
    ``@classmethod`` and ``@property``).

    See
    https://stackoverflow.com/questions/128573/using-property-on-classmethods.

    However, in practice we use :class:`classproperty`, a slightly different
    version.
    """
    # https://stackoverflow.com/questions/128573/using-property-on-classmethods
    # noinspection PyMethodOverriding
    def __get__(self, cls, owner):
        # noinspection PyUnresolvedReferences
        return self.fget.__get__(None, owner)()


# noinspection PyPep8Naming
class classproperty(object):
    """
    Decorator to mark a function as a class property (logically, a combination
=================
128573
count:1


# noinspection PyPep8Naming
class classproperty(object):
    """
    Decorator to mark a function as a class property (logically, a combination
    of ``@classmethod`` and ``@property``).

    See
    https://stackoverflow.com/questions/128573/using-property-on-classmethods
    """
    def __init__(self, fget):
        self.fget = fget

    def __get__(self, owner_self, owner_cls):
=================
27803059
count:1
import contextlib


@contextlib.contextmanager
def dummy_context_mgr():
    """
    We might be using Python 3.6 which doesn't have ``contextlib.nullcontext``.
    Hence this.

    - https://stackoverflow.com/questions/27803059/conditional-with-statement-in-python
    - See also
      https://stackoverflow.com/questions/893333/multiple-variables-in-a-with-statement
    """  # noqa
=================
893333
count:1

@contextlib.contextmanager
def dummy_context_mgr():
    """
    We might be using Python 3.6 which doesn't have ``contextlib.nullcontext``.
    Hence this.

    - https://stackoverflow.com/questions/27803059/conditional-with-statement-in-python
    - See also
      https://stackoverflow.com/questions/893333/multiple-variables-in-a-with-statement
    """  # noqa
=================
38987
count:1
            return key
    return None


def merge_dicts(*dict_args: Dict) -> Dict:
    """
    Given any number of dicts, shallow-copy them and merge into a new dict.
    Precedence goes to key/value pairs in dicts that are later in the list.

    See http://stackoverflow.com/questions/38987.
    """
    result = {}
    for dictionary in dict_args:
        result.update(dictionary)
    return result


def merge_two_dicts(x: Dict, y: Dict) -> Dict:
    """
    Given two dicts, merge them into a new dict as a shallow copy, e.g.
=================
38987
count:1

        z = merge_two_dicts(x, y)

    If you can guarantee Python 3.5, then a simpler syntax is:

    .. code-block:: python

        z = {**x, **y}

    See http://stackoverflow.com/questions/38987.
    """
    z = x.copy()
    z.update(y)
    return z


def rename_key(d: Dict[str, Any], old: str, new: str) -> None:
    """
    Rename a key in dictionary ``d`` from ``old`` to ``new``, in place.
    """
=================
4406501
count:1
    """
    Renames, IN PLACE, the keys in ``d`` according to the mapping in
    ``renames``.
    
    Args:
        d: a dictionary to modify 
        renames: a dictionary of the format ``{old_key_name: new_key_name}``
        
    See
    https://stackoverflow.com/questions/4406501/change-the-name-of-a-key-in-dictionary.
    """  # noqa
    for old_key, new_key in renames.items():
        if new_key == old_key:
            continue
        if old_key in d:
            if new_key in d:
                raise ValueError(
                    f"rename_keys_in_dict: renaming {old_key!r} -> "
                    f"{new_key!r} but new key already exists")
            d[new_key] = d.pop(old_key)
=================
6777485
count:1
                            null_literals: List[Any]) -> None:
    """
    Within ``d`` (in place), replace any values found in ``null_literals`` with
    ``None``.
    """
    if not null_literals:
        return
    # DO NOT add/delete values to/from a dictionary during iteration, but it
    # is OK to modify existing keys:
    #       https://stackoverflow.com/questions/6777485
    #       https://stackoverflow.com/questions/2315520
    #       https://docs.python.org/3/library/stdtypes.html#dict-views
    for k, v in d.items():
        if v in null_literals:
            d[k] = None


# noinspection PyPep8
def map_keys_to_values(keys: List[Any], d: Dict[Any, Any], default: Any = None,
                       raise_if_missing: bool = False,
=================
2315520
count:1
    """
    Within ``d`` (in place), replace any values found in ``null_literals`` with
    ``None``.
    """
    if not null_literals:
        return
    # DO NOT add/delete values to/from a dictionary during iteration, but it
    # is OK to modify existing keys:
    #       https://stackoverflow.com/questions/6777485
    #       https://stackoverflow.com/questions/2315520
    #       https://docs.python.org/3/library/stdtypes.html#dict-views
    for k, v in d.items():
        if v in null_literals:
            d[k] = None


# noinspection PyPep8
def map_keys_to_values(keys: List[Any], d: Dict[Any, Any], default: Any = None,
                       raise_if_missing: bool = False,
                       omit_if_missing: bool = False) -> List[Any]:
=================
17532929
count:1
# Lazy dictionaries
# =============================================================================

class LazyDict(dict):
    """
    A dictionary that only evaluates the argument to :func:`setdefault` or
    :func:`get` if it needs to.
    
    See
    https://stackoverflow.com/questions/17532929/how-to-implement-a-lazy-setdefault.
    
    The ``*args``/``**kwargs`` parts are useful, but we don't want to have to
    name 'thunk' explicitly.
    """  # noqa
    def get(self, key: Hashable, thunk: Any = None,
            *args: Any, **kwargs: Any) -> Any:
        if key in self:
            return self[key]
        elif callable(thunk):
            return thunk(*args, **kwargs)
=================
17532929
count:1


class LazyButHonestDict(dict):
    """
    A dictionary that provides alternatives to :func:`get` and
    :func:`setdefault`, namely :func:`lazyget` and :func:`lazysetdefault`,
    that only evaluate their arguments if they have to.

    See
    https://stackoverflow.com/questions/17532929/how-to-implement-a-lazy-setdefault.

    Compared to the StackOverflow version: no obvious need to have a default
    returning ``None``, when we're implementing this as a special function.
    In contrast, helpful to have ``*args``/``**kwargs`` options.
    """  # noqa
    def lazyget(self, key: Hashable, thunk: Callable,
                *args: Any, **kwargs: Any) -> Any:
        if key in self:
            return self[key]
        else:
=================
1151658
count:1

# =============================================================================
# HashableDict
# =============================================================================

class HashableDict(dict):
    """
    A dictionary that can be hashed.

    See https://stackoverflow.com/questions/1151658/python-hashable-dicts.
    """
    def __hash__(self) -> int:
        return hash(tuple(sorted(self.items())))


# =============================================================================
# CaseInsensitiveDict
# =============================================================================

class CaseInsensitiveDict(dict):
=================
32888599
count:1


# =============================================================================
# CaseInsensitiveDict
# =============================================================================

class CaseInsensitiveDict(dict):
    """
    A case-insensitive dictionary, as per
    https://stackoverflow.com/questions/2082152/case-insensitive-dictionary/32888599#32888599,
    with updates for Python 3 and type hinting.
    
    See also
    
    - https://docs.python.org/3/tutorial/datastructures.html#dictionaries
    - https://docs.python.org/3/library/stdtypes.html#mapping-types-dict
    
    Test code:
    
    .. code-block:: python
=================
16041232
count:1

import os
from typing import Any, Iterable


# =============================================================================
# Making FileFields own their files (i.e. delete them afterwards)
# =============================================================================

# http://stackoverflow.com/questions/16041232/django-delete-filefield
# These two auto-delete files from filesystem when they are unneeded:
# ... with a bit of modification to make them generic (RNC)
# Attach them with signals; see e.g. Study model.
def auto_delete_files_on_instance_delete(instance: Any,
                                         fieldnames: Iterable[str]) -> None:
    """
    Deletes files from filesystem when object is deleted.
    """
    for fieldname in fieldnames:
        filefield = getattr(instance, fieldname, None)
=================
1156246
count:1
            If True, browsers will generally save to disk.
            If False, they may display it inline.
            http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html
        as_inline:
            attempt to force inline (only if not as_attachment)
        default_content_type:
            HTTP content type to use as default, if ``content_type`` is
            ``None``
    """
    # http://stackoverflow.com/questions/1156246/having-django-serve-downloadable-files  # noqa
    # https://docs.djangoproject.com/en/dev/ref/request-response/#telling-the-browser-to-treat-the-response-as-a-file-attachment  # noqa
    # https://djangosnippets.org/snippets/365/
    if offered_filename is None:
        offered_filename = os.path.basename(path_to_file) or ''
    if getattr(settings, "XSENDFILE", False):
        response = HttpResponse()
        response['X-Sendfile'] = smart_str(path_to_file)
        content_length = os.path.getsize(path_to_file)
    else:
        response = FileResponse(open(path_to_file, mode='rb'))
=================
4460661
count:1
        content_type=content_type,
        as_attachment=as_attachment,
        as_inline=as_inline,
        content_length=content_length,
        default_content_type=default_content_type)
    return response
    # Note for debugging: Chrome may request a file more than once (e.g. with a
    # GET request that's then marked 'canceled' in the Network tab of the
    # developer console); this is normal:
    #   http://stackoverflow.com/questions/4460661/what-to-do-with-chrome-sending-extra-requests  # noqa


def serve_buffer(
        data: bytes,
        offered_filename: str = None,
        content_type: str = None,
        as_attachment: bool = True,
        as_inline: bool = False,
        default_content_type: Optional[str] = MimeType.FORCE_DOWNLOAD) \
        -> HttpResponse:
=================
29303902
count:1
        return x
    except ValueError:
        raise forms.ValidationError(f"Not a valid NHS number: {x!r}")


class MultipleIntAreaField(forms.Field):
    """
    Django ``forms.Field`` to capture multiple integers.
    """
    # See also http://stackoverflow.com/questions/29303902/django-form-with-list-of-integers  # noqa
    widget = forms.Textarea

    def clean(self, value) -> List[int]:
        return [clean_int(x) for x in value.split()]


class MultipleNhsNumberAreaField(forms.Field):
    """
    Django ``forms.Field`` to capture multiple NHS numbers.
    """
=================
13990846
count:1
# noinspection PyUnresolvedReferences
from django.utils.html import escape
# noinspection PyUnresolvedReferences
from django.urls import reverse


# =============================================================================
# Disable boolean icons for a ModelAdmin field
# =============================================================================
# http://stackoverflow.com/questions/13990846/disable-on-off-icon-for-boolean-field-in-django  # noqa
# ... extended to use closures

def disable_bool_icon(
        fieldname: str,
        model) -> Callable[[Any], bool]:
    """
    Disable boolean icons for a Django ModelAdmin field.
    The '_meta' attribute is present on Django model classes and instances.

    model_class: ``Union[Model, Type[Model]]``
=================
2472422
count:1
        50MB - 5242880
        100MB - 104857600
        250MB - 214958080
        500MB - 429916160

    See:

    - https://djangosnippets.org/snippets/2206/
    - https://docs.djangoproject.com/en/1.8/ref/files/uploads/
    - https://stackoverflow.com/questions/2472422/django-file-upload-size-limit
    """
    def __init__(self, *args, **kwargs) -> None:
        self.content_types = kwargs.pop("content_types", None)
        if self.content_types is None:
            self.content_types = []
        self.max_upload_size = kwargs.pop("max_upload_size", None)
        super().__init__(*args, **kwargs)

    def clean(self, *args, **kwargs) -> Any:
        data = super().clean(*args, **kwargs)
=================
14368290
count:1
            2015-11-11 22:21:37.123

        The Django automatic RHS converter for datetime values looks like this:

        .. code-block:: none

            2015-11-11 22:21:37
            2015-11-11 22:21:37.123456

        ... http://stackoverflow.com/questions/14368290/django-datetimefield-and-timezone-now

        ... so a direct comparison with ``DATETIME`` works only if the
        microsecond component is zero (or you coerce it to zero via
        ``get_db_prep_value``), and a direct comparison to the ``STRFTIME``
        expression fails.

        Coercing the fractional seconds to zero via ``get_db_prep_value()``
        would make sub-second comparisons meaningless in the database. So we
        should avoid that, and operate as close to the database resolution as
        possible.
=================
6578986
count:1

- http://paltman.com/how-to-store-arbitrary-data-in-a-django-model/

- Native Django JSONField requires PostgreSQL, and is not part of the core set
  of fields:

  https://docs.djangoproject.com/en/1.10/ref/contrib/postgres/fields/#django.contrib.postgres.fields.JSONField
  https://docs.djangoproject.com/en/1.10/ref/models/fields/

- http://stackoverflow.com/questions/6578986/how-to-convert-json-data-into-a-python-object
- http://stackoverflow.com/questions/31235771/is-parsing-a-json-naively-into-a-python-class-or-struct-secure
- http://stackoverflow.com/questions/16405969/how-to-change-json-encoding-behaviour-for-serializable-python-object/16406798#16406798
- http://stackoverflow.com/questions/3768895/how-to-make-a-class-json-serializable

e.g.:

.. code-block:: python
    
    import inspect
    import json
=================
31235771
count:1
- http://paltman.com/how-to-store-arbitrary-data-in-a-django-model/

- Native Django JSONField requires PostgreSQL, and is not part of the core set
  of fields:

  https://docs.djangoproject.com/en/1.10/ref/contrib/postgres/fields/#django.contrib.postgres.fields.JSONField
  https://docs.djangoproject.com/en/1.10/ref/models/fields/

- http://stackoverflow.com/questions/6578986/how-to-convert-json-data-into-a-python-object
- http://stackoverflow.com/questions/31235771/is-parsing-a-json-naively-into-a-python-class-or-struct-secure
- http://stackoverflow.com/questions/16405969/how-to-change-json-encoding-behaviour-for-serializable-python-object/16406798#16406798
- http://stackoverflow.com/questions/3768895/how-to-make-a-class-json-serializable

e.g.:

.. code-block:: python
    
    import inspect
    import json
    from typing import Any, Dict, Union
=================
16406798
count:1

- Native Django JSONField requires PostgreSQL, and is not part of the core set
  of fields:

  https://docs.djangoproject.com/en/1.10/ref/contrib/postgres/fields/#django.contrib.postgres.fields.JSONField
  https://docs.djangoproject.com/en/1.10/ref/models/fields/

- http://stackoverflow.com/questions/6578986/how-to-convert-json-data-into-a-python-object
- http://stackoverflow.com/questions/31235771/is-parsing-a-json-naively-into-a-python-class-or-struct-secure
- http://stackoverflow.com/questions/16405969/how-to-change-json-encoding-behaviour-for-serializable-python-object/16406798#16406798
- http://stackoverflow.com/questions/3768895/how-to-make-a-class-json-serializable

e.g.:

.. code-block:: python
    
    import inspect
    import json
    from typing import Any, Dict, Union
    
=================
3768895
count:1
- Native Django JSONField requires PostgreSQL, and is not part of the core set
  of fields:

  https://docs.djangoproject.com/en/1.10/ref/contrib/postgres/fields/#django.contrib.postgres.fields.JSONField
  https://docs.djangoproject.com/en/1.10/ref/models/fields/

- http://stackoverflow.com/questions/6578986/how-to-convert-json-data-into-a-python-object
- http://stackoverflow.com/questions/31235771/is-parsing-a-json-naively-into-a-python-class-or-struct-secure
- http://stackoverflow.com/questions/16405969/how-to-change-json-encoding-behaviour-for-serializable-python-object/16406798#16406798
- http://stackoverflow.com/questions/3768895/how-to-make-a-class-json-serializable

e.g.:

.. code-block:: python
    
    import inspect
    import json
    from typing import Any, Dict, Union
    
    class Thing(object):
=================
3151469
count:1
    See the License for the specific language governing permissions and
    limitations under the License.

===============================================================================

**Implement a request cache for Django.**

"""

# http://stackoverflow.com/questions/3151469/per-request-cache-in-django

from threading import currentThread

# noinspection PyUnresolvedReferences
from django.core.cache.backends.locmem import LocMemCache

_request_cache = {}
_installed_middleware = False


=================
3214589
count:1
#                 # (2) With 'next' parameter:
#                 path = request.get_full_path()
#                 return redirect_to_login(path, settings.LOGIN_URL,
#                                          REDIRECT_FIELD_NAME)


# -----------------------------------------------------------------------------
# 2. Alternative!
# -----------------------------------------------------------------------------
# http://stackoverflow.com/questions/3214589/

# class LoginRequiredMiddleware(object):
#     """
#     For an exempt view:
#         def someview(request, *args, **kwargs):
#             # body of view
#         someview.login_required = False
#
#         class SomeView(View):
#             login_required = False
=================
2095520
count:1
            return None  # OK, exempt
        fullpath = request.get_full_path()
        return redirect_to_login(fullpath, reverse(settings.LOGIN_VIEW_NAME),
                                 REDIRECT_FIELD_NAME)


# =============================================================================
# DisableClientSideCachingMiddleware
# =============================================================================
# http://stackoverflow.com/questions/2095520/fighting-client-side-caching-in-django  # noqa

class DisableClientSideCachingMiddleware(MiddlewareMixin):
    """
    Django middleware to ask the client never to cache headers for this page.
    """
    # noinspection PyUnusedLocal
    @staticmethod
    def process_response(request: HttpRequest,
                         response: HttpResponse) -> HttpResponse:
        add_never_cache_headers(response)
=================
1386291
count:1
    gitargs += [url, directory]
    run_func(gitargs)
    if commit:
        log.info("Resetting {} local Git repository to commit {}",
                 prettyname, commit)
        run_func([git,
                  "-C", directory,
                  "reset", "--hard", commit])
        # Using a Git repository that's not in the working directory:
        # https://stackoverflow.com/questions/1386291/git-git-dir-not-working-as-expected  # noqa
    return True


# def fix_git_repo_for_windows(directory: str):
#     # https://github.com/openssl/openssl/issues/174
#     log.info("Fixing repository {!r} for Windows line endings", directory)
#     with pushd(directory):
#         run([GIT, "config", "--local", "core.autocrlf", "false"])
#         run([GIT, "config", "--local", "core.eol", "lf"])
#         run([GIT, "rm", "--cached", "-r", "."])
=================
2082152
count:1


# =============================================================================
# Mapping terms via dictionaries
# =============================================================================

class CaseInsensitiveDict(dict):
    """
    Case-insensitive dictionary for strings; see
    https://stackoverflow.com/questions/2082152/case-insensitive-dictionary
    """
    def __setitem__(self, key: str, value: str) -> None:
        # https://docs.python.org/3/reference/datamodel.html#object.__setitem__
        super().__setitem__(key.lower(), value)

    def __contains__(self, key: str) -> bool:
        # https://docs.python.org/3/reference/datamodel.html#object.__contains__
        return super().__contains__(key.lower())

    def __getitem__(self, key: str) -> str:
=================
64505
count:1

    Returns:
         tuple: ``(success, error_or_success_message)``

    See

    - https://tools.ietf.org/html/rfc2822
    - https://tools.ietf.org/html/rfc5322
    - http://segfault.in/2010/12/sending-gmail-from-python/
    - http://stackoverflow.com/questions/64505
    - http://stackoverflow.com/questions/3362600

    Re security:

    - TLS supersedes SSL:
      https://en.wikipedia.org/wiki/Transport_Layer_Security
      
    - https://en.wikipedia.org/wiki/Email_encryption
    
    - SMTP connections on ports 25 and 587 are commonly secured via TLS using
=================
3362600
count:1
    Returns:
         tuple: ``(success, error_or_success_message)``

    See

    - https://tools.ietf.org/html/rfc2822
    - https://tools.ietf.org/html/rfc5322
    - http://segfault.in/2010/12/sending-gmail-from-python/
    - http://stackoverflow.com/questions/64505
    - http://stackoverflow.com/questions/3362600

    Re security:

    - TLS supersedes SSL:
      https://en.wikipedia.org/wiki/Transport_Layer_Security
      
    - https://en.wikipedia.org/wiki/Email_encryption
    
    - SMTP connections on ports 25 and 587 are commonly secured via TLS using
      the ``STARTTLS`` command:
=================
19237878
count:1

===============================================================================

**Helper functions for algorithmic definitions of treatment-resistant
depression.**

Performance notes:

- 200 test patients; baseline about 7.65-8.57 seconds (25 Hz).
- From https://stackoverflow.com/questions/19237878/ to
  https://stackoverflow.com/questions/17071871/select-rows-from-a-dataframe-based-on-values-in-a-column-in-pandas  # noqa
- Change from parallel to single-threading: down to 4.38 s (!).
- Avoid a couple of slices: down to 3.85 s for 200 patients.
- Add test patient E; up to 4.63 s for 250 patients (54 Hz).
- On a live set (different test computer), single-threaded: 901.9 s for 4154
  patients (4.6 Hz).
- One pointless indexing call removed: 863.2s for 4154 patients (4.8 Hz).
- Loop boundary tweak: 3.95 s for 300 test patients (76 Hz).
- From iloc to iat: 3.79s (79 Hz)
- These two are very helpful:
=================
17071871
count:1
===============================================================================

**Helper functions for algorithmic definitions of treatment-resistant
depression.**

Performance notes:

- 200 test patients; baseline about 7.65-8.57 seconds (25 Hz).
- From https://stackoverflow.com/questions/19237878/ to
  https://stackoverflow.com/questions/17071871/select-rows-from-a-dataframe-based-on-values-in-a-column-in-pandas  # noqa
- Change from parallel to single-threading: down to 4.38 s (!).
- Avoid a couple of slices: down to 3.85 s for 200 patients.
- Add test patient E; up to 4.63 s for 250 patients (54 Hz).
- On a live set (different test computer), single-threaded: 901.9 s for 4154
  patients (4.6 Hz).
- One pointless indexing call removed: 863.2s for 4154 patients (4.8 Hz).
- Loop boundary tweak: 3.95 s for 300 test patients (76 Hz).
- From iloc to iat: 3.79s (79 Hz)
- These two are very helpful:

=================
28757389
count:1
- Avoid a couple of slices: down to 3.85 s for 200 patients.
- Add test patient E; up to 4.63 s for 250 patients (54 Hz).
- On a live set (different test computer), single-threaded: 901.9 s for 4154
  patients (4.6 Hz).
- One pointless indexing call removed: 863.2s for 4154 patients (4.8 Hz).
- Loop boundary tweak: 3.95 s for 300 test patients (76 Hz).
- From iloc to iat: 3.79s (79 Hz)
- These two are very helpful:

  - https://stackoverflow.com/questions/28757389/loc-vs-iloc-vs-ix-vs-at-vs-iat
  - https://medium.com/dunder-data/selecting-subsets-of-data-in-pandas-39e811c81a0c
  
- Switching from tp.loc[conditions] to tp[conditions] didn't make much 
  difference, but the code is a bit cleaner
  
- Anyway, we should profile (see the PROFILE flag). That shows the main time
  is spent in my algorithmic code, not in DataFrame operations.
- Not creating unnecessary results DataFrame objects shaved things down from 
  5.7 to 3.9 s in the profiler.
- Still slower in parallel. Time is spent in thread locking.
=================
30086936
count:1
    main_only_quicksetup_rootlogger,
)
from cardinal_pythonlib.psychiatry.rfunc import flush_stdout_stderr

log = BraceStyleAdapter(logging.getLogger(__name__))

DTYPE_STRING = "<U255"
# ... getting this right is surprisingly tricky!
# ... https://docs.scipy.org/doc/numpy-1.13.0/reference/arrays.dtypes.html
# ... https://stackoverflow.com/questions/30086936/what-is-the-difference-between-the-types-type-numpy-string-and-type-str  # noqa
# ... https://stackoverflow.com/questions/49127844/python-convert-python-string-to-numpy-unicode-string  # noqa
DTYPE_DATE = "datetime64[D]"  # D for day resolution, ns for nanoseconds, etc.
# ... https://docs.scipy.org/doc/numpy/reference/arrays.datetime.html

DEFAULT_SOURCE_PATIENT_COLNAME = "patient_id"
DEFAULT_SOURCE_DRUG_COLNAME = "drug"
DEFAULT_SOURCE_DATE_COLNAME = "date"

DEFAULT_ANTIDEPRESSANT_COURSE_LENGTH_DAYS = 28
DEFAULT_EXPECT_RESPONSE_BY_DAYS = 56
=================
49127844
count:1
)
from cardinal_pythonlib.psychiatry.rfunc import flush_stdout_stderr

log = BraceStyleAdapter(logging.getLogger(__name__))

DTYPE_STRING = "<U255"
# ... getting this right is surprisingly tricky!
# ... https://docs.scipy.org/doc/numpy-1.13.0/reference/arrays.dtypes.html
# ... https://stackoverflow.com/questions/30086936/what-is-the-difference-between-the-types-type-numpy-string-and-type-str  # noqa
# ... https://stackoverflow.com/questions/49127844/python-convert-python-string-to-numpy-unicode-string  # noqa
DTYPE_DATE = "datetime64[D]"  # D for day resolution, ns for nanoseconds, etc.
# ... https://docs.scipy.org/doc/numpy/reference/arrays.datetime.html

DEFAULT_SOURCE_PATIENT_COLNAME = "patient_id"
DEFAULT_SOURCE_DRUG_COLNAME = "drug"
DEFAULT_SOURCE_DATE_COLNAME = "date"

DEFAULT_ANTIDEPRESSANT_COURSE_LENGTH_DAYS = 28
DEFAULT_EXPECT_RESPONSE_BY_DAYS = 56
DEFAULT_SYMPTOM_ASSESSMENT_TIME_DAYS = 180
=================
15943769
count:1
    # Sort by date, then drug.
    # ... arbitrary drug name order to make the output stable
    # -------------------------------------------------------------------------
    # ... this is about 2ms for small lists; probably not limiting
    # ... seems slower if "inplace=True" is used.
    tp = tp.sort_values(by=[date_colname, drug_colname], ascending=True)

    # log.critical("{!r}", tp)

    nrows_all = len(tp)  # https://stackoverflow.com/questions/15943769/
    if nrows_all < 4:  # need A, A, B, B; so minimum #rows is 4
        return None
    end_date = tp.iat[nrows_all - 1, sourcecolnum_date]  # date of last row

    # -------------------------------------------------------------------------
    # Get antidepressants, in the order they appear
    # -------------------------------------------------------------------------
    for first_b_rownum in range(1, nrows_all):
        # ... skip rows 0 and 1, because a drug can't be the second (B) drug
        #     unless there are two mentions of A beforehand.
=================
19365513
count:1
            found_valid_a = True
            break
        if not found_valid_a:
            continue  # try another B

        # ---------------------------------------------------------------------
        # OK; here we have found a combination that we like.
        # Add it to the results.
        # ---------------------------------------------------------------------
        # https://stackoverflow.com/questions/19365513/how-to-add-an-extra-row-to-a-pandas-dataframe/19368360  # noqa
        # http://pandas.pydata.org/pandas-docs/stable/indexing.html#setting-with-enlargement  # noqa

        expect_response_by_date = (
            antidepressant_b_first_mention + timedelta_days(
                expect_response_by_days)
        )
        end_of_symptom_period = (
            antidepressant_b_first_mention + timedelta_days(
                expect_response_by_days + symptom_assessment_time_days - 1)
        )
=================
20094215
count:1
# =============================================================================
# Argparse actions
# =============================================================================

class ShowAllSubparserHelpAction(_HelpAction):
    """
    Class to serve as the ``action`` for an ``argparse`` top-level parser that
    shows help for all subparsers. As per

    https://stackoverflow.com/questions/20094215/argparse-subparser-monolithic-help-output
    """  # noqa

    def __call__(self,
                 parser: ArgumentParser,
                 namespace: Namespace,
                 values: List[Any],  # ?
                 option_string: str = None) -> None:
        # 1. Print top-level help
        parser.print_help()
        sep = "=" * 79  # "-" less helpful when using grep for "--option"!
=================
15008758
count:1
    
    .. code-block:: none
    
        argument strings                value
        ------------------------------- -----
        'yes', 'true', 't', 'y', '1'    True
        'no', 'false', 'f', 'n', '0'    False
     
    From
    https://stackoverflow.com/questions/15008758/parsing-boolean-values-with-argparse

    Specimen usage:
    
    .. code-block:: python
    
        parser.add_argument(
            "--nice", type=str2bool, nargs='?',
            const=True,  # if --nice is present with no parameter
            default=NICE,  # if the argument is entirely absent
            help="Activate nice mode.")
=================
6557407
count:1

    This should avoid the error:
    
    .. code-block:: none

        TypeError: metaclass conflict: the metaclass of a derived class must
        be a (non-strict) subclass of the metaclasses of all its bases

    Code from:
    https://stackoverflow.com/questions/6557407/triple-inheritance-causes-metaclass-conflict-sometimes.

    See also:
    http://code.activestate.com/recipes/204197-solving-the-metaclass-conflict/.

    HOWEVER, it's not actually working. Does Python 3 have stricter checking
    than Python 2?

    See also
    https://blog.ionelmc.ro/2015/02/09/understanding-python-metaclasses/.
    """  # noqa
=================
201282
count:1
    def get_all_table_names(cls, db: DATABASE_SUPPORTER_FWD_REF) -> List[str]:
        return db.fetchallfirstvalues("""
            SELECT MSysObjects.Name AS table_name
            FROM MSysObjects
            WHERE (((Left([Name],1))<>"~")
                    AND ((Left([Name],4))<>"MSys")
                    AND ((MSysObjects.Type) In (1,4,6)))
            ORDER BY MSysObjects.Name
        """)
        # http://stackoverflow.com/questions/201282

    @classmethod
    def get_all_table_details(cls, db: DATABASE_SUPPORTER_FWD_REF) \
            -> List[List[Any]]:
        # returns some not-very-helpful stuff too!
        # noinspection PyTypeChecker
        return db.fetchall("""
            SELECT *
            FROM MSysObjects
            WHERE (((Left([Name],1))<>"~")
=================
2221250
count:1
                       db: DATABASE_SUPPORTER_FWD_REF,
                       table: str) -> List[List[Any]]:
        raise RuntimeError("Don't know how to describe table in Access")

    @classmethod
    def fetch_column_names(cls,
                           db: DATABASE_SUPPORTER_FWD_REF,
                           table: str) -> List[str]:
        # not possible in SQL:
        #   http://stackoverflow.com/questions/2221250
        # can do this:
        #   http://stackoverflow.com/questions/3343922/get-column-names
        # or can use pyodbc:
        db.ensure_db_open()
        cursor = db.db.cursor()
        sql = "SELECT TOP 1 * FROM " + db.delimit(table)
        debug_sql(sql)
        cursor.execute(sql)
        return [x[0] for x in cursor.variables]
        # https://code.google.com/p/pyodbc/wiki/Cursor
=================
3343922
count:1
        raise RuntimeError("Don't know how to describe table in Access")

    @classmethod
    def fetch_column_names(cls,
                           db: DATABASE_SUPPORTER_FWD_REF,
                           table: str) -> List[str]:
        # not possible in SQL:
        #   http://stackoverflow.com/questions/2221250
        # can do this:
        #   http://stackoverflow.com/questions/3343922/get-column-names
        # or can use pyodbc:
        db.ensure_db_open()
        cursor = db.db.cursor()
        sql = "SELECT TOP 1 * FROM " + db.delimit(table)
        debug_sql(sql)
        cursor.execute(sql)
        return [x[0] for x in cursor.variables]
        # https://code.google.com/p/pyodbc/wiki/Cursor

    @classmethod
=================
6568098
count:1
            "SELECT table_name FROM information_schema.tables")

    @classmethod
    def get_all_table_details(cls, db: DATABASE_SUPPORTER_FWD_REF) \
            -> List[List[Any]]:
        # noinspection PyTypeChecker
        return db.fetchall("SELECT * FROM information_schema.tables")
        # restricted to current database (in full:
        #   databasename.information_schema.tables)
        # http://stackoverflow.com/questions/6568098

    @classmethod
    def describe_table(cls,
                       db: DATABASE_SUPPORTER_FWD_REF,
                       table: str) -> List[List[Any]]:
        # noinspection PyTypeChecker
        return db.fetchall(
            "SELECT * FROM information_schema.columns "
            "WHERE table_name=?", table)

=================
917431
count:1

    @classmethod
    def get_datatype(cls,
                     db: DATABASE_SUPPORTER_FWD_REF,
                     table: str,
                     column: str) -> str:
        # ISO standard for INFORMATION_SCHEMA, I think.
        # SQL Server carries a warning but the warning may be incorrect:
        # https://msdn.microsoft.com/en-us/library/ms188348.aspx
        # http://stackoverflow.com/questions/917431
        # http://sqlblog.com/blogs/aaron_bertrand/archive/2011/11/03/the-case-against-information-schema-views.aspx  # noqa
        return db.fetchvalue(
            "SELECT data_type FROM information_schema.columns "
            "WHERE table_schema=? AND table_name=? AND column_name=?",
            db.schema, table, column)

    @classmethod
    def get_column_type(cls,
                        db: DATABASE_SUPPORTER_FWD_REF,
                        table: str,
=================
917431
count:1

    @classmethod
    def get_column_type(cls,
                        db: DATABASE_SUPPORTER_FWD_REF,
                        table: str,
                        column: str) -> str:
        # ISO standard for INFORMATION_SCHEMA, I think.
        # SQL Server carries a warning but the warning may be incorrect:
        # https://msdn.microsoft.com/en-us/library/ms188348.aspx
        # http://stackoverflow.com/questions/917431
        # http://sqlblog.com/blogs/aaron_bertrand/archive/2011/11/03/the-case-against-information-schema-views.aspx  # noqa
        sql = """
            SELECT {}
            FROM information_schema.columns
            WHERE table_schema=? AND table_name=? AND column_name=?
        """.format(cls.column_type_expr())
        return db.fetchvalue(sql, db.schema, table, column)


# =============================================================================
=================
4205181
count:1
        ")"
    )


def get_sql_insert_or_update(table: str,
                             fieldlist: Sequence[str],
                             delims: Tuple[str, str] = ("", "")) -> str:
    """Returns ?-marked SQL for an INSERT-or-if-duplicate-key-UPDATE statement.
    """
    # http://stackoverflow.com/questions/4205181
    return """
        INSERT INTO {table} ({fields})
        VALUES ({placeholders})
        ON DUPLICATE KEY UPDATE {updatelist}
    """.format(
        table=delimit(table, delims),
        fields=",".join([delimit(x, delims) for x in fieldlist]),
        placeholders=",".join(["?"] * len(fieldlist)),
        updatelist=",".join(
            ["{field}=VALUES({field})".format(field=delimit(x, delims))
=================
10263956
count:1
    return s.replace("''", "'")


def datetime2literal_rnc(d: datetime.datetime, c: Optional[Dict]) -> str:
    """Format a DateTime object as something MySQL will actually accept."""
    # dt = d.strftime("%Y-%m-%d %H:%M:%S")
    # ... can fail with e.g.
    #   ValueError: year=1850 is before 1900; the datetime strftime() methods
    #   require year >= 1900
    # http://stackoverflow.com/questions/10263956
    dt = d.isoformat(" ")
    # noinspection PyArgumentList,PyUnresolvedReferences
    return _mysql.string_literal(dt, c)


def full_datatype_to_mysql(d: str) -> str:
    """Converts a full datatype, e.g. INT, VARCHAR(10), VARCHAR(MAX), to a
    MySQL equivalent."""
    d = d.upper()
    (s, length) = split_long_sqltype(d)
=================
5088671
count:1

# =============================================================================
# Reconfiguring jaydebeapi to do sensible type conversions
# =============================================================================
# rs: resultset
# col: column

def _convert_java_binary(rs, col: int) -> Optional[bytes]:
    # https://github.com/originell/jpype/issues/71
    # http://stackoverflow.com/questions/5088671
    # https://github.com/baztian/jaydebeapi/blob/master/jaydebeapi/__init__.py
    # https://msdn.microsoft.com/en-us/library/ms378813(v=sql.110).aspx
    # http://stackoverflow.com/questions/2920364/checking-for-a-null-int-value-from-a-java-resultset  # noqa
    v = None
    log.debug("_convert_java_binary: converting...")
    time1 = time.time()
    try:
        # ---------------------------------------------------------------------
        # Method 1: 3578880 bytes in 21.7430660725 seconds =   165 kB/s
        # ---------------------------------------------------------------------
=================
2920364
count:1
# =============================================================================
# rs: resultset
# col: column

def _convert_java_binary(rs, col: int) -> Optional[bytes]:
    # https://github.com/originell/jpype/issues/71
    # http://stackoverflow.com/questions/5088671
    # https://github.com/baztian/jaydebeapi/blob/master/jaydebeapi/__init__.py
    # https://msdn.microsoft.com/en-us/library/ms378813(v=sql.110).aspx
    # http://stackoverflow.com/questions/2920364/checking-for-a-null-int-value-from-a-java-resultset  # noqa
    v = None
    log.debug("_convert_java_binary: converting...")
    time1 = time.time()
    try:
        # ---------------------------------------------------------------------
        # Method 1: 3578880 bytes in 21.7430660725 seconds =   165 kB/s
        # ---------------------------------------------------------------------
        # java_val = rs.getObject(col)
        # if java_val is None:
        #     return
=================
26899595
count:1

def _convert_java_bigstring(rs, col: int) -> Optional[str]:
    v = str(rs.getCharacterStream(col))
    if rs.wasNull():
        return None
    return v


def _convert_java_bigint(rs, col: int) -> Optional[int]:
    # http://stackoverflow.com/questions/26899595
    # https://github.com/baztian/jaydebeapi/issues/6
    # https://github.com/baztian/jaydebeapi/blob/master/jaydebeapi/__init__.py
    # https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html
    # http://docs.oracle.com/javase/7/docs/api/java/sql/ResultSet.html
    java_val = rs.getObject(col)
    if java_val is None:
        return None
    v = getattr(java_val, 'toString')()  # Java call: java_val.toString()
    return int(v)

=================
6777810
count:1
    # The types used as keys below MUST be in java.sql.Types -- search for
    # _init_types() calls in jaydebeapi's __init__.py. If not, this bit
    # crashes:
    #       for i in _DEFAULT_CONVERTERS:
    #           const_val = types_map[i]
    # Those types are:
    #       http://docs.oracle.com/javase/6/docs/api/java/sql/Types.html
    # In particular, note that DATETIME is not one of them!
    # The equivalent is TIMESTAMP.
    #       http://stackoverflow.com/questions/6777810
    try:
        if hasattr(jaydebeapi, "_DEFAULT_CONVERTERS"):
            # Recent version of jaydebeapi, e.g. 0.2.0
            # noinspection PyProtectedMember
            converters = jaydebeapi._DEFAULT_CONVERTERS
        else:
            # Older version, e.g. prior to 0.2.0
            log.warning("Old jaydebeapi version")
            # noinspection PyUnresolvedReferences,PyProtectedMember
            converters = jaydebeapi.dbapi2._DEFAULT_CONVERTERS
=================
2901453
count:1
class DatabaseSupporter:
    """Support class for databases using pyodbc or MySQLdb."""

    def __init__(self):
        self.db = None
        self.flavour = None
        self.db_pythonlib = None
        self.schema = None
        self.autocommit = None
        # http://stackoverflow.com/questions/2901453
        # http://stackoverflow.com/questions/7311990

    # -------------------------------------------------------------------------
    # Generic connection method
    # -------------------------------------------------------------------------

    @staticmethod
    def reraise_connection_exception(e: Exception) -> None:
        err = "Failed to connect. {ex}: {msg}".format(
            ex=type(e).__name__,
=================
7311990
count:1
    """Support class for databases using pyodbc or MySQLdb."""

    def __init__(self):
        self.db = None
        self.flavour = None
        self.db_pythonlib = None
        self.schema = None
        self.autocommit = None
        # http://stackoverflow.com/questions/2901453
        # http://stackoverflow.com/questions/7311990

    # -------------------------------------------------------------------------
    # Generic connection method
    # -------------------------------------------------------------------------

    @staticmethod
    def reraise_connection_exception(e: Exception) -> None:
        err = "Failed to connect. {ex}: {msg}".format(
            ex=type(e).__name__,
            msg=str(e),
=================
11053941
count:1
            # stops producing e.g.
            #   '2014-01-03 18:15:51'
            # and starts producing e.g.
            #   '2014-01-03 18:15:51.842097+00:00'.
            # Let's fix that...
            datetimetype = datetime.datetime  # as per MySQLdb times.py
            converters = mysql.converters.conversions.copy()
            converters[datetimetype] = datetime2literal_rnc
            # See also:
            #   http://stackoverflow.com/questions/11053941
            log.info(
                "{i} connect: host={h}, port={p}, user={u}, "
                "database={d}".format(
                    i=interface, h=host, p=port, u=user, d=database))
            self.db = mysql.connect(
                host=host,
                port=port,
                user=user,
                passwd=password,
                db=database,
=================
6001104
count:1
            # What is my database using?
            # ... SHOW VARIABLES LIKE 'character_set_%';
            # Change a database character set:
            # ... ALTER DATABASE mydatabasename charset=utf8;
            # http://docs.moodle.org/23/en/
            #        Converting_your_MySQL_database_to_UTF8
            #
            # Python talking to MySQL in Unicode:
            # http://www.harelmalka.com/?p=81
            # http://stackoverflow.com/questions/6001104

        elif engine == ENGINE_MYSQL and interface == INTERFACE_ODBC:
            log.info(
                "ODBC connect: DRIVER={dr};SERVER={s};PORT={p};"
                "DATABASE={db};USER={u};PASSWORD=[censored]".format(
                    dr=driver, s=host, p=port,
                    db=database, u=user))
            dsn = (
                "DRIVER={0};SERVER={1};PORT={2};DATABASE={3};"
                "USER={4};PASSWORD={5}".format(driver, host, port, database,
=================
1063770
count:1
                    db=database, u=user))
            dsn = (
                "DRIVER={0};SERVER={1};PORT={2};DATABASE={3};"
                "USER={4};PASSWORD={5}".format(driver, host, port, database,
                                               user, password)
            )
            # noinspection PyUnresolvedReferences
            self.db = pyodbc.connect(dsn)
            self.db.autocommit = autocommit
            # http://stackoverflow.com/questions/1063770

        elif engine == ENGINE_MYSQL and interface == INTERFACE_JDBC:
            # https://help.ubuntu.com/community/JDBCAndMySQL
            # https://github.com/baztian/jaydebeapi/issues/1
            jclassname = "com.mysql.jdbc.Driver"
            url = "jdbc:mysql://{host}:{port}/{database}".format(
                host=host, port=port, database=database)
            driver_args = [url, user, password]
            jars = None
            libs = None
=================
1063770
count:1
                    "UID={u};PWD=[censored]".format(
                        dr=driver, s=host, db=database, u=user))
                connectstring = (
                    "DRIVER={};SERVER={};DATABASE={};UID={};PWD={}".format(
                        driver, host, database, user, password)
                )
            # noinspection PyUnresolvedReferences
            self.db = pyodbc.connect(connectstring, unicode_results=True)
            self.db.autocommit = autocommit
            # http://stackoverflow.com/questions/1063770

        elif engine == ENGINE_SQLSERVER and interface == INTERFACE_JDBC:
            # jar tvf sqljdbc41.jar
            # https://msdn.microsoft.com/en-us/sqlserver/aa937724.aspx
            # https://msdn.microsoft.com/en-us/library/ms378428(v=sql.110).aspx
            # https://msdn.microsoft.com/en-us/library/ms378988(v=sql.110).aspx
            jclassname = 'com.microsoft.sqlserver.jdbc.SQLServerDriver'
            urlstem = 'jdbc:sqlserver://{host}:{port};'.format(
                host=host,
                port=port
=================
1063770
count:1
            libs = None
            self._jdbc_connect(jclassname, driver_args, jars, libs, autocommit)

        elif engine == ENGINE_ACCESS and interface == INTERFACE_ODBC:
            dsn = "DSN={}".format(dsn)
            log.info("ODBC connect: DSN={}", dsn)
            # noinspection PyUnresolvedReferences
            self.db = pyodbc.connect(dsn)
            self.db.autocommit = autocommit
            # http://stackoverflow.com/questions/1063770

        else:
            raise ValueError(
                "Unknown 'engine'/'interface' combination: {}/{}".format(
                    engine, interface
                )
            )

        return True

=================
9337134
count:1

        For example, MySQLdb uses %s rather than ?.
        """
        # pyodbc seems happy with ? now (pyodbc.paramstyle is 'qmark');
        # using ? is much simpler, because we may want to use % with LIKE
        # fields or (in my case) with date formatting strings for
        # STR_TO_DATE().
        # If you get this wrong, you may see "not all arguments converted
        # during string formatting";
        # http://stackoverflow.com/questions/9337134
        if self.db_pythonlib in [PYTHONLIB_PYMYSQL, PYTHONLIB_MYSQLDB]:
            # These engines use %, so we need to convert ? to %, without
            # breaking literal % values.
            sql = _PERCENT_REGEX.sub("%%", sql)
            # ... replace all % with %% first
            sql = _QUERY_VALUE_REGEX.sub("%s", sql)
            # ... replace all ? with %s in the SQL
        # Otherwise: engine uses ?, so we don't have to fiddle.
        return sql

=================
6202726
count:1
    def get_literal_sql_with_arguments(self, query: str, *args) -> str:
        query = self.localize_sql(query)
        # Now into the back end:
        # See cursors.py, connections.py in MySQLdb source.

        # charset = self.db.character_set_name()
        # if isinstance(query, unicode):
        #     query = query.encode(charset)
        # Don't get them double-encoded:
        #   http://stackoverflow.com/questions/6202726/writing-utf-8-string-to-mysql-with-python  # noqa
        if args is not None:
            query = query % self.db.literal(args)
        return query

    def fetchvalue(self, sql: str, *args) -> Optional[Any]:
        """Executes SQL; returns the first value of the first row, or None."""
        row = self.fetchone(sql, *args)
        if row is None:
            return None
        return row[0]
=================
8859353
count:1
        """.format(self.get_current_schema_expr())
        # http://forums.mysql.com/read.php?10,114742,114748#msg-114748
        row = self.fetchone(sql, table)
        has_pk_already = True if row[0] >= 1 else False
        drop_pk_if_exists = " DROP PRIMARY KEY," if has_pk_already else ""
        fieldlist = ",".join([self.delimit(f) for f in fieldnames])
        sql = ("ALTER TABLE " + self.delimit(table) +
               drop_pk_if_exists +
               " ADD PRIMARY KEY(" + fieldlist + ")")
        # http://stackoverflow.com/questions/8859353
        return self.db_exec(sql)

    # =========================================================================
    # Flavours
    # =========================================================================

    def get_flavour(self) -> Optional[str]:
        if not self.flavour:
            return None
        return self.flavour.flavour()
=================
1903041
count:1
        """Does the user have read-only access to the database?
        This is a safety check, but should NOT be the only safety check!"""
        return self.flavour.is_read_only(self, logger=log)

    # =========================================================================
    # Debugging
    # =========================================================================

    def java_garbage_collect(self) -> None:
        # http://stackoverflow.com/questions/1903041
        # http://docs.oracle.com/javase/7/docs/api/java/lang/Runtime.html
        if not jaydebeapi:
            return
        if self.db_pythonlib != PYTHONLIB_JAYDEBEAPI:
            return
        log.info("Calling Java garbage collector...")
        # noinspection PyUnresolvedReferences
        rt = jpype.java.lang.Runtime.getRuntime()
        rt.gc()
=================
8562136
count:1
    WITH,
)

log = get_brace_style_log_with_null_handler(__name__)


# Not in SQL Server (though in MySQL):
#
# don't think so: BINARY; http://gilfster.blogspot.co.uk/2005/08/case-sensitivity-in-mysql.html  # noqa
# DISTINCTROW: no; http://stackoverflow.com/questions/8562136/distinctrow-equivalent-in-sql-server  # noqa
# DIV/MOD: not in SQL Server; use / and % respectively; https://msdn.microsoft.com/en-us/library/ms190279.aspx  # noqa
# PARTITION: not in SELECT? - https://msdn.microsoft.com/en-us/library/ms187802.aspx  # noqa
# XOR: use ^ instead; http://stackoverflow.com/questions/5411619/t-sql-xor-operator  # noqa

# Definitely part of SQL Server:
CHECKSUM_AGG = sql_keyword("CHECKSUM_AGG")
COUNT_BIG = sql_keyword("COUNT_BIG")
GROUPING = sql_keyword("GROUPING")
GROUPING_ID = sql_keyword("GROUPING_ID")
ROLLUP = sql_keyword("ROLLUP")
=================
5411619
count:1
log = get_brace_style_log_with_null_handler(__name__)


# Not in SQL Server (though in MySQL):
#
# don't think so: BINARY; http://gilfster.blogspot.co.uk/2005/08/case-sensitivity-in-mysql.html  # noqa
# DISTINCTROW: no; http://stackoverflow.com/questions/8562136/distinctrow-equivalent-in-sql-server  # noqa
# DIV/MOD: not in SQL Server; use / and % respectively; https://msdn.microsoft.com/en-us/library/ms190279.aspx  # noqa
# PARTITION: not in SELECT? - https://msdn.microsoft.com/en-us/library/ms187802.aspx  # noqa
# XOR: use ^ instead; http://stackoverflow.com/questions/5411619/t-sql-xor-operator  # noqa

# Definitely part of SQL Server:
CHECKSUM_AGG = sql_keyword("CHECKSUM_AGG")
COUNT_BIG = sql_keyword("COUNT_BIG")
GROUPING = sql_keyword("GROUPING")
GROUPING_ID = sql_keyword("GROUPING_ID")
ROLLUP = sql_keyword("ROLLUP")
SOUNDEX = sql_keyword("SOUNDEX")
STDEV = sql_keyword("STDEV")
STDEV_P = sql_keyword("STDEV_P")
=================
285775
count:1
    column_spec = (
        Combine(database_name + '.' + schema_name + '.' + table_name + '.' +
                column_name + no_dot) |
        Combine(schema_name + '.' + table_name + '.' + column_name + no_dot) |
        Combine(table_name + '.' + column_name + no_dot) |
        column_name + no_dot
    ).setName("column_spec")
    # I'm unsure if SQL Server allows keywords in the parts after dots, like
    # MySQL does.
    # - http://stackoverflow.com/questions/285775/how-to-deal-with-sql-column-names-that-look-like-sql-keywords  # noqa

    bind_parameter = Literal('?')

    variable = Regex(r"@[a-zA-Z0-9\.$_]+").setName("variable")

    argument_list = (
        delimitedList(expr).setName("arglist").setParseAction(', '.join)
    )
    function_call = Combine(function_name + LPAR) + argument_list + RPAR

=================
11016935
count:1

    variable = Regex(r"@[a-zA-Z0-9\.$_]+").setName("variable")

    argument_list = (
        delimitedList(expr).setName("arglist").setParseAction(', '.join)
    )
    function_call = Combine(function_name + LPAR) + argument_list + RPAR

    # Not supported: index hints
    # ... http://stackoverflow.com/questions/11016935/how-can-i-force-a-query-to-not-use-a-index-on-a-given-table  # noqa

    # -----------------------------------------------------------------------------
    # CASE
    # -----------------------------------------------------------------------------
    case_expr = (
        (
            CASE + expr +
            OneOrMore(WHEN + expr + THEN + expr) +
            Optional(ELSE + expr) +
            END
=================
1345039
count:1
  
    http://pyparsing.wikispaces.com/share/view/11262229

  - Match-first (|) versus match-longest (^):
  
    http://pyparsing.wikispaces.com/HowToUsePyparsing

  - How to do arithmetic recursive parsing:
  
    http://stackoverflow.com/questions/1345039

  - Somebody else's MySQL parser:
  
    https://github.com/gburns/mysql_pyparsing/blob/master/src/sqlparser.py

  - ... or generic SQL:
  
    http://pyparsing.wikispaces.com/file/view/select_parser.py/158651233/select_parser.py

ANSI SQL syntax:
=================
37926516
count:1
# pyparsing helpers
# =============================================================================

def delim_list(expr_: Token,
               delim: str = ",",
               combine: bool = False,
               combine_adjacent: bool = False,
               suppress_delim: bool = False):
    # A better version of delimitedList
    # BUT SEE ALSO ALTERNATIVE: http://stackoverflow.com/questions/37926516
    name = str(expr_) + " [" + str(delim) + " " + str(expr_) + "]..."
    if combine:
        return Combine(expr_ + ZeroOrMore(delim + expr_),
                       adjacent=combine_adjacent).setName(name)
    else:
        if suppress_delim:
            return (expr_ + ZeroOrMore(Suppress(delim) + expr_)).setName(name)
        else:
            return (expr_ + ZeroOrMore(delim + expr_)).setName(name)

=================
4214173
count:1
    else:
        if suppress_delim:
            return (expr_ + ZeroOrMore(Suppress(delim) + expr_)).setName(name)
        else:
            return (expr_ + ZeroOrMore(delim + expr_)).setName(name)


WORD_BOUNDARY = r"\b"
# The meaning of \b:
# http://stackoverflow.com/questions/4213800/is-there-something-like-a-counter-variable-in-regular-expression-replace/4214173#4214173  # noqa


def word_regex_element(word: str) -> str:
    return WORD_BOUNDARY + word + WORD_BOUNDARY


def multiple_words_regex_element(
        words_as_string_or_list: Union[str, List[str]]) -> str:
    if isinstance(words_as_string_or_list, list):
        wordlist = words_as_string_or_list
=================
37926516
count:1

    # http://dev.mysql.com/doc/refman/5.7/en/user-variables.html
    variable = Regex(r"@[a-zA-Z0-9\.$_]+").setName("variable")

    # http://dev.mysql.com/doc/refman/5.7/en/functions.html
    argument_list = (
        delimitedList(expr).setName("arglist").setParseAction(', '.join)
    )
    # ... we don't care about sub-parsing the argument list, so use combine=True
    # or setParseAction: http://stackoverflow.com/questions/37926516
    function_call = Combine(function_name + LPAR) + argument_list + RPAR

    # http://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html
    partition_list = (
        LPAR + delim_list(partition_name, combine=True) + RPAR
    ).setName("partition_list")

    # http://dev.mysql.com/doc/refman/5.7/en/index-hints.html
    index_list = delim_list(index_name, combine=False)
    # ... see pyparsing_bugtest_delimited_list_combine
=================
5599254
count:1
# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for autodoc extension -------------------------------------------

autoclass_content = 'both'
# https://stackoverflow.com/questions/5599254/how-to-use-sphinxs-autodoc-to-document-a-classs-init-self-method  # noqa


# =============================================================================
# For Django
# =============================================================================
# https://stackoverflow.com/questions/36228537/django-settings-module-not-defined-when-building-sphinx-documentation

# But in practice:
if django:
    settings.configure()
=================
36228537
count:1
# -- Options for autodoc extension -------------------------------------------

autoclass_content = 'both'
# https://stackoverflow.com/questions/5599254/how-to-use-sphinxs-autodoc-to-document-a-classs-init-self-method  # noqa


# =============================================================================
# For Django
# =============================================================================
# https://stackoverflow.com/questions/36228537/django-settings-module-not-defined-when-building-sphinx-documentation

# But in practice:
if django:
    settings.configure()
    django.setup()

=================
20726010
count:1
W = A T (weak bonds)
B = G T C (all but A)
D = G A T (all but C)
H = A C T (all but G)
V = G C A (all but T)
N = A G C T (any)
badset = set(R,Y,K,M,S,W,B,D,H,V,N)
'''

#http://stackoverflow.com/questions/20726010/how-to-check-if-a-string-contains-only-characters-from-a-given-set-in-python
def replace_bad_nucleotides(pattern):
    good_set = set('ATGC')
    bad_set = set('RYKMSWBDHVN')
    if set(pattern) <= good_set:
        pass
    else:
        for i in pattern:
            if i in bad_set:
                pattern = pattern.replace(i, '.')
    #print pattern
=================
24662006
count:1
    node_categ_dict = identify_node_categ(node_module_dict)
    for node in samModG.nodes():
        samModG.add_node(node, category = node_categ_dict[node])

    # reduce length of label for easier visualization
    new_labels = create_pretty_node_labels(G)

    # plot edges as per modules

    #http://stackoverflow.com/questions/24662006/python-networkx-graph-different-colored-nodes-using-two-lists
    nodeColor = [attrib_color_map[G.node[node]['moduleNumb']] for node in G if node != 'Name']

    #http://stackoverflow.com/questions/22992009/legend-in-python-networkx
    # create legend

    f = plt.figure(1)
    ax = f.add_subplot(1,1,1)
    for label in attrib_color_map:
        if label in node_module_dict.values():# only show legend for values that are in my data
                ax.plot([],[],'o',color=attrib_color_map[label],label=label)
=================
22992009
count:9

    # reduce length of label for easier visualization
    new_labels = create_pretty_node_labels(G)

    # plot edges as per modules

    #http://stackoverflow.com/questions/24662006/python-networkx-graph-different-colored-nodes-using-two-lists
    nodeColor = [attrib_color_map[G.node[node]['moduleNumb']] for node in G if node != 'Name']

    #http://stackoverflow.com/questions/22992009/legend-in-python-networkx
    # create legend

    f = plt.figure(1)
    ax = f.add_subplot(1,1,1)
    for label in attrib_color_map:
        if label in node_module_dict.values():# only show legend for values that are in my data
                ax.plot([],[],'o',color=attrib_color_map[label],label=label)
    for label in edge_color_map: # 0, 1, -1 correlation values
        if edge_color_map[label] in Gcolors:# colors,  only show legend for values that are in my data
                ax.plot([],[],color=edge_color_map[label],label=label)
=================
7125009
count:1
    for label in edge_color_map: # 0, 1, -1 correlation values
        if edge_color_map[label] in samModGcolors:# colors,  only show legend for values that are in my data
                ax.plot([],[],color=edge_color_map[label],label=label)

    plt.title('OTUs colored as per Phylum. Intermodule edges NOT allowed.')
    # other layout algos: dot, neato, fdp, twopi, circo
    algo = 'circo'
    pos = nx.graphviz_layout(samModG, prog=algo)
    nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, with_labels = True)
    #http://stackoverflow.com/questions/7125009/how-to-change-legend-size-with-matplotlib-pyplot 
    #http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.legend
    #plt.legend(loc=3,prop={'size':6}) 
    plt.legend(bbox_to_anchor=(0.15, 0.93), loc=0, borderaxespad=0.,prop={'size':6}) #, title = "Legend"
    plt.savefig(outfilestring + "-same-module-edge-node-color-phyla." + img_frmt, dpi = img_qual)
    plt.close()


def draw_plots_wout_edge_attributes(infile, node_attrib_file, outfilestring, img_qual, img_frmt, delim, attrib_color_map, categ_color_map,edge_color_map):
    G = nx.Graph()
    # edges
=================
24662006
count:9
    node_categ_dict = identify_node_categ(node_module_dict)
    for node in samModG.nodes():
        samModG.add_node(node, category = node_categ_dict[node])

    # reduce length of label for easier visualization
    new_labels = create_pretty_node_labels(G)

    # plot edges as per modules

    #http://stackoverflow.com/questions/24662006/python-networkx-graph-different-colored-nodes-using-two-lists
    nodeColor = [attrib_color_map[G.node[node]['moduleNumb']] for node in G if node != 'Name']

    #http://stackoverflow.com/questions/22992009/legend-in-python-networkx
    # create legend

    f = plt.figure(1)
    ax = f.add_subplot(1,1,1)
    for label in attrib_color_map:
        if label in node_module_dict.values():# only show legend for values that are in my data
                ax.plot([0],[0],color=attrib_color_map[label],label=label)
=================
22992009
count:9

    # reduce length of label for easier visualization
    new_labels = create_pretty_node_labels(G)

    # plot edges as per modules

    #http://stackoverflow.com/questions/24662006/python-networkx-graph-different-colored-nodes-using-two-lists
    nodeColor = [attrib_color_map[G.node[node]['moduleNumb']] for node in G if node != 'Name']

    #http://stackoverflow.com/questions/22992009/legend-in-python-networkx
    # create legend

    f = plt.figure(1)
    ax = f.add_subplot(1,1,1)
    for label in attrib_color_map:
        if label in node_module_dict.values():# only show legend for values that are in my data
                ax.plot([0],[0],color=attrib_color_map[label],label=label)

    plt.title('OTUs colored as per modules. Intermodule edges allowed.')
    nx.draw(G, node_color = nodeColor, with_labels = False)
=================
7125009
count:9
    for label in categ_color_map:
        if label in node_categ_dict.values():# only show legend for values that are in my data
            ax.plot([0],[0],color=categ_color_map[label],label=label)

    plt.title('OTUs colored as per Phylum. Intermodule edges NOT allowed.')
    # other layout algos: dot, neato, fdp, twopi, circo
    algo = 'circo'
    pos = nx.graphviz_layout(samModG, prog=algo)
    nx.draw(samModG, pos=pos, node_color = nodeColor, labels = new_labels, with_labels = True)
    #http://stackoverflow.com/questions/7125009/how-to-change-legend-size-with-matplotlib-pyplot 
    #http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.legend
    #plt.legend(loc=3,prop={'size':6}) 
    plt.legend(bbox_to_anchor=(0.15, 0.93), loc=0, borderaxespad=0.,prop={'size':6}) #, title = "Legend"
    plt.savefig(outfilestring + "-same-module-edge-node-color-phyla." + img_frmt, dpi = img_qual)
    plt.close()


if __name__=='__main__':
    datetime = strftime("%a, %d %b %Y %I:%M:%S %p", localtime())
    cmd = 'echo ' + datetime 
=================
18821795
count:4
    
    '''
    fontpath = '/usr/local/share/fonts/Arial.ttf'
    prop = font_manager.FontProperties(fname=fontpath)
    matplotlib.rcParams['font.family'] = prop.get_name()
    '''
    #/usr/share/fonts/truetype/msttcorefonts/
    text_font = 'Arial' # 'Times' 'Helvetica'
    '''
    #http://stackoverflow.com/questions/18821795/how-can-i-get-list-of-font-familyor-name-of-font-in-matplotlib
    '''


    nx.draw(samModG, edgelist=edges_list, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, with_labels = True, node_size=samModGnode_sizes_list, font_size=8, font_family=text_font)
    #http://stackoverflow.com/questions/7125009/how-to-change-legend-size-with-matplotlib-pyplot 
    #http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.legend
    #plt.legend(loc=3,prop={'size':6}) 
    plt.legend(bbox_to_anchor=(0.15, 0.93), loc=0, borderaxespad=0.,prop={'size':6}) #, title = "Legend"
    plt.savefig(outfilestring + "-edge-node-color-phyla." + img_frmt, dpi = img_qual)
    plt.close()
=================
7125009
count:4
    '''
    #/usr/share/fonts/truetype/msttcorefonts/
    text_font = 'Arial' # 'Times' 'Helvetica'
    '''
    #http://stackoverflow.com/questions/18821795/how-can-i-get-list-of-font-familyor-name-of-font-in-matplotlib
    '''


    nx.draw(samModG, edgelist=edges_list, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, with_labels = True, node_size=samModGnode_sizes_list, font_size=8, font_family=text_font)
    #http://stackoverflow.com/questions/7125009/how-to-change-legend-size-with-matplotlib-pyplot 
    #http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.legend
    #plt.legend(loc=3,prop={'size':6}) 
    plt.legend(bbox_to_anchor=(0.15, 0.93), loc=0, borderaxespad=0.,prop={'size':6}) #, title = "Legend"
    plt.savefig(outfilestring + "-edge-node-color-phyla." + img_frmt, dpi = img_qual)
    plt.close()


def draw_plots_with_edge_attributes(infile, node_attrib_file, outfilestring, img_qual, img_frmt, delim, attrib_color_map, categ_color_map, edge_color_map, node_abund_file, common_edge_list, common_edge_diff_correl_list):
    G = nx.Graph()
    # edges
=================
24662006
count:8

    samModGnode_sizes_list = [node_sizes_dict[i] for i in samModG.nodes()]
    #print samModGnode_sizes_list

    # reduce length of label for easier visualization
    new_labels = create_pretty_node_labels(G)

    # plot edges as per modules

    #http://stackoverflow.com/questions/24662006/python-networkx-graph-different-colored-nodes-using-two-lists
    nodeColor = [attrib_color_map[G.node[node]['moduleNumb']] for node in G if node != 'Name']

    #http://stackoverflow.com/questions/22992009/legend-in-python-networkx
    # create legend

    f = plt.figure(1)
    ax = f.add_subplot(1,1,1)
    for label in attrib_color_map:
        if label in node_module_dict.values():# only show legend for values that are in my data
                ax.plot([],[],'o',color=attrib_color_map[label],label=label)
=================
18821795
count:2
                ax.plot([],[],color=edge_color_map[label],label=label)

    plt.title('OTUs colored as per Phylum. Intermodule edges NOT allowed.')
    # other layout algos: dot, neato, fdp, twopi, circo
    algo = 'circo'
    pos = nx.graphviz_layout(samModG, prog=algo)

    text_font = 'Arial' # 'Times' 'Helvetica'
    '''
    #http://stackoverflow.com/questions/18821795/how-can-i-get-list-of-font-familyor-name-of-font-in-matplotlib
    '''


    nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, with_labels = True, node_size=samModGnode_sizes_list, font_size=8, font_family=text_font)
    #nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, font_size=8, with_labels = True)
    #http://stackoverflow.com/questions/7125009/how-to-change-legend-size-with-matplotlib-pyplot 
    #http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.legend
    #plt.legend(loc=3,prop={'size':6}) 
    plt.legend(bbox_to_anchor=(0.15, 0.93), loc=0, borderaxespad=0.,prop={'size':6}) #, title = "Legend"
    plt.savefig(outfilestring + "-same-module-edge-node-color-phyla." + img_frmt, dpi = img_qual)
=================
7125009
count:2

    text_font = 'Arial' # 'Times' 'Helvetica'
    '''
    #http://stackoverflow.com/questions/18821795/how-can-i-get-list-of-font-familyor-name-of-font-in-matplotlib
    '''


    nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, with_labels = True, node_size=samModGnode_sizes_list, font_size=8, font_family=text_font)
    #nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, font_size=8, with_labels = True)
    #http://stackoverflow.com/questions/7125009/how-to-change-legend-size-with-matplotlib-pyplot 
    #http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.legend
    #plt.legend(loc=3,prop={'size':6}) 
    plt.legend(bbox_to_anchor=(0.15, 0.93), loc=0, borderaxespad=0.,prop={'size':6}) #, title = "Legend"
    plt.savefig(outfilestring + "-same-module-edge-node-color-phyla." + img_frmt, dpi = img_qual)
    plt.close()


def draw_plots_wout_edge_attributes(infile, node_attrib_file, outfilestring, img_qual, img_frmt, delim, attrib_color_map, categ_color_map,edge_color_map):
    G = nx.Graph()
    # edges
=================
7125009
count:1
    for label in edge_color_map: # 0, 1, -1 correlation values
        if edge_color_map[label] in samModGcolors:# colors,  only show legend for values that are in my data
                ax.plot([],[],color=edge_color_map[label],label=label)

    plt.title('OTUs colored as per Phylum.')
    # other layout algos: dot, neato, fdp, twopi, circo
    algo = 'circo'
    pos = nx.graphviz_layout(samModG, prog=algo)
    nx.draw(samModG, edgelist=edges_list, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, with_labels = True, node_size=samModGnode_sizes_list, font_size=5)
    #http://stackoverflow.com/questions/7125009/how-to-change-legend-size-with-matplotlib-pyplot 
    #http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.legend
    #plt.legend(loc=3,prop={'size':6}) 
    plt.legend(bbox_to_anchor=(0.15, 0.93), loc=0, borderaxespad=0.,prop={'size':6}) #, title = "Legend"
    plt.savefig(outfilestring + "-edge-node-color-phyla." + img_frmt, dpi = img_qual)
    plt.close()


def draw_plots_with_edge_attributes(infile, node_attrib_file, outfilestring, img_qual, img_frmt, delim, attrib_color_map, categ_color_map, edge_color_map, node_abund_file, common_edge_list, common_edge_diff_correl_list):
    G = nx.Graph()
    # edges
=================
18821795
count:1
            ax.plot([],[],'o',color=categ_color_map[label],label=label)
    for label in edge_color_map: # 0, 1, -1 correlation values
        if edge_color_map[label] in samModGcolors:# colors,  only show legend for values that are in my data
                ax.plot([],[],color=edge_color_map[label],label=label)

    plt.title('OTUs colored as per Phylum. Intermodule edges NOT allowed.')
    # other layout algos: dot, neato, fdp, twopi, circo
    algo = 'circo'
    pos = nx.graphviz_layout(samModG, prog=algo)
    #http://stackoverflow.com/questions/18821795/how-can-i-get-list-of-font-familyor-name-of-font-in-matplotlib  #don't think the font family and font size works though
    nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, with_labels = True, node_size=samModGnode_sizes_list, font_size=10, font_family='Times')
    #nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, font_size=8, with_labels = True)
    #http://stackoverflow.com/questions/7125009/how-to-change-legend-size-with-matplotlib-pyplot 
    #http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.legend
    #plt.legend(loc=3,prop={'size':6}) 
    plt.legend(bbox_to_anchor=(0.15, 0.93), loc=0, borderaxespad=0.,prop={'size':6}) #, title = "Legend"
    plt.savefig(outfilestring + "-same-module-edge-node-color-phyla." + img_frmt, dpi = img_qual)
    plt.close()


=================
7125009
count:1
                ax.plot([],[],color=edge_color_map[label],label=label)

    plt.title('OTUs colored as per Phylum. Intermodule edges NOT allowed.')
    # other layout algos: dot, neato, fdp, twopi, circo
    algo = 'circo'
    pos = nx.graphviz_layout(samModG, prog=algo)
    #http://stackoverflow.com/questions/18821795/how-can-i-get-list-of-font-familyor-name-of-font-in-matplotlib  #don't think the font family and font size works though
    nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, with_labels = True, node_size=samModGnode_sizes_list, font_size=10, font_family='Times')
    #nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, font_size=8, with_labels = True)
    #http://stackoverflow.com/questions/7125009/how-to-change-legend-size-with-matplotlib-pyplot 
    #http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.legend
    #plt.legend(loc=3,prop={'size':6}) 
    plt.legend(bbox_to_anchor=(0.15, 0.93), loc=0, borderaxespad=0.,prop={'size':6}) #, title = "Legend"
    plt.savefig(outfilestring + "-same-module-edge-node-color-phyla." + img_frmt, dpi = img_qual)
    plt.close()


def draw_plots_wout_edge_attributes(infile, node_attrib_file, outfilestring, img_qual, img_frmt, delim, attrib_color_map, categ_color_map,edge_color_map):
    G = nx.Graph()
    # edges
=================
8122079
count:1
    for line in f:
        #counter = counter + 1
        #if counter == 10000:
        #    break
        
        line=line.strip()
        #print line
        
        if line.startswith(">"):
            if any(substring in line for substring in seed_entries): #https://stackoverflow.com/questions/8122079/python-how-to-check-a-string-for-substrings-from-a-list
                outfile.append(line)
                print(line)
                flag = 1
            else:
                flag = 0
            
            strs = [seq[i:i+n] for i in range(0, len(seq), n)]
            # do not add empty lines
            if len(strs) > 0:
                outfile.extend(strs)
=================
716477
count:1
        diff = [val for val in seed_entries if val not in tmp]

sys.exit(0)
'''

# count which taxa contains how many seeds:


def sort_taxa_occurence(somelistoflists, outfile):
    # merges list of list into one list # https://stackoverflow.com/questions/716477/join-list-of-lists-in-python
    one_list = list(itertools.chain.from_iterable(somelistoflists)) 
    # https://stackoverflow.com/questions/46580499/count-occurrences-of-an-element-in-list
    taxa_occurences =  Counter(one_list)
    #writeDICT_to_file(taxa_occurences , outfile)

    # reverse sorted as per occurrences # https://stackoverflow.com/questions/613183/how-to-sort-a-dictionary-by-value
    sorted_x = sorted(taxa_occurences.items(), key=operator.itemgetter(1), reverse=True)
    #print sorted_x

    #https://stackoverflow.com/questions/3820312/python-write-a-list-of-tuples-to-a-file
=================
46580499
count:1
sys.exit(0)
'''

# count which taxa contains how many seeds:


def sort_taxa_occurence(somelistoflists, outfile):
    # merges list of list into one list # https://stackoverflow.com/questions/716477/join-list-of-lists-in-python
    one_list = list(itertools.chain.from_iterable(somelistoflists)) 
    # https://stackoverflow.com/questions/46580499/count-occurrences-of-an-element-in-list
    taxa_occurences =  Counter(one_list)
    #writeDICT_to_file(taxa_occurences , outfile)

    # reverse sorted as per occurrences # https://stackoverflow.com/questions/613183/how-to-sort-a-dictionary-by-value
    sorted_x = sorted(taxa_occurences.items(), key=operator.itemgetter(1), reverse=True)
    #print sorted_x

    #https://stackoverflow.com/questions/3820312/python-write-a-list-of-tuples-to-a-file
    with open(outfile, 'w') as fp:
        fp.write('\n'.join('%s\t%s' % x for x in sorted_x))
=================
613183
count:2


def sort_taxa_occurence(somelistoflists, outfile):
    # merges list of list into one list # https://stackoverflow.com/questions/716477/join-list-of-lists-in-python
    one_list = list(itertools.chain.from_iterable(somelistoflists)) 
    # https://stackoverflow.com/questions/46580499/count-occurrences-of-an-element-in-list
    taxa_occurences =  Counter(one_list)
    #writeDICT_to_file(taxa_occurences , outfile)

    # reverse sorted as per occurrences # https://stackoverflow.com/questions/613183/how-to-sort-a-dictionary-by-value
    sorted_x = sorted(taxa_occurences.items(), key=operator.itemgetter(1), reverse=True)
    #print sorted_x

    #https://stackoverflow.com/questions/3820312/python-write-a-list-of-tuples-to-a-file
    with open(outfile, 'w') as fp:
        fp.write('\n'.join('%s\t%s' % x for x in sorted_x))



# each taxa occurence indicates one seed. so the score indicates number of seeds covered by taxa
=================
3820312
count:2
    one_list = list(itertools.chain.from_iterable(somelistoflists)) 
    # https://stackoverflow.com/questions/46580499/count-occurrences-of-an-element-in-list
    taxa_occurences =  Counter(one_list)
    #writeDICT_to_file(taxa_occurences , outfile)

    # reverse sorted as per occurrences # https://stackoverflow.com/questions/613183/how-to-sort-a-dictionary-by-value
    sorted_x = sorted(taxa_occurences.items(), key=operator.itemgetter(1), reverse=True)
    #print sorted_x

    #https://stackoverflow.com/questions/3820312/python-write-a-list-of-tuples-to-a-file
    with open(outfile, 'w') as fp:
        fp.write('\n'.join('%s\t%s' % x for x in sorted_x))



# each taxa occurence indicates one seed. so the score indicates number of seeds covered by taxa
sort_taxa_occurence(seed_utaxa_dict.values(), 'uniq-taxa-covering-seeds.txt')


# taxa can occur multiple times per seed. so the score can be greater than number of seeds entries for this code
=================
4534480
count:2
    plt.ylabel('Cumulative relative abundance')
    plt.xlabel(c)
    plt.title('Taxonomic summary')
    plt.xticks(ind+width/2., tuple(category_labels) )
    #plt.legend( tuple(legend_bar), tuple(legend_text) )
    figname = outpfile + '_' + c + '.' + f_type
    plt.savefig(figname, close=True)

    # Klaus se at stackexchange
    #http://stackoverflow.com/questions/4534480/get-legend-as-a-seperate-picture-in-matplotlib
    legend_fig = pylab.figure()
    legend = pylab.figlegend( tuple(legend_bar), tuple(legend_text), loc = 'center' )
    legend_fig.canvas.draw()
    legend_figname = 'legend_' + figname 
    legend_fig.savefig(legend_figname, bbox_inches=legend.get_window_extent().transformed(legend_fig.dpi_scale_trans.inverted()))
    pylab.close()



if __name__=='__main__':
=================
1217251
count:1
                seq = l
                if seq in seq_header_freq_dict: # increment freq of occurance of seq
                     seq_header_freq_dict[seq][1] += 1
                else: # observed the seq for the first time
                    seq_header_freq_dict[seq] = [header, 1]
    f.close()
    #print len(seq_header_freq_dict)
    
    # desc. order the dict as per the freq., dict[seq] = [header, freq]
    # http://stackoverflow.com/questions/1217251/python-sorting-a-dictionary-of-lists
    # descending (default) sort as per the last column
    sorted_seq_header_freq_dict = ''
    if asc_sort:
        sorted_seq_header_freq_dict = sorted(seq_header_freq_dict.items(), key=lambda k:k[1][1])
    else:
        sorted_seq_header_freq_dict = sorted(seq_header_freq_dict.items(), key=lambda k:k[1][1], reverse=True)
    
    f = open(outpfile, 'w')
    s = open(singletonsfile, 'w')
    for seq , value in sorted_seq_header_freq_dict:
=================
7125009
count:3
        if edge_color_map[label] in samModGcolors:# colors,  only show legend for values that are in my data
                ax.plot([],[],color=edge_color_map[label],label=label)

    plt.title('OTUs colored as per Phylum. Intermodule edges NOT allowed.')
    # other layout algos: dot, neato, fdp, twopi, circo
    algo = 'circo'
    pos = nx.graphviz_layout(samModG, prog=algo)
    nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, with_labels = True, node_size=samModGnode_sizes_list, font_size=5)
    #nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, font_size=8, with_labels = True)
    #http://stackoverflow.com/questions/7125009/how-to-change-legend-size-with-matplotlib-pyplot 
    #http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.legend
    #plt.legend(loc=3,prop={'size':6}) 
    plt.legend(bbox_to_anchor=(0.15, 0.93), loc=0, borderaxespad=0.,prop={'size':6}) #, title = "Legend"
    plt.savefig(outfilestring + "-same-module-edge-node-color-phyla." + img_frmt, dpi = img_qual)
    plt.close()


def draw_plots_wout_edge_attributes(infile, node_attrib_file, outfilestring, img_qual, img_frmt, delim, attrib_color_map, categ_color_map,edge_color_map):
    G = nx.Graph()
    # edges
=================
33195384
count:1
        else:
            print l
            sys.exit("D")       

    # sorts dict as per value, returns a list of tuples (key, value)
    # for cases where values are same for multiple keys, the keys stay the same as in their original order (not the best)
    #sorted_temp_dict1 = sorted(file1_otusum_dict.iteritems(), key=operator.itemgetter(1), reverse=True)
    #sorted_temp_dict2 = sorted(file2_otusum_dict.iteritems(), key=operator.itemgetter(1), reverse=True)

    #http://stackoverflow.com/questions/33195384/python-sorting-a-dictionary-based-on-values-and-order-based-on-key-if-values-ar

    ListA = list()
    ListB = list()

    out = open(args.infile1+".sorted.txt", 'w')
    for l in file1_headers_list:
        out.write ('%s\n' %(l))

    #for i in sorted_temp_dict1:
    #    k = i[0]
=================
33001490
count:1
  #print line1
  conts = line1.split(delim)
  #print conts
  
  # output dict needs a list for new column ordering
  # move the first column id to last
  fieldnames = conts[1:] + conts[:1]
  #print fieldnames
  
  #https://stackoverflow.com/questions/33001490/python-re-ordering-columns-in-a-csv
  import csv
  sanfile = 'reordered-' + file1
  if os.path.exists(sanfile):
      sys.exit("reordered file exists! Delete before proceeding")
  with open(file1, 'r') as infile, open(sanfile, 'a') as outfile:
    writer = csv.DictWriter(outfile, fieldnames=fieldnames)
    # reorder the header first
    writer.writeheader()
    for row in csv.DictReader(infile):
        # writes the reordered rows to the new file
=================
20983498
count:1
reslist.append("pattern\tseqs")

seqlist = list()

for p in patterns:
    p = p.strip()
    cmd = 'grep -c ' + p + ' seqs_v35.fna'
    #print cmd
    res = '0'
    # https://stackoverflow.com/questions/20983498/subprocess-check-output-with-grep-command-fails-when-grep-finds-no-matches
    try:
        res = subprocess.check_output(cmd, shell=True)
        res = res.strip()
    except subprocess.CalledProcessError as e:
        if e.returncode > 1:
            raise
    #print res
    out = p + '\t' + res
    print out
    reslist.append(out)
=================
6602881
count:1
res = OrderedDict()
for v, k in node_module_dict1.items(): # k is module, v is OTU
    if k in res:
        res[k].append(v)
    else:
        res[k] = [v]
writeDICT_to_file(res, sys.argv[2])


=================
7125009
count:2
                ax.plot([],[],color=edge_color_map[label],label=label)

    plt.title('OTUs colored as per Phylum. Intermodule edges NOT allowed.')
    # other layout algos: dot, neato, fdp, twopi, circo
    algo = 'circo'
    pos = nx.graphviz_layout(samModG, prog=algo)

    nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, with_labels = True, node_size=samModGnode_sizes_list, font_size=6)
    #nx.draw(samModG, edgelist=edges_between_nodes_from_same_module, edge_color = samModGcolors, pos=pos, node_color = nodeColor, labels = new_labels, font_size=8, with_labels = True)
    #http://stackoverflow.com/questions/7125009/how-to-change-legend-size-with-matplotlib-pyplot 
    #http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.legend
    #plt.legend(loc=3,prop={'size':6}) 
    plt.legend(bbox_to_anchor=(0.15, 0.93), loc=0, borderaxespad=0.,prop={'size':6}) #, title = "Legend"
    plt.savefig(outfilestring + "-same-module-edge-node-color-phyla." + img_frmt, dpi = img_qual)
    plt.close()


def draw_plots_wout_edge_attributes(infile, node_attrib_file, outfilestring, img_qual, img_frmt, delim, attrib_color_map, categ_color_map,edge_color_map):
    G = nx.Graph()
    # edges
=================
25748683
count:1
    #    df = df.drop(df.index[[0,1,2,3,4]])
    ###

    # create an empty df with the required row and column names
    df_ = pd.DataFrame(index=list(df.index), columns=headers)
    df_ = df_.fillna('NaN')
    #print df_.head()

    # sum the specific columns of the data frame
    # https://stackoverflow.com/questions/25748683/pandas-sum-dataframe-rows-for-given-columns
    for key in headers:
        value = sample_lanes_dict[key]
        print key, value
        df_[key] = df[value].sum(axis=1)
    print df_.head()

    df_.to_csv(outfile, sep=delim, index_label=header_line.split(delim)[0])

    # print the column names
    print "Check the order of samples" 
=================
8122079
count:1
    for line in f:
        #counter = counter + 1
        #if counter == 10000:
        #    break
        
        line=line.strip()
        #print line
        
        if line.startswith(">"):
            if any(substring in line for substring in santized_can_find_seeds): #https://stackoverflow.com/questions/8122079/python-how-to-check-a-string-for-substrings-from-a-list
                outfile.append(line)
                #print(line)
                flag = 1
            else:
                flag = 0
            
            strs = [seq[i:i+n] for i in range(0, len(seq), n)]
            # do not add empty lines
            if len(strs) > 0:
                outfile.extend(strs)
=================
716477
count:1





# count which taxa contains how many seeds:


def sort_taxa_occurence(somelistoflists, outfile):
    # merges list of list into one list # https://stackoverflow.com/questions/716477/join-list-of-lists-in-python
    one_list = list(itertools.chain.from_iterable(somelistoflists)) 
    # https://stackoverflow.com/questions/46580499/count-occurrences-of-an-element-in-list
    taxa_occurences =  Counter(one_list)
    #writeDICT_to_file(taxa_occurences , outfile)

    # reverse sorted as per occurrences # https://stackoverflow.com/questions/613183/how-to-sort-a-dictionary-by-value
    sorted_x = sorted(taxa_occurences.items(), key=operator.itemgetter(1), reverse=True)
    #print sorted_x

    #https://stackoverflow.com/questions/3820312/python-write-a-list-of-tuples-to-a-file
=================
46580499
count:1



# count which taxa contains how many seeds:


def sort_taxa_occurence(somelistoflists, outfile):
    # merges list of list into one list # https://stackoverflow.com/questions/716477/join-list-of-lists-in-python
    one_list = list(itertools.chain.from_iterable(somelistoflists)) 
    # https://stackoverflow.com/questions/46580499/count-occurrences-of-an-element-in-list
    taxa_occurences =  Counter(one_list)
    #writeDICT_to_file(taxa_occurences , outfile)

    # reverse sorted as per occurrences # https://stackoverflow.com/questions/613183/how-to-sort-a-dictionary-by-value
    sorted_x = sorted(taxa_occurences.items(), key=operator.itemgetter(1), reverse=True)
    #print sorted_x

    #https://stackoverflow.com/questions/3820312/python-write-a-list-of-tuples-to-a-file
    with open(outfile, 'w') as fp:
        fp.write('\n'.join('%s\t%s' % x for x in sorted_x))
=================
33195384
count:1
            file2_otusum_dict[key] = sum(value)
            value.append(contents[taxonomy_col_file2]) # add taxonomy to the list
            file2_dict[key] = value
        else:
            print l
            sys.exit("D")       

    
    
    #http://stackoverflow.com/questions/33195384/python-sorting-a-dictionary-based-on-values-and-order-based-on-key-if-values-ar

    ListA = list()
    ListB = list()

    sorted_outpfile1 = args.infile1+suffix

    out = open(sorted_outpfile1, 'w')
    for l in file1_headers_list:
        out.write ('%s\n' %(l))

=================
4534480
count:1
    plt.ylabel('Cumulative relative abundance')
    plt.xlabel(c)
    plt.title('Taxonomic summary')
    plt.xticks(ind+width/2., tuple(category_labels) )
    #plt.legend( tuple(legend_bar), tuple(legend_text) )
    figname = outpfile + '_' + c + '.' + f_type
    plt.savefig(figname, close=True)

    # Klaus se at stackexchange
    #http://stackoverflow.com/questions/4534480/get-legend-as-a-seperate-picture-in-matplotlib
    legend_fig = pylab.figure()
    # print in legend (top to bottom), the taxons in decreasing order of average abundance across groups.
    #legend = pylab.figlegend( tuple(legend_bar), tuple(legend_text), loc = 'center' )
    #print in legend (bottom to top), the taxons in decreasing order of average abundance across groups.
    rev_legend_bar = list(reversed(legend_bar))
    rev_legend_text = list(reversed(legend_text))
    legend = pylab.figlegend( tuple(rev_legend_bar), tuple(rev_legend_text), loc = 'center' )
    legend_fig.canvas.draw()
    legend_figname = 'legend_' + figname 
    legend_fig.savefig(legend_figname, bbox_inches=legend.get_window_extent().transformed(legend_fig.dpi_scale_trans.inverted()))
=================
2557110
count:1
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

"""
This module does blah blah.

Here is the description of the module.
See PEP 257 (http://legacy.python.org/dev/peps/pep-0257/) for more details.
See also http://stackoverflow.com/questions/2557110/what-to-put-in-a-python-module-docstring.
"""

def main():
    """
    This function does blah blah.
    
    Here is the description of the function.
    See PEP 257 (http://legacy.python.org/dev/peps/pep-0257/) for more details.
    """

=================
220525
count:1
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

"""
This module show how to ensure a single instance of an application in Linux.

See http://stackoverflow.com/questions/220525/ensure-a-single-instance-of-an-application-in-linux
    https://docs.python.org/3.5/library/fcntl.html
"""

import fcntl
import time
import sys

LOCK_FILENAME = ".lock"

def main():
=================
12409714
count:1
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

"""
Contains snippet about class members.

See http://stackoverflow.com/questions/12409714/python-class-members
"""

class Foo(object):

    counter = 0

    def __init__(self):
        Foo.counter += 1
        self.number = Foo.counter
        print("Making", self.number)
=================
2557110
count:1
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

"""
This module does blah blah.

Here is the description of the module.
See PEP 257 (http://legacy.python.org/dev/peps/pep-0257/) for more details.
See also http://stackoverflow.com/questions/2557110/what-to-put-in-a-python-module-docstring.

See also PEP 8 (http://legacy.python.org/dev/peps/pep-0008/) for Python's good practices.
"""

import sys, os

def main():
    """
    This function does blah blah.
    
=================
20760589
count:1
# See http://people.csail.mit.edu/hubert/pyaudio/docs/#example-blocking-mode-audio-i-o

import pyaudio

p = pyaudio.PyAudio()

print("Num devices:", p.get_device_count())
print()

# See https://stackoverflow.com/q/20760589
for i in range(p.get_device_count()):
=================
728356
count:1
# Indeed, the value of the "label" variable given in the lambda function is a
# reference not a copy; thus here, all call to the "callback" function would
# print "Mango"!
#
# A copy of "label" should be given to the lambda function like in the
# following version ("arg" is a copy of "label", not a reference).
#
# See the following links for more information:
# - http://effbot.org/zone/tkinter-callbacks.htm
# - http://stackoverflow.com/questions/728356/dynamically-creating-a-menu-in-tkinter-lambda-expressions
# - http://stackoverflow.com/questions/938429/scope-of-python-lambda-functions-and-their-parameters
# - http://stackoverflow.com/questions/19693782/callback-function-tkinter-button-with-variable-parameter

def callback(arg):
    print(arg)

l = []

for label in ["Banana", "Apple", "Mango"]:
    l.append(lambda arg=label: callback(arg))
=================
938429
count:1
# reference not a copy; thus here, all call to the "callback" function would
# print "Mango"!
#
# A copy of "label" should be given to the lambda function like in the
# following version ("arg" is a copy of "label", not a reference).
#
# See the following links for more information:
# - http://effbot.org/zone/tkinter-callbacks.htm
# - http://stackoverflow.com/questions/728356/dynamically-creating-a-menu-in-tkinter-lambda-expressions
# - http://stackoverflow.com/questions/938429/scope-of-python-lambda-functions-and-their-parameters
# - http://stackoverflow.com/questions/19693782/callback-function-tkinter-button-with-variable-parameter

def callback(arg):
    print(arg)

l = []

for label in ["Banana", "Apple", "Mango"]:
    l.append(lambda arg=label: callback(arg))

=================
19693782
count:1
# print "Mango"!
#
# A copy of "label" should be given to the lambda function like in the
# following version ("arg" is a copy of "label", not a reference).
#
# See the following links for more information:
# - http://effbot.org/zone/tkinter-callbacks.htm
# - http://stackoverflow.com/questions/728356/dynamically-creating-a-menu-in-tkinter-lambda-expressions
# - http://stackoverflow.com/questions/938429/scope-of-python-lambda-functions-and-their-parameters
# - http://stackoverflow.com/questions/19693782/callback-function-tkinter-button-with-variable-parameter

def callback(arg):
    print(arg)

l = []

for label in ["Banana", "Apple", "Mango"]:
    l.append(lambda arg=label: callback(arg))

l[0]()
=================
22772968
count:1
# -*- coding: utf-8 -*-

# Copyright (c) 2015 Jérémie DECOCK (http://www.jdhp.org)

"""
This is the simplest Python GTK+3 snippet.

See: http://stackoverflow.com/questions/22772968/python-pygtk-how-to-put-a-window-on-a-specific-display-monitor
"""

from gi.repository import Gtk as gtk

def main():
    window1 = gtk.Window()
    window2 = gtk.Window()
    
    # Monitors
    screen = window1.get_screen()
=================
19072161
count:1
# -*- coding: utf-8 -*-

# Copyright (c) 2015 Jérémie DECOCK (http://www.jdhp.org)

"""
This is the simplest Python GTK+3 snippet.

See: http://stackoverflow.com/questions/19072161/preventing-multiple-instances-of-a-gtk-application
     https://developer.gnome.org/gnome-devel-demos/stable/GtkApplicationWindow.py.html.en
     https://git.gnome.org/browse/gnome-music/tree/gnomemusic/application.py
     https://git.gnome.org/browse/pitivi/tree/pitivi/application.py
     https://git.gnome.org/browse/gnome-tweak-tool/tree/gtweak/app.py
     https://git.gnome.org/browse/meld/tree/meld/meldapp.py
"""

from gi.repository import Gtk as gtk
from gi.repository import Gio as gio
import sys
=================
9682297
count:2

# Copyright (c) 2015 Jérémie DECOCK (http://www.jdhp.org)

"""
This is the simplest Python GTK+3 Poppler snippet.

WARNING: Debian users have to install the "libpoppler-glib-dev" package to run
         this snippet.

SEE: http://stackoverflow.com/questions/9682297/displaying-pdf-files-with-python3
"""

import gi
gi.require_version('Poppler', '0.18')

from gi.repository import Gtk as gtk
from gi.repository import Poppler as poppler

import os

=================
17109634
count:1

# The TreeView's selection callback
def simple_click_cb(selection):
    model, treeiter = selection.get_selected()
    if treeiter != None:
        print("You selected", model[treeiter][0], "[simple click]")


# The TreeView's double click callback
# See: http://stackoverflow.com/questions/17109634/hyperlink-in-cellrenderertext-markup
def double_click_cb(tree_view, tree_path, tree_view_column):
    model = tree_view.get_model()
    print("You selected", model[tree_path][0], "[double click]")


def main():
    window = gtk.Window()
    window.set_default_size(300, 450)
    window.set_border_width(18)

=================
24788003
count:1
# -*- coding: utf-8 -*-

# https://stackoverflow.com/questions/24788003/how-do-you-resize-an-image-in-python-using-pyglet

import pyglet

window = pyglet.window.Window()

#image = pyglet.resource.image('image.png')
image = pyglet.resource.image('image.jpeg')

print(image.width)
print(image.height)
=================
24226781
count:2
# Python 3 named "urllib.request" and "urllib.error".
# Urllib (and thus urllib2) is part of the Python3 standard library but this is
# not the case for urllib3 !
# "urllib and urllib2 have little to do with each other. They were designed to
# be independent and standalone, each solving a different scope of problems,
# and urllib3 follows in a similar vein."

# Online documentation:
# - https://docs.python.org/3/library/urllib.request.html
# - http://stackoverflow.com/questions/24226781/changing-user-agent-in-python-3-for-urrlib-urlopen
# - http://stackoverflow.com/questions/802134/changing-user-agent-on-urllib2-urlopen

import argparse
import gzip
import urllib.request

HTTP_HEADERS = {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.2.1',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Language': 'fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3',
=================
802134
count:2
# Urllib (and thus urllib2) is part of the Python3 standard library but this is
# not the case for urllib3 !
# "urllib and urllib2 have little to do with each other. They were designed to
# be independent and standalone, each solving a different scope of problems,
# and urllib3 follows in a similar vein."

# Online documentation:
# - https://docs.python.org/3/library/urllib.request.html
# - http://stackoverflow.com/questions/24226781/changing-user-agent-in-python-3-for-urrlib-urlopen
# - http://stackoverflow.com/questions/802134/changing-user-agent-on-urllib2-urlopen

import argparse
import gzip
import urllib.request

HTTP_HEADERS = {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.2.1',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Language': 'fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate'
=================
24226781
count:1
# Python 3 named "urllib.request" and "urllib.error".
# Urllib (and thus urllib2) is part of the Python3 standard library but this is
# not the case for urllib3 !
# "urllib and urllib2 have little to do with each other. They were designed to
# be independent and standalone, each solving a different scope of problems,
# and urllib3 follows in a similar vein."

# Online documentation:
# - https://docs.python.org/3/library/urllib.request.html
# - http://stackoverflow.com/questions/24226781/changing-user-agent-in-python-3-for-urrlib-urlopen
# - http://stackoverflow.com/questions/802134/changing-user-agent-on-urllib2-urlopen

import argparse
import shutil
import urllib.request

HTTP_HEADERS = {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.2.1',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Language': 'fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3',
=================
802134
count:1
# Urllib (and thus urllib2) is part of the Python3 standard library but this is
# not the case for urllib3 !
# "urllib and urllib2 have little to do with each other. They were designed to
# be independent and standalone, each solving a different scope of problems,
# and urllib3 follows in a similar vein."

# Online documentation:
# - https://docs.python.org/3/library/urllib.request.html
# - http://stackoverflow.com/questions/24226781/changing-user-agent-in-python-3-for-urrlib-urlopen
# - http://stackoverflow.com/questions/802134/changing-user-agent-on-urllib2-urlopen

import argparse
import shutil
import urllib.request

HTTP_HEADERS = {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.2.1',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Language': 'fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate'
=================
7243750
count:1
    parser.add_argument("url", nargs=1, metavar="URL",
                        help="The URL of the webpage to parse.")
    args = parser.parse_args()

    url = args.url[0]
    print("URL:", url)
    print()

    # HTTP REQUEST ############################################################
    # See http://stackoverflow.com/questions/7243750/download-file-from-web-in-python-3

    http_request = urllib.request.Request(url, data=None, headers=HTTP_HEADERS)

    with urllib.request.urlopen(http_request) as http_response, open('out.html', 'wb') as out_file:
        shutil.copyfileobj(http_response, out_file)

if __name__ == '__main__':
    main()
=================
24226781
count:1
# Python 3 named "urllib.request" and "urllib.error".
# Urllib (and thus urllib2) is part of the Python3 standard library but this is
# not the case for urllib3 !
# "urllib and urllib2 have little to do with each other. They were designed to
# be independent and standalone, each solving a different scope of problems,
# and urllib3 follows in a similar vein."

# Online documentation:
# - https://docs.python.org/3/library/urllib.request.html
# - http://stackoverflow.com/questions/24226781/changing-user-agent-in-python-3-for-urrlib-urlopen
# - http://stackoverflow.com/questions/802134/changing-user-agent-on-urllib2-urlopen

import argparse
import urllib.request

HTTP_HEADERS = {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.2.1',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Language': 'fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate'
=================
802134
count:1
# Urllib (and thus urllib2) is part of the Python3 standard library but this is
# not the case for urllib3 !
# "urllib and urllib2 have little to do with each other. They were designed to
# be independent and standalone, each solving a different scope of problems,
# and urllib3 follows in a similar vein."

# Online documentation:
# - https://docs.python.org/3/library/urllib.request.html
# - http://stackoverflow.com/questions/24226781/changing-user-agent-in-python-3-for-urrlib-urlopen
# - http://stackoverflow.com/questions/802134/changing-user-agent-on-urllib2-urlopen

import argparse
import urllib.request

HTTP_HEADERS = {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.2.1',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Language': 'fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate'
}
=================
9718541
count:1
# Python 3 named "urllib.request" and "urllib.error".
# Urllib (and thus urllib2) is part of the Python3 standard library but this is
# not the case for urllib3 !
# "urllib and urllib2 have little to do with each other. They were designed to
# be independent and standalone, each solving a different scope of problems,
# and urllib3 follows in a similar vein."

# Online documentation:
# - https://docs.python.org/3.0/library/urllib.parse.html
# - http://stackoverflow.com/questions/9718541/reconstructing-absolute-urls-from-relative-urls-on-a-page

from urllib.parse import urljoin

def main():

    base = "http://www.jdhp.org/foo/bar/baz.html"
    relative_url = "../../images/img.png"

    absolute_url = urljoin(base, relative_url)

=================
9626535
count:1
# Python 3 named "urllib.request" and "urllib.error".
# Urllib (and thus urllib2) is part of the Python3 standard library but this is
# not the case for urllib3 !
# "urllib and urllib2 have little to do with each other. They were designed to
# be independent and standalone, each solving a different scope of problems,
# and urllib3 follows in a similar vein."

# Online documentation:
# - https://docs.python.org/3.0/library/urllib.parse.html
# - http://stackoverflow.com/questions/9626535/get-domain-name-from-url

from urllib.parse import urlparse

def main():

    uri = "http://www.jdhp.org/home_en.html"

    parsed_uri = urlparse(uri)

    print("uri", uri)
=================
7243750
count:1
# Python 3 named "urllib.request" and "urllib.error".
# Urllib (and thus urllib2) is part of the Python3 standard library but this is
# not the case for urllib3 !
# "urllib and urllib2 have little to do with each other. They were designed to
# be independent and standalone, each solving a different scope of problems,
# and urllib3 follows in a similar vein."

# Online documentation:
# - https://docs.python.org/3/library/urllib.request.html
# - http://stackoverflow.com/questions/7243750/download-file-from-web-in-python-3
# - http://stackoverflow.com/questions/22676/how-do-i-download-a-file-over-http-using-python

import urllib.request

def main():
    """Main function"""

    url = "https://www.google.fr/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"

    # Download the file from "url" and save it locally under "out.png"
=================
22676
count:1
# Urllib (and thus urllib2) is part of the Python3 standard library but this is
# not the case for urllib3 !
# "urllib and urllib2 have little to do with each other. They were designed to
# be independent and standalone, each solving a different scope of problems,
# and urllib3 follows in a similar vein."

# Online documentation:
# - https://docs.python.org/3/library/urllib.request.html
# - http://stackoverflow.com/questions/7243750/download-file-from-web-in-python-3
# - http://stackoverflow.com/questions/22676/how-do-i-download-a-file-over-http-using-python

import urllib.request

def main():
    """Main function"""

    url = "https://www.google.fr/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"

    # Download the file from "url" and save it locally under "out.png"
    urllib.request.urlretrieve(url, "out.png")
=================
9626535
count:1
# Python 3 named "urllib.request" and "urllib.error".
# Urllib (and thus urllib2) is part of the Python3 standard library but this is
# not the case for urllib3 !
# "urllib and urllib2 have little to do with each other. They were designed to
# be independent and standalone, each solving a different scope of problems,
# and urllib3 follows in a similar vein."

# Online documentation:
# - https://docs.python.org/3.0/library/urllib.parse.html
# - http://stackoverflow.com/questions/9626535/get-domain-name-from-url

from urllib.parse import urlparse

def main():

    uri = "http://www.jdhp.org/home_en.html"

    parsed_uri = urlparse(uri)
    domain = '{uri.netloc}'.format(uri=parsed_uri)

=================
18675266
count:4
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# See: http://matplotlib.sourceforge.net/examples/user_interfaces/embedding_in_tk.html
#      http://matplotlib.sourceforge.net/examples/user_interfaces/embedding_in_tk2.html
#      http://stackoverflow.com/questions/18675266/how-to-make-matplotlibpyplot-resizeable-with-the-tkinter-window-in-python

import matplotlib
matplotlib.use('TkAgg')

import math
import numpy as np
import matplotlib.pyplot as plt

from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg, NavigationToolbar2TkAgg
# implement the default mpl key bindings
=================
18675266
count:2
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# See: http://matplotlib.sourceforge.net/examples/user_interfaces/embedding_in_tk.html
#      http://matplotlib.sourceforge.net/examples/user_interfaces/embedding_in_tk2.html
#      http://stackoverflow.com/questions/18675266/how-to-make-matplotlibpyplot-resizeable-with-the-tkinter-window-in-python

import matplotlib
matplotlib.use('TkAgg')

import numpy as np
import matplotlib.pyplot as plt

from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg, NavigationToolbar2TkAgg

import tkinter as tk
=================
4065783
count:3

import tkinter as tk

root = tk.Tk()

label = tk.Label(root, text="Please resize the window...")
label.pack(fill=tk.BOTH, expand=1)

def resize_callback(event):
    # http://stackoverflow.com/questions/4065783/how-do-i-get-a-windows-current-size-using-tkinter
    widget_current_width = label.winfo_width()      # Current label width (this work for every widgets!)
    widget_current_height = label.winfo_height()    # Current label height (this work for every widgets!)

    label["text"] = "Label widget size: {}x{}".format(widget_current_width, widget_current_height)

label.bind('<Configure>', resize_callback)

=================
18675266
count:8
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# See: http://matplotlib.sourceforge.net/examples/user_interfaces/embedding_in_tk.html
#      http://matplotlib.sourceforge.net/examples/user_interfaces/embedding_in_tk2.html
#      http://stackoverflow.com/questions/18675266/how-to-make-matplotlibpyplot-resizeable-with-the-tkinter-window-in-python

import matplotlib
matplotlib.use('TkAgg')

import numpy as np
import matplotlib.pyplot as plt

from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg

import tkinter as tk
=================
18675266
count:2
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# See: http://matplotlib.sourceforge.net/examples/user_interfaces/embedding_in_tk.html
#      http://matplotlib.sourceforge.net/examples/user_interfaces/embedding_in_tk2.html
#      http://stackoverflow.com/questions/18675266/how-to-make-matplotlibpyplot-resizeable-with-the-tkinter-window-in-python

import matplotlib
matplotlib.use('TkAgg')

import numpy as np
import matplotlib.pyplot as plt

from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg, NavigationToolbar2TkAgg

# Implement the default Matplotlib key bindings
=================
3177231
count:3
if tk.TkVersion < 8.6:
    print("*" * 80)
    print("WARNING: Tk version {} is installed on your system.".format(tk.TkVersion))
    print("Tk < 8.6 only supports three file formats: GIF, PGM and PPM.")
    print("You need to install Tk >= 8.6 if you want to read JPEG and PNG images!")
    print("*" * 80)

# WARNING:
# A Tk window MUST be created before you can call PhotoImage!
# See: http://stackoverflow.com/questions/3177231/python-pil-imagetk-photoimage-is-giving-me-a-bus-error
#      http://stackoverflow.com/questions/1236540/how-do-i-use-pil-with-tkinter

root = tk.Tk()

# PIL #########################################################################

# WARNING:
# You must keep a reference to the image object in your Python program,
# either by storing it in a global variable, or by attaching it to another
# object!
=================
1236540
count:3
    print("*" * 80)
    print("WARNING: Tk version {} is installed on your system.".format(tk.TkVersion))
    print("Tk < 8.6 only supports three file formats: GIF, PGM and PPM.")
    print("You need to install Tk >= 8.6 if you want to read JPEG and PNG images!")
    print("*" * 80)

# WARNING:
# A Tk window MUST be created before you can call PhotoImage!
# See: http://stackoverflow.com/questions/3177231/python-pil-imagetk-photoimage-is-giving-me-a-bus-error
#      http://stackoverflow.com/questions/1236540/how-do-i-use-pil-with-tkinter

root = tk.Tk()

# PIL #########################################################################

# WARNING:
# You must keep a reference to the image object in your Python program,
# either by storing it in a global variable, or by attaching it to another
# object!
#
=================
25480853
count:1
 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# SEE: http://stackoverflow.com/questions/25480853/cairo-with-tkinter
#      http://effbot.org/tkinterbook/photoimage.htm#patterns

# Required Debian package (Debian 8.1 Jessie): python3-pil.imagetk

import tkinter as tk
import PIL.Image as pil      # PIL.Image is a module not a class...
import PIL.ImageTk as piltk  # PIL.ImageTk is a module not a class...

import cairo

=================
3177231
count:1
cairo_context.rectangle(0, 0, 1, 1)
cairo_context.set_source_rgba(1, 0, 0, 0.8)
cairo_context.fill()


# TKINTER

# WARNING:
# A Tk window MUST be created before you can call PhotoImage!
# See: http://stackoverflow.com/questions/3177231/python-pil-imagetk-photoimage-is-giving-me-a-bus-error
#      http://stackoverflow.com/questions/1236540/how-do-i-use-pil-with-tkinter

root = tk.Tk()


# PIL

# WARNING:
# You must keep a reference to the image object in your Python program,
# either by storing it in a global variable, or by attaching it to another
=================
1236540
count:1
cairo_context.set_source_rgba(1, 0, 0, 0.8)
cairo_context.fill()


# TKINTER

# WARNING:
# A Tk window MUST be created before you can call PhotoImage!
# See: http://stackoverflow.com/questions/3177231/python-pil-imagetk-photoimage-is-giving-me-a-bus-error
#      http://stackoverflow.com/questions/1236540/how-do-i-use-pil-with-tkinter

root = tk.Tk()


# PIL

# WARNING:
# You must keep a reference to the image object in your Python program,
# either by storing it in a global variable, or by attaching it to another
# object!
=================
5886280
count:1
 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# See: http://stackoverflow.com/questions/5886280/python-tkinter-overrideredirect-cannot-receive-keystrokes-linux
#      http://stackoverflow.com/questions/7966119/display-fullscreen-mode-on-tkinter
#      http://effbot.org/tkinterbook/wm.htm

import tkinter as tk

root = tk.Tk()

label = tk.Label(root, text="Press any key to quit")
label.pack(fill=tk.BOTH, expand=1)

=================
7966119
count:1
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# See: http://stackoverflow.com/questions/5886280/python-tkinter-overrideredirect-cannot-receive-keystrokes-linux
#      http://stackoverflow.com/questions/7966119/display-fullscreen-mode-on-tkinter
#      http://effbot.org/tkinterbook/wm.htm

import tkinter as tk

root = tk.Tk()

label = tk.Label(root, text="Press any key to quit")
label.pack(fill=tk.BOTH, expand=1)

# SETUP FULLSCREEN
=================
3962247
count:1

label_stack = []

def add_label():
    label = tk.Label(root, text="Label " + str(len(label_stack)))
    label.pack(side=tk.TOP)
    label_stack.append(label)

def del_label():
    # See http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
    #     http://stackoverflow.com/questions/12364981/how-to-delete-tkinter-widgets-from-a-window
    try:
        label = label_stack.pop()
        label.pack_forget()
        label.destroy()
    except:
        print("Empty stack.")

root = tk.Tk()

=================
12364981
count:1
label_stack = []

def add_label():
    label = tk.Label(root, text="Label " + str(len(label_stack)))
    label.pack(side=tk.TOP)
    label_stack.append(label)

def del_label():
    # See http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
    #     http://stackoverflow.com/questions/12364981/how-to-delete-tkinter-widgets-from-a-window
    try:
        label = label_stack.pop()
        label.pack_forget()
        label.destroy()
    except:
        print("Empty stack.")

root = tk.Tk()

del_button = tk.Button(root, text="Del", width=10, command=del_label)
=================
728356
count:1
#
# Indeed, the value of the "label" variable given in the lambda function is a
# reference not a copy; thus here, all buttons would print "Mango"!
#
# A copy of "label" should be given to the lambda function like in the
# following version ("arg" is a copy of "label", not a reference).
#
# See the following links for more information:
# - http://effbot.org/zone/tkinter-callbacks.htm
# - http://stackoverflow.com/questions/728356/dynamically-creating-a-menu-in-tkinter-lambda-expressions
# - http://stackoverflow.com/questions/938429/scope-of-python-lambda-functions-and-their-parameters
# - http://stackoverflow.com/questions/19693782/callback-function-tkinter-button-with-variable-parameter

import tkinter as tk

def callback(arg):
    """A callback with an argument."""
    print(arg)

root = tk.Tk()
=================
938429
count:1
# Indeed, the value of the "label" variable given in the lambda function is a
# reference not a copy; thus here, all buttons would print "Mango"!
#
# A copy of "label" should be given to the lambda function like in the
# following version ("arg" is a copy of "label", not a reference).
#
# See the following links for more information:
# - http://effbot.org/zone/tkinter-callbacks.htm
# - http://stackoverflow.com/questions/728356/dynamically-creating-a-menu-in-tkinter-lambda-expressions
# - http://stackoverflow.com/questions/938429/scope-of-python-lambda-functions-and-their-parameters
# - http://stackoverflow.com/questions/19693782/callback-function-tkinter-button-with-variable-parameter

import tkinter as tk

def callback(arg):
    """A callback with an argument."""
    print(arg)

root = tk.Tk()

=================
19693782
count:1
# reference not a copy; thus here, all buttons would print "Mango"!
#
# A copy of "label" should be given to the lambda function like in the
# following version ("arg" is a copy of "label", not a reference).
#
# See the following links for more information:
# - http://effbot.org/zone/tkinter-callbacks.htm
# - http://stackoverflow.com/questions/728356/dynamically-creating-a-menu-in-tkinter-lambda-expressions
# - http://stackoverflow.com/questions/938429/scope-of-python-lambda-functions-and-their-parameters
# - http://stackoverflow.com/questions/19693782/callback-function-tkinter-button-with-variable-parameter

import tkinter as tk

def callback(arg):
    """A callback with an argument."""
    print(arg)

root = tk.Tk()

for label in ["Banana", "Apple", "Mango"]:
=================
8691655
count:1
 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# See http://stackoverflow.com/questions/8691655/how-to-put-a-tkinter-window-on-top-of-the-others
#     http://stackoverflow.com/questions/1892339/how-to-make-a-window-jump-to-the-front

import tkinter as tk

root = tk.Tk()

root.lift()
root.attributes("-topmost", True)   # Set the window as "always visible"
root.attributes("-topmost", False)

=================
1892339
count:1
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# See http://stackoverflow.com/questions/8691655/how-to-put-a-tkinter-window-on-top-of-the-others
#     http://stackoverflow.com/questions/1892339/how-to-make-a-window-jump-to-the-front

import tkinter as tk

root = tk.Tk()

root.lift()
root.attributes("-topmost", True)   # Set the window as "always visible"
root.attributes("-topmost", False)

=================
8691655
count:1
 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# See http://stackoverflow.com/questions/8691655/how-to-put-a-tkinter-window-on-top-of-the-others

import tkinter as tk

root = tk.Tk()

root.lift()
#root.attributes("-topmost", True)   # Set the window as "always visible"
root.call('wm', 'attributes', '.', '-topmost', True)
root.after_idle(root.call, 'wm', 'attributes', '.', '-topmost', False)

=================
25480853
count:1
 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# SEE: http://stackoverflow.com/questions/25480853/cairo-with-tkinter
#      http://effbot.org/tkinterbook/photoimage.htm#patterns

# Required Debian package (Debian 8.1 Jessie): python-pil.imagetk

import Tkinter as tk
import PIL.Image as pil      # PIL.Image is a module not a class...
import PIL.ImageTk as piltk  # PIL.ImageTk is a module not a class...

import cairo

=================
3177231
count:1
    cairo_context.rectangle(0, 0, 1, 1)
    cairo_context.set_source_rgba(1, 0, 0, 0.8)
    cairo_context.fill()


    # TKINTER

    # WARNING:
    # A Tk window MUST be created before you can call PhotoImage!
    # See: http://stackoverflow.com/questions/3177231/python-pil-imagetk-photoimage-is-giving-me-a-bus-error
    #      http://stackoverflow.com/questions/1236540/how-do-i-use-pil-with-tkinter

    root = tk.Tk()


    # PIL

    # WARNING:
    # You must keep a reference to the image object in your Python program,
    # either by storing it in a global variable, or by attaching it to another
=================
1236540
count:1
    cairo_context.set_source_rgba(1, 0, 0, 0.8)
    cairo_context.fill()


    # TKINTER

    # WARNING:
    # A Tk window MUST be created before you can call PhotoImage!
    # See: http://stackoverflow.com/questions/3177231/python-pil-imagetk-photoimage-is-giving-me-a-bus-error
    #      http://stackoverflow.com/questions/1236540/how-do-i-use-pil-with-tkinter

    root = tk.Tk()


    # PIL

    # WARNING:
    # You must keep a reference to the image object in your Python program,
    # either by storing it in a global variable, or by attaching it to another
    # object!
=================
3962247
count:1

label_stack = []

def add_label():
    label = tk.Label(root, text="Label " + str(len(label_stack)))
    label.pack(side=tk.TOP)
    label_stack.append(label)

def del_label():
    # See http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
    #     http://stackoverflow.com/questions/12364981/how-to-delete-tkinter-widgets-from-a-window
    try:
        label = label_stack.pop()
        label.pack_forget()
        label.destroy()
    except:
        print "Empty stack."

root = tk.Tk()

=================
12364981
count:1
label_stack = []

def add_label():
    label = tk.Label(root, text="Label " + str(len(label_stack)))
    label.pack(side=tk.TOP)
    label_stack.append(label)

def del_label():
    # See http://stackoverflow.com/questions/3962247/python-removing-a-tkinter-frame
    #     http://stackoverflow.com/questions/12364981/how-to-delete-tkinter-widgets-from-a-window
    try:
        label = label_stack.pop()
        label.pack_forget()
        label.destroy()
    except:
        print "Empty stack."

root = tk.Tk()

del_button = tk.Button(root, text="Del", width=10, command=del_label)
=================
11373192
count:2
# -*- coding: utf-8 -*-
            
# see http://stackoverflow.com/questions/11373192/generating-discrete-random-variables-with-specified-weights-using-scipy-or-numpy

import numpy as np
from scipy.stats import rv_discrete  


# IF VALUES ARE INTEGERS ########################

values = [1, 2, 3]
probabilities = [0.2, 0.5, 0.3]
num_samples = 1000
=================
16621351
count:1

# See https://docs.scipy.org/doc/numpy/user/basics.rec.html
#     http://stackoverflow.com/questions/16621351/how-to-use-python-numpy-savetxt-to-write-strings-and-float-number-to-an-ascii-fi

import numpy as np

# METH 1

foo = np.array([
                   (1, 'Sirius', -1.45, 'A1V'),
                   (2, 'Canopus', -0.73, 'F0Ib'),
                   (3, 'Rigil Kent', -0.1, 'G2V')
               ],
=================
7370801
count:1
# -*- coding: utf-8 -*-

# Copyright (c) 2016 Jérémie DECOCK (http://www.jdhp.org)

# See: https://docs.python.org/3/library/time.html#time.process_time
#      http://stackoverflow.com/questions/7370801/measure-time-elapsed-in-python

import time

initial_time = time.process_time()

#do some stuff
time.sleep(1)

final_time = time.process_time()

=================
7370801
count:1
# -*- coding: utf-8 -*-

# Copyright (c) 2016 Jérémie DECOCK (http://www.jdhp.org)

# See: https://docs.python.org/3/library/time.html#time.process_time
#      http://stackoverflow.com/questions/7370801/measure-time-elapsed-in-python

import time

initial_time = time.perf_counter()

#do some stuff
time.sleep(1)

final_time = time.perf_counter()

=================
4765242
count:1
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.


# See http://stackoverflow.com/questions/4764932/in-python-how-do-i-read-the-exif-data-for-an-image/4765242#4765242

import Image

import PIL
import PIL.ExifTags

def main():
    """Main function"""

    img = Image.open("test.jpeg")
=================
3908063
count:1
import os
import sys
import subprocess

TIMEOUT=3  # seconds

# If you launch a sub-process (even with shell=False), then the
# subprocess.Popen.kill() function will only kill that sub-process (so if there
# are any "grandchild" processes, they won't be terminated.).
# See: http://stackoverflow.com/questions/3908063/python-subprocess-with-shell-true-redirections-and-platform-independent-subproc
#
# The solution is to use preexec_fn to cause the subprocess to acquire it's own
# session group (then a signal is sent to all processes in that session group).
# See: http://stackoverflow.com/questions/3876886/timeout-a-subprocess

def execute(args):
    try:
        output = subprocess.check_output(args, stderr=subprocess.STDOUT, universal_newlines=True, timeout=TIMEOUT)
        #output = subprocess.check_output(args, stderr=subprocess.STDOUT, universal_newlines=True, timeout=TIMEOUT, preexec_fn=os.setsid)
        print(output)
=================
3876886
count:1
TIMEOUT=3  # seconds

# If you launch a sub-process (even with shell=False), then the
# subprocess.Popen.kill() function will only kill that sub-process (so if there
# are any "grandchild" processes, they won't be terminated.).
# See: http://stackoverflow.com/questions/3908063/python-subprocess-with-shell-true-redirections-and-platform-independent-subproc
#
# The solution is to use preexec_fn to cause the subprocess to acquire it's own
# session group (then a signal is sent to all processes in that session group).
# See: http://stackoverflow.com/questions/3876886/timeout-a-subprocess

def execute(args):
    try:
        output = subprocess.check_output(args, stderr=subprocess.STDOUT, universal_newlines=True, timeout=TIMEOUT)
        #output = subprocess.check_output(args, stderr=subprocess.STDOUT, universal_newlines=True, timeout=TIMEOUT, preexec_fn=os.setsid)
        print(output)
    except OSError as e:
        print("Execution failed:", e, file=sys.stderr)
    except subprocess.CalledProcessError as e:
        print("Execution failed:", e, file=sys.stderr)
=================
4765242
count:1
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.


# See http://stackoverflow.com/questions/4764932/in-python-how-do-i-read-the-exif-data-for-an-image/4765242#4765242

import PIL.Image as pil_img           # PIL.Image is a module not a class...
import PIL.ExifTags as pil_exif_tags  # PIL.ExifTags is a module not a class...

import sys

def main():
    """Main function"""

    try:
=================
16311562
count:2
data = {"key1": "value1",
        "key2": 2,
        "key3": 3.14,
        "key4": True,
        "key5": (1, 2, 3, 4)}

print(data)

with lzma.open("test.json.xz", "wt") as fd:
    # https://stackoverflow.com/questions/16311562/python-json-without-whitespaces
    # https://docs.python.org/3/library/json.html#json.dump
=================
10556479
count:1
"""
OpenCV - Trackbar widget.

Required: opencv library (Debian: aptitude install python-opencv)

See: https://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_gui/py_trackbar/py_trackbar.html#trackbar

WARNING: Tkinter doesn't work if it's run outside the main thread!

    See: http://stackoverflow.com/questions/10556479/running-a-tkinter-form-in-a-separate-thread
    "Tkinter isn't thread safe, and the general consensus is that Tkinter
    doesn't work in a non-main thread. If you rewrite your code so that Tkinter
    runs in the main thread, you can have your workers run in other threads."
"""

from __future__ import print_function

import cv2 as cv
import numpy as np
import argparse
=================
28521783
count:1

Required: opencv library (Debian: aptitude install python-opencv)

See: https://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_imgproc/py_houghcircles/py_houghcircles.html#hough-circles
     https://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_imgproc/py_colorspaces/py_colorspaces.html#object-tracking
     Oreilly's book "Learning OpenCV" (first edition) p.158 for details about Hough transforms.

     http://txt.arboreus.com/2014/10/21/remove-circles-from-an-image-in-python.html
     http://wiki.elphel.com/index.php?title=OpenCV_Tennis_balls_recognizing_tutorial
     http://stackoverflow.com/questions/28521783/python-opencv-houghcircles-not-giving-good-results
     http://computer-vision-talks.com/articles/how-to-detect-circles-in-noisy-image/
     http://www.pyimagesearch.com/2014/07/21/detecting-circles-images-using-opencv-hough-circles/
"""

from __future__ import print_function

import cv2 as cv
import numpy as np
import argparse

=================
27156381
count:1
ax = fig.add_subplot(111)

# AX ##########################################################################

xbins = np.linspace(x.min(), x.max(), 70)
ybins = np.linspace(y.min(), y.max(), 70)

hist, xedges, yedges = np.histogram2d(x, y, bins=(xbins, ybins))

# See http://stackoverflow.com/questions/27156381/python-creating-a-2d-histogram-from-a-numpy-matrix

xidx = np.clip(np.digitize(x, xedges), 0, hist.shape[0]-1)
yidx = np.clip(np.digitize(y, yedges), 0, hist.shape[1]-1)
c = hist[xidx, yidx]

sc = ax.scatter(x, y,
                c=c,
                s=5,
                marker='o',
                #cmap='gnuplot2',
=================
8482588
count:2
# -*- coding: utf-8 -*-

"""
Plot an histogram with a text stats summary

See:

- https://stackoverflow.com/questions/8482588/putting-text-in-top-left-corner-of-matplotlib-plot
"""

import numpy as np
import matplotlib.pyplot as plt

###############################################################################

def add_stat_box(ax, samples):
    sig_info = "Samples: {}\nMin: {:0.2f}\nMax: {:0.2f}\nMean: {:0.2f}\nSTD: {:0.2f}".format(len(samples),
                                                                                             samples.min(),
=================
8482588
count:2
###############################################################################

def add_stat_box(ax, samples):
    sig_info = "Samples: {}\nMin: {:0.2f}\nMax: {:0.2f}\nMean: {:0.2f}\nSTD: {:0.2f}".format(len(samples),
                                                                                             samples.min(),
                                                                                             samples.max(),
                                                                                             samples.mean(),
                                                                                             samples.std())

    # https://stackoverflow.com/questions/8482588/putting-text-in-top-left-corner-of-matplotlib-plot
    ax.text(0.95, 0.95, sig_info,
            horizontalalignment='right',
            verticalalignment='top',
            fontsize=18,
            transform = ax.transAxes)

    return ax

# MAKE DATA ###################################################################

=================
11874767
count:1
# -*- coding: utf-8 -*-

"""
Realtime animation

See http://stackoverflow.com/questions/11874767/real-time-plotting-in-while-loop-with-matplotlib
"""

import numpy as np
import matplotlib.pyplot as plt

import random
import time

X_DELTA = 1
TIME_SLEEP = 0.1
=================
33371917
count:1
# -*- coding: utf-8 -*-

"""
Plot an histogram of a large input data (larger than memory)

Fill the histogram chunk by chunk.

See:
- https://stackoverflow.com/questions/33371917/how-to-plot-result-of-np-histogram-with-matplotlib-analog-to-plt-his
- https://stackoverflow.com/questions/5328556/histogram-matplotlib
"""

import numpy as np
import matplotlib.pyplot as plt

mu, sigma = 100, 15

# Build histogram chunk by chunk ######

=================
5328556
count:1
# -*- coding: utf-8 -*-

"""
Plot an histogram of a large input data (larger than memory)

Fill the histogram chunk by chunk.

See:
- https://stackoverflow.com/questions/33371917/how-to-plot-result-of-np-histogram-with-matplotlib-analog-to-plt-his
- https://stackoverflow.com/questions/5328556/histogram-matplotlib
"""

import numpy as np
import matplotlib.pyplot as plt

mu, sigma = 100, 15

# Build histogram chunk by chunk ######

bins = range(40, 160)
=================
29175093
count:1
# -*- coding: utf-8 -*-

"""
Make a 2D histogram using a logarithmic scale on X and Y axis

See:

- http://stackoverflow.com/questions/29175093/creating-a-log-linear-plot-in-matplotlib-using-hist2d
"""

import numpy as np
import matplotlib.pyplot as plt

# MAKE DATA ###################################################################

x, y = np.random.exponential(size=(2, 100000))

# INIT FIGURE #################################################################
=================
29175093
count:1
counts, _, _ = np.histogram2d(x, y, bins=(xbins, ybins))

print(counts)

pcm = ax2.pcolormesh(xbins, ybins, counts)
plt.colorbar(pcm)
#fig.colorbar(pcm, ax=ax2)  # this works too

## The following line doesn't actually work...
## See http://stackoverflow.com/questions/29175093/creating-a-log-linear-plot-in-matplotlib-using-hist2d
#H = ax2.hist2d(x, y, bins=[xbins, ybins])
#fig.colorbar(H[3], ax=ax2)

ax2.set_xscale("log")               # <- Activate log scale on X axis
ax2.set_yscale("log")               # <- Activate log scale on Y axis

ax2.set_xlim(xmin=xbins[0])
ax2.set_xlim(xmax=xbins[-1])
ax2.set_ylim(ymin=ybins[0])
ax2.set_ylim(ymax=ybins[-1])
=================
8248467
count:1
plot(ax3, data_list, bins_min=1, bins_max=100, label_list=label_list, title="Log scale on y axis", logy=True)
plot(ax4, data_list, bins_min=1, bins_max=300, label_list=label_list, title="Log scale on x and y axis", logx=True, logy=True)

# General title #############

plt.suptitle("Binomial distribution", fontsize=22)

plt.tight_layout()

# http://stackoverflow.com/questions/8248467/matplotlib-tight-layout-doesnt-take-into-account-figure-suptitle
plt.subplots_adjust(top=0.9)

# Save file and plot ########

plt.savefig("subplots_full_example.png", bbox_inches='tight')

plt.show()
=================
4285103
count:2
- Text with Fancy Box:

    - https://matplotlib.org/api/patches_api.html#matplotlib.patches.BoxStyle
    - http://matplotlib.org/examples/pylab_examples/fancybox_demo2.html

- Path Patch: https://matplotlib.org/api/path_api.html#module-matplotlib.path
- Transform:

    - https://matplotlib.org/users/transforms_tutorial.html
    - https://stackoverflow.com/questions/4285103/matplotlib-rotating-a-patch
"""

import numpy as np
import matplotlib.pyplot as plt
import math

import matplotlib.patches as mpatches
import matplotlib.lines as mlines
import matplotlib.path as mpath
import itertools
=================
33371917
count:1
# -*- coding: utf-8 -*-

"""
Plot a loglog histogram of a large input data (larger than memory)

Fill the histogram chunk by chunk.

See:
- https://stackoverflow.com/questions/33371917/how-to-plot-result-of-np-histogram-with-matplotlib-analog-to-plt-his
- https://stackoverflow.com/questions/5328556/histogram-matplotlib
"""

import numpy as np
import matplotlib.pyplot as plt

mu, sigma = 1000, 1000

# Build histogram chunk by chunk ######

=================
5328556
count:1
# -*- coding: utf-8 -*-

"""
Plot a loglog histogram of a large input data (larger than memory)

Fill the histogram chunk by chunk.

See:
- https://stackoverflow.com/questions/33371917/how-to-plot-result-of-np-histogram-with-matplotlib-analog-to-plt-his
- https://stackoverflow.com/questions/5328556/histogram-matplotlib
"""

import numpy as np
import matplotlib.pyplot as plt

mu, sigma = 1000, 1000

# Build histogram chunk by chunk ######

vmin = -1.
=================
6855710
count:1
# -*- coding: utf-8 -*-

"""
Make a histogram using a logarithmic scale on X axis

See:

- http://stackoverflow.com/questions/6855710/how-to-have-logarithmic-bins-in-a-python-histogram
"""

import numpy as np
import matplotlib.pyplot as plt

# SETUP #######################################################################

# histtype : [‘bar’ | ‘barstacked’ | ‘step’ | ‘stepfilled’]
HIST_TYPE='bar'
ALPHA=0.5
=================
6855710
count:1
# -*- coding: utf-8 -*-

"""
Make a histogram using a logarithmic scale on X and Y axis

See:

- http://stackoverflow.com/questions/6855710/how-to-have-logarithmic-bins-in-a-python-histogram
"""

import numpy as np
import matplotlib.pyplot as plt

# SETUP #######################################################################

# histtype : [‘bar’ | ‘barstacked’ | ‘step’ | ‘stepfilled’]
HIST_TYPE='bar'
ALPHA=0.5
=================
27156381
count:1
fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(12, 6))

# AX1 #########################################################################

xbins = np.linspace(x.min(), x.max(), 70)
ybins = np.linspace(y.min(), y.max(), 70)

hist, xedges, yedges = np.histogram2d(x, y, bins=(xbins, ybins))

# See http://stackoverflow.com/questions/27156381/python-creating-a-2d-histogram-from-a-numpy-matrix

xidx = np.clip(np.digitize(x, xedges), 0, hist.shape[0]-1)
yidx = np.clip(np.digitize(y, yedges), 0, hist.shape[1]-1)
c = hist[xidx, yidx]

sc = ax1.scatter(x, y,
                 c=c,
                 s=5,
                 marker='o',
                 #cmap='gnuplot2',
=================
27156381
count:1

x = np.log10(x)
y = np.log10(y)

xbins = np.linspace(x.min(), x.max(), 70)
ybins = np.linspace(y.min(), y.max(), 70)

hist, xedges, yedges = np.histogram2d(x, y, bins=(xbins, ybins))

# See http://stackoverflow.com/questions/27156381/python-creating-a-2d-histogram-from-a-numpy-matrix

xidx = np.clip(np.digitize(x, xedges), 0, hist.shape[0]-1)
yidx = np.clip(np.digitize(y, yedges), 0, hist.shape[1]-1)
c = hist[xidx, yidx]

sc = ax2.scatter(x, y,
                 c=c,
                 s=5,
                 marker='o',
                 #cmap='gnuplot2',
=================
33371917
count:1
# -*- coding: utf-8 -*-

"""
Plot a loglog histogram of a large input data (larger than memory) with generator

Fill the histogram chunk by chunk.
Use a generator to get samples (to make an easily reusable snippet).

See:
- https://stackoverflow.com/questions/33371917/how-to-plot-result-of-np-histogram-with-matplotlib-analog-to-plt-his
- https://stackoverflow.com/questions/5328556/histogram-matplotlib
"""

import numpy as np
import matplotlib.pyplot as plt

def sample_generator(max_num_samples, chunk_size=100):

    mu, sigma = 1000, 1000

=================
5328556
count:1

"""
Plot a loglog histogram of a large input data (larger than memory) with generator

Fill the histogram chunk by chunk.
Use a generator to get samples (to make an easily reusable snippet).

See:
- https://stackoverflow.com/questions/33371917/how-to-plot-result-of-np-histogram-with-matplotlib-analog-to-plt-his
- https://stackoverflow.com/questions/5328556/histogram-matplotlib
"""

import numpy as np
import matplotlib.pyplot as plt

def sample_generator(max_num_samples, chunk_size=100):

    mu, sigma = 1000, 1000

    cpt = 0
=================
22445217
count:2
# -*- coding: utf-8 -*-

# See:
# - https://docs.python.org/3.7/library/webbrowser.html
# - https://stackoverflow.com/questions/22445217/python-webbrowser-open-to-open-chrome-browser
# - https://stackoverflow.com/questions/31715119/how-can-i-open-a-website-in-my-web-browser-using-python

import webbrowser

=================
10562945
count:4
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Debian packages required:
# - python-poppler-qt4  (not python-poppler)

# See: http://stackoverflow.com/questions/10562945/how-to-display-pdf-with-python-poppler-qt4
#      http://web.archive.org/web/20120417095851/http://www.rkblog.rk.edu.pl/w/p/rendering-pdf-files-pyqt4-pypoppler-qt4/
#      http://bazaar.launchpad.net/~j-corwin/openlp/pdf/annotate/head:/openlp/plugins/presentations/lib/pdfcontroller.py


import sys
from PyQt4 import QtGui, QtCore

import popplerqt4

class Window(QtGui.QWidget):
=================
13670333
count:1
import scipy.optimize as optimize

# See:
# - http://docs.scipy.org/doc/scipy/reference/optimize.html
# - http://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.minimize.html
# - http://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult
# - http://www.scipy-lectures.org/advanced/mathematical_optimization/
# - http://students.mimuw.edu.pl/~pbechler/scipy_doc/tutorial/optimize.html
# - https://people.duke.edu/~ccc14/sta-663/BlackBoxOptimization.html
# - http://stackoverflow.com/questions/13670333/multiple-variables-in-scipys-optimize-minimize


# DEFINE THE OBJECTIVE FUNCTION ###############################################

def f(x):
    #return np.power(x[0], 2.) + np.power(x[1], 2.)
    return optimize.rosen(x)   # The Rosenbrock function


# OPTIMIZE ####################################################################
=================
6854947
count:2
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.


# See: http://stackoverflow.com/questions/6854947/how-to-display-a-window-on-a-secondary-display-in-pyqt
#      http://pyqt.sourceforge.net/Docs/PyQt4/qdesktopwidget.html#details


import sys
from PyQt4 import QtGui, QtCore

class Window(QtGui.QWidget):
    def __init__(self, name):
        super(Window, self).__init__()

=================
8480223
count:10

    def rowCount(self, parent):
        return self._data.get_num_rows()

    def columnCount(self, parent):
        return self._data.get_num_columns()

    def data(self, index, role):
        if role == Qt.DisplayRole or role == Qt.EditRole:
            # See https://stackoverflow.com/a/8480223
            return self._data.get_data(index.row(), index.column())
        return QVariant()

    def setData(self, index, value, role):
        if role == Qt.EditRole:

            try:
                self._data.set_data(index.row(), index.column(), value)

                # The following line are necessary e.g. to dynamically update the QSortFilterProxyModel
=================
11606946
count:2
# -*- coding: utf-8 -*-

# Ref:
# - http://doc.qt.io/qt-5/model-view-programming.html#sorting
# - http://doc.qt.io/qt-5/model-view-programming.html#proxy-models
# - http://doc.qt.io/qt-5/qsortfilterproxymodel.html#sorting
# - https://stackoverflow.com/a/11606946
# - http://doc.qt.io/qt-5/qtwidgets-itemviews-basicsortfiltermodel-example.html
# - http://doc.qt.io/qt-5/qtwidgets-itemviews-customsortfiltermodel-example.html

import numpy as np
import sys
from PyQt5.QtCore import Qt, QAbstractTableModel, QVariant, QSortFilterProxyModel
from PyQt5.QtWidgets import QApplication, QTableView


class MyModel(QAbstractTableModel):
=================
29055475
count:2
# -*- coding: utf-8 -*-

# See http://doc.qt.io/qt-5/qwebengineview.html#details

# This class replace the deprecated QWebView (based on QtWebKit).
# See:
# - https://stackoverflow.com/questions/29055475/qwebview-or-qwebengineview
# - https://wiki.qt.io/QtWebEngine/Porting_from_QtWebKit

HTML = r'''<!DOCTYPE html>
<html>
    <!-- Source: https://github.com/mathjax/MathJax/blob/master/test/sample-tex.html -->
    <head>
        <title>MathJax TeX Example</title>

        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
=================
8480223
count:1
# -*- coding: utf-8 -*-

# Documentation:
# - http://doc.qt.io/qt-5/modelview.html
# - http://doc.qt.io/qt-5/model-view-programming.html

# TODO:
# - [x] Keep the current value while editing a cell -> see https://stackoverflow.com/a/8480223
#
# - [x] Remove selected lines instead of the last one TODO: check the possible (but very unlikely bug) when reomving non-contiguous rows
# - [x] Remove using the "Suppr" key instead of a button -> simply call the remove_rows callback when the suppr key is pressed...
# - [x] Add a keyboard shortcut to add a row
# - [x] Sort by datetime or by value. See http://doc.qt.io/qt-5/model-view-programming.html#sorting , http://doc.qt.io/qt-5/qsortfilterproxymodel.html#sorting and https://stackoverflow.com/questions/11606259/how-to-sort-a-qtableview-by-a-column#11606946
#
# - [x] Use Qt delegate example
# - [x] Don't show all Model's columns (+ add a description column in the model but don't show it in the view): "table_view.setColumnHidden(column_num, True)"
# - [x] Use QDataWidgetMapper example (with the hidden description column for instance)
#
=================
11606259
count:1
# - http://doc.qt.io/qt-5/modelview.html
# - http://doc.qt.io/qt-5/model-view-programming.html

# TODO:
# - [x] Keep the current value while editing a cell -> see https://stackoverflow.com/a/8480223
#
# - [x] Remove selected lines instead of the last one TODO: check the possible (but very unlikely bug) when reomving non-contiguous rows
# - [x] Remove using the "Suppr" key instead of a button -> simply call the remove_rows callback when the suppr key is pressed...
# - [x] Add a keyboard shortcut to add a row
# - [x] Sort by datetime or by value. See http://doc.qt.io/qt-5/model-view-programming.html#sorting , http://doc.qt.io/qt-5/qsortfilterproxymodel.html#sorting and https://stackoverflow.com/questions/11606259/how-to-sort-a-qtableview-by-a-column#11606946
#
# - [x] Use Qt delegate example
# - [x] Don't show all Model's columns (+ add a description column in the model but don't show it in the view): "table_view.setColumnHidden(column_num, True)"
# - [x] Use QDataWidgetMapper example (with the hidden description column for instance)
#
# - [x] Add Tabs widgets + add a matplotlib plot of values
# - [ ] Add "undo" and "redo" actions (search "(python) design pattern for undo redo actions") -> Command pattern and Memento pattern (https://stackoverflow.com/a/3448959)
#       - http://doc.qt.io/qt-5/qundoview.html#details
#       - http://doc.qt.io/qt-5/qundostack.html#details
#       - http://doc.qt.io/qt-5/qundocommand.html#details
=================
3448959
count:1
# - [x] Remove using the "Suppr" key instead of a button -> simply call the remove_rows callback when the suppr key is pressed...
# - [x] Add a keyboard shortcut to add a row
# - [x] Sort by datetime or by value. See http://doc.qt.io/qt-5/model-view-programming.html#sorting , http://doc.qt.io/qt-5/qsortfilterproxymodel.html#sorting and https://stackoverflow.com/questions/11606259/how-to-sort-a-qtableview-by-a-column#11606946
#
# - [x] Use Qt delegate example
# - [x] Don't show all Model's columns (+ add a description column in the model but don't show it in the view): "table_view.setColumnHidden(column_num, True)"
# - [x] Use QDataWidgetMapper example (with the hidden description column for instance)
#
# - [x] Add Tabs widgets + add a matplotlib plot of values
# - [ ] Add "undo" and "redo" actions (search "(python) design pattern for undo redo actions") -> Command pattern and Memento pattern (https://stackoverflow.com/a/3448959)
#       - http://doc.qt.io/qt-5/qundoview.html#details
#       - http://doc.qt.io/qt-5/qundostack.html#details
#       - http://doc.qt.io/qt-5/qundocommand.html#details
#       - http://doc.qt.io/qt-5/qundo.html
# - [ ] Add/clean doc strings
#
# - [ ] When a row is inserted, select it (+ auto scroll to it) + automatically edit its first value column
# - [x] Use a system date time dialog box to edit date time (with calendar and clock...)
#       - http://doc.qt.io/qt-5/widget-classes.html
#       - http://doc.qt.io/qt-5/gallery.html
=================
17535563
count:1
        # Set the view ####################################

        self.table_view.setSelectionBehavior(QAbstractItemView.SelectRows)    # Select the full row when a cell is selected (See http://doc.qt.io/qt-5/qabstractitemview.html#selectionBehavior-prop )
        #self.table_view.setSelectionMode(QAbstractItemView.SingleSelection)  # Set selection mode. See http://doc.qt.io/qt-5/qabstractitemview.html#selectionMode-prop

        self.table_view.setAlternatingRowColors(True)
        self.table_view.setSortingEnabled(True)
        self.table_view.setColumnWidth(0, 200)                       # TODO: automatically get the best width

        self.table_view.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)    # https://stackoverflow.com/q/17535563

        self.table_view.setColumnHidden(COMMENT_COLUMN_INDEX, True)

        delegate = Delegate()
        self.table_view.setItemDelegate(delegate)

        # Set key shortcut ################################

        # see https://stackoverflow.com/a/17631703  and  http://doc.qt.io/qt-5/qaction.html#details

=================
17631703
count:1
        self.table_view.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)    # https://stackoverflow.com/q/17535563

        self.table_view.setColumnHidden(COMMENT_COLUMN_INDEX, True)

        delegate = Delegate()
        self.table_view.setItemDelegate(delegate)

        # Set key shortcut ################################

        # see https://stackoverflow.com/a/17631703  and  http://doc.qt.io/qt-5/qaction.html#details

        # Add row action

        add_action = QAction(self.table_view)
        add_action.setShortcut(Qt.CTRL | Qt.Key_N)

        add_action.triggered.connect(self.add_row_btn_callback)
        self.table_view.addAction(add_action)

        # Delete action
=================
29055475
count:1
# -*- coding: utf-8 -*-

# See https://pythonspot.com/en/pyqt5-browser/

##############################################################################
# WARNING: QWebView/QtWebKit are DEPRECATED !!! Use QWebEngineView instead ! #
# (That's why it is not available on Anaconda !)                             #
# See:                                                                       #
# - https://stackoverflow.com/questions/29055475/qwebview-or-qwebengineview  #
# - https://wiki.qt.io/QtWebEngine/Porting_from_QtWebKit                     #
##############################################################################

import sys
from PyQt5.QtCore import *
from PyQt5.QtWebKit import *
from PyQt5.QtWebKitWidgets import *
from PyQt5.QtWidgets import QApplication

app = QApplication(sys.argv)
=================
17535563
count:1
        return QVariant()

if __name__ == '__main__':
    app = QApplication(sys.argv)

    table_view = QTableView()
    my_model = MyModel(None)
    table_view.setModel(my_model)

    table_view.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)    # <- https://stackoverflow.com/q/17535563

    table_view.show()

    # The mainloop of the application. The event handling starts from this point.
    # The exec_() method has an underscore. It is because the exec is a Python keyword. And thus, exec_() was used instead.
    exit_code = app.exec_()

    # The sys.exit() method ensures a clean exit.
    # The environment will be informed, how the application ended.
=================
11606946
count:1
# -*- coding: utf-8 -*-

# Ref:
# - http://doc.qt.io/qt-5/model-view-programming.html#sorting
# - http://doc.qt.io/qt-5/model-view-programming.html#proxy-models
# - http://doc.qt.io/qt-5/qsortfilterproxymodel.html#sorting
# - https://stackoverflow.com/a/11606946
# - http://doc.qt.io/qt-5/qtwidgets-itemviews-basicsortfiltermodel-example.html
# - http://doc.qt.io/qt-5/qtwidgets-itemviews-customsortfiltermodel-example.html

import numpy as np
import sys
from PyQt5.QtCore import Qt, QAbstractTableModel, QVariant, QSortFilterProxyModel, QRegExp
from PyQt5.QtWidgets import QApplication, QWidget, QTableView, QLineEdit, QVBoxLayout


class MyModel(QAbstractTableModel):
=================
11606946
count:1
# -*- coding: utf-8 -*-

# Ref:
# - http://doc.qt.io/qt-5/model-view-programming.html#sorting
# - http://doc.qt.io/qt-5/model-view-programming.html#proxy-models
# - http://doc.qt.io/qt-5/qsortfilterproxymodel.html#sorting
# - https://stackoverflow.com/a/11606946
# - http://doc.qt.io/qt-5/qtwidgets-itemviews-basicsortfiltermodel-example.html
# - http://doc.qt.io/qt-5/qtwidgets-itemviews-customsortfiltermodel-example.html

import numpy as np
import sys
from PyQt5.QtCore import Qt, QAbstractTableModel, QVariant, QSortFilterProxyModel, QRegExp
from PyQt5.QtWidgets import QApplication, QTableView


class MyModel(QAbstractTableModel):
=================
36555153
count:2
# -*- coding: utf-8 -*-

# See http://doc.qt.io/qt-5/qpushbutton.html#details
#     https://stackoverflow.com/questions/36555153/pyqt5-closing-terminating-application

import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton

app = QApplication(sys.argv)

# The default constructor has no parent.
# A widget with no parent is a window.
window = QMainWindow()

=================
50830399
count:1
# -*- coding: utf-8 -*-

# See:
# - https://developers.google.com/chart/interactive/docs/gallery/ganttchart
# - https://stackoverflow.com/questions/50830399/how-to-add-a-horizontal-scroll-bar-to-google-gantt-chart

HTML = r'''<!DOCTYPE html>
<html>
<head>
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <script type="text/javascript">
    google.charts.load('current', {'packages':['gantt']});
    google.charts.setOnLoadCallback(drawChart);

    function daysToMilliseconds(days) {
=================
8480223
count:1

    def rowCount(self, parent):
        return self._data.get_num_rows()

    def columnCount(self, parent):
        return self._data.get_num_columns()

    def data(self, index, role):
        if role == Qt.DisplayRole or role == Qt.EditRole:           # <--
            # See https://stackoverflow.com/a/8480223
            return self._data.get_data(index.row(), index.column())
        return QVariant()

    def setData(self, index, value, role):
        if role == Qt.EditRole:

            try:
                self._data.set_data(index.row(), index.column(), value)

                # The following line are necessary e.g. to dynamically update the QSortFilterProxyModel
=================
40580749
count:1
# Set the layout

grid = QGridLayout()

grid.addWidget(btn1, 1, 1)   # QWidget, row (int), column (int), rowSpan (int), columnSpan (int), alignment
grid.addWidget(btn2, 2, 2)
grid.addWidget(btn3, 3, 1, 1, 2)
grid.addWidget(btn4, 1, 3, 2, 1)

btn4.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)  # http://doc.qt.io/qt-5/qsizepolicy.html ; https://stackoverflow.com/questions/40580749/why-do-some-widgets-not-stretch-to-fill-the-maximum-space-in-a-layout

grid.setContentsMargins(0, 0, 0, 0)  # set the spacing around the layout (in pixels)
grid.setSpacing(0)                   # set the spacing between elements (in pixels)

window.setLayout(grid)

# Show
window.show()

# The mainloop of the application. The event handling starts from this point.
=================
8480223
count:1

    def rowCount(self, parent):
        return self._data.get_num_rows()

    def columnCount(self, parent):
        return self._data.get_num_columns()

    def data(self, index, role):
        if role == Qt.DisplayRole or role == Qt.EditRole:           # <--
            # See https://stackoverflow.com/a/8480223
            return self._data.get_data(index.row(), index.column())
        return QVariant()

    def headerData(self, index, orientation, role):
        if role == Qt.DisplayRole:
            if orientation == Qt.Horizontal:
                return HEADER_LIST[index]
            elif orientation == Qt.Vertical:
                return "{}".format(index)
        return None
=================
29055475
count:1
# -*- coding: utf-8 -*-

# See http://doc.qt.io/qt-5/qwebengineview.html#details

# This class replace the deprecated QWebView (based on QtWebKit).
# See:
# - https://stackoverflow.com/questions/29055475/qwebview-or-qwebengineview
# - https://wiki.qt.io/QtWebEngine/Porting_from_QtWebKit

# The next two lines are a workaround to fix an issue with QWebEngineView (see https://github.com/ContinuumIO/anaconda-issues/issues/9199#issuecomment-383842265)
import ctypes
ctypes.CDLL("libGL.so.1", mode=ctypes.RTLD_GLOBAL)

import sys
from PyQt5.QtCore import *
from PyQt5.QtWebEngineWidgets import QWebEngineView
from PyQt5.QtWidgets import QApplication
=================
29055475
count:1
# -*- coding: utf-8 -*-

# See http://doc.qt.io/qt-5/qwebengineview.html#details

# This class replace the deprecated QWebView (based on QtWebKit).
# See:
# - https://stackoverflow.com/questions/29055475/qwebview-or-qwebengineview
# - https://wiki.qt.io/QtWebEngine/Porting_from_QtWebKit

HTML = r'''<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="content-type" content="text/html; charset=utf-8" />
        <style type="text/css" media="all">
* {
    border-width      : 0px;

=================
17631703
count:1

from PyQt5.QtWidgets import QApplication, QWidget, QAction
from PyQt5.QtCore import Qt

class MainWindow(QWidget):

    def __init__(self):
        super().__init__()

        # see https://stackoverflow.com/a/17631703  and  http://doc.qt.io/qt-5/qaction.html#details

        action = QAction(self)
        action.setShortcut(Qt.Key_F)

        action.triggered.connect(self.fullscreen_toggle_key_callback)
        self.addAction(action)


    def fullscreen_toggle_key_callback(self):
        if self.windowState() & Qt.WindowFullScreen:         # https://stackoverflow.com/questions/17834835/test-if-qquickview-qwindow-is-full-screen-in-qt-5-0-x
=================
17834835
count:1

        action = QAction(self)
        action.setShortcut(Qt.Key_F)

        action.triggered.connect(self.fullscreen_toggle_key_callback)
        self.addAction(action)


    def fullscreen_toggle_key_callback(self):
        if self.windowState() & Qt.WindowFullScreen:         # https://stackoverflow.com/questions/17834835/test-if-qquickview-qwindow-is-full-screen-in-qt-5-0-x
            self.showNormal()                                # <- NORMAL SCREEN
        else:
            self.showFullScreen()                            # <- FULL SCREEN


if __name__ == '__main__':
    app = QApplication(sys.argv)

    main_window = MainWindow()
    main_window.show()
=================
28660287
count:1
# -*- coding: utf-8 -*-

# Ref: https://stackoverflow.com/questions/28660287/sort-qtableview-in-pyqt5

import numpy as np
import pandas as pd
import sys

from PyQt5.QtCore import Qt, QAbstractTableModel, QVariant
from PyQt5.QtWidgets import QApplication, QTableView

class PandasModel(QAbstractTableModel):

=================
17631703
count:2
# to take up all the space in the window by default.
window.setCentralWidget(label)

# Set key shortcut ################################

def action_callback():
    print("Hello!")


# see https://stackoverflow.com/a/17631703  and  http://doc.qt.io/qt-5/qaction.html#details

action = QAction(window)                   # <-
action.setShortcut(Qt.Key_P | Qt.CTRL)     # <-

action.triggered.connect(action_callback)  # <-
window.addAction(action)                   # <-

###################################################

window.show()
=================
8480223
count:1

    def rowCount(self, parent):
        return len(self._data)

    def columnCount(self, parent):
        return 1

    def data(self, index, role):
        if role == Qt.DisplayRole or role == Qt.EditRole:
            # See https://stackoverflow.com/a/8480223
            return self._data[index.row()]
        return QVariant()

    def setData(self, index, value, role):
        if role == Qt.EditRole:

            try:
                self._data[index.row()] = value

                # The following line are necessary e.g. to dynamically update the QSortFilterProxyModel
=================
1907993
count:1
    "\n", 
    "from cs231n.classifiers.neural_net import TwoLayerNet\n", 
    "\n", 
    "%matplotlib inline\n", 
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n", 
    "plt.rcParams['image.interpolation'] = 'nearest'\n", 
    "plt.rcParams['image.cmap'] = 'gray'\n", 
    "\n", 
    "# for auto-reloading external modules\n", 
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n", 
    "%load_ext autoreload\n", 
    "%autoreload 2\n", 
    "\n", 
    "def rel_error(x, y):\n", 
    "  \"\"\" returns relative error \"\"\"\n", 
    "  return np.max(np.abs(x - y) / (np.maximum(1e-8, np.abs(x) + np.abs(y))))"
   ], 
   "outputs": [], 
   "metadata": {
    "collapsed": false
=================
1907993
count:2
    "import numpy as np\n", 
    "from cs231n.data_utils import load_CIFAR10\n", 
    "import matplotlib.pyplot as plt\n", 
    "%matplotlib inline\n", 
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n", 
    "plt.rcParams['image.interpolation'] = 'nearest'\n", 
    "plt.rcParams['image.cmap'] = 'gray'\n", 
    "\n", 
    "# for auto-reloading extenrnal modules\n", 
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n", 
    "%load_ext autoreload\n", 
    "%autoreload 2"
   ], 
   "outputs": [], 
   "metadata": {
    "collapsed": false
   }
  }, 
  {
   "source": [
=================
1907993
count:2
    "\n", 
    "# This is a bit of magic to make matplotlib figures appear inline in the notebook\n", 
    "# rather than in a new window.\n", 
    "%matplotlib inline\n", 
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n", 
    "plt.rcParams['image.interpolation'] = 'nearest'\n", 
    "plt.rcParams['image.cmap'] = 'gray'\n", 
    "\n", 
    "# Some more magic so that the notebook will reload external python modules;\n", 
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n", 
    "%load_ext autoreload\n", 
    "%autoreload 2"
   ], 
   "outputs": [], 
   "metadata": {
    "collapsed": false
   }
  }, 
  {
   "execution_count": null, 
=================
1907993
count:1
    "import numpy as np\n",
    "from cs231n.data_utils import load_CIFAR10\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# for auto-reloading extenrnal modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
=================
1907993
count:2
    "\n", 
    "# This is a bit of magic to make matplotlib figures appear inline in the\n", 
    "# notebook rather than in a new window.\n", 
    "%matplotlib inline\n", 
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n", 
    "plt.rcParams['image.interpolation'] = 'nearest'\n", 
    "plt.rcParams['image.cmap'] = 'gray'\n", 
    "\n", 
    "# Some more magic so that the notebook will reload external python modules;\n", 
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n", 
    "%load_ext autoreload\n", 
    "%autoreload 2"
   ], 
   "outputs": [], 
   "metadata": {
    "collapsed": false
   }
  }, 
  {
   "source": [
=================
1907993
count:3
    "from cs231n.gradient_check import eval_numerical_gradient, eval_numerical_gradient_array\n", 
    "from cs231n.solver import Solver\n", 
    "\n", 
    "%matplotlib inline\n", 
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n", 
    "plt.rcParams['image.interpolation'] = 'nearest'\n", 
    "plt.rcParams['image.cmap'] = 'gray'\n", 
    "\n", 
    "# for auto-reloading external modules\n", 
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n", 
    "%load_ext autoreload\n", 
    "%autoreload 2\n", 
    "\n", 
    "def rel_error(x, y):\n", 
    "  \"\"\" returns relative error \"\"\"\n", 
    "  return np.max(np.abs(x - y) / (np.maximum(1e-8, np.abs(x) + np.abs(y))))"
   ], 
   "outputs": [], 
   "metadata": {
    "collapsed": false
=================
1907993
count:1
    "from cs231n.fast_layers import *\n", 
    "from cs231n.solver import Solver\n", 
    "\n", 
    "%matplotlib inline\n", 
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n", 
    "plt.rcParams['image.interpolation'] = 'nearest'\n", 
    "plt.rcParams['image.cmap'] = 'gray'\n", 
    "\n", 
    "# for auto-reloading external modules\n", 
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n", 
    "%load_ext autoreload\n", 
    "%autoreload 2\n", 
    "\n", 
    "def rel_error(x, y):\n", 
    "  \"\"\" returns relative error \"\"\"\n", 
    "  return np.max(np.abs(x - y) / (np.maximum(1e-8, np.abs(x) + np.abs(y))))"
   ], 
   "outputs": [], 
   "metadata": {
    "collapsed": false
=================
1907993
count:2
    "from cs231n.data_utils import load_tiny_imagenet\n", 
    "from cs231n.image_utils import blur_image, deprocess_image\n", 
    "\n", 
    "%matplotlib inline\n", 
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n", 
    "plt.rcParams['image.interpolation'] = 'nearest'\n", 
    "plt.rcParams['image.cmap'] = 'gray'\n", 
    "\n", 
    "# for auto-reloading external modules\n", 
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n", 
    "%load_ext autoreload\n", 
    "%autoreload 2"
   ], 
   "outputs": [], 
   "metadata": {
    "collapsed": false
   }
  }, 
  {
   "source": [
=================
1907993
count:3
    "from cs231n.coco_utils import load_coco_data, sample_coco_minibatch, decode_captions\n", 
    "from cs231n.image_utils import image_from_url\n", 
    "\n", 
    "%matplotlib inline\n", 
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n", 
    "plt.rcParams['image.interpolation'] = 'nearest'\n", 
    "plt.rcParams['image.cmap'] = 'gray'\n", 
    "\n", 
    "# for auto-reloading external modules\n", 
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n", 
    "%load_ext autoreload\n", 
    "%autoreload 2\n", 
    "\n", 
    "def rel_error(x, y):\n", 
    "  \"\"\" returns relative error \"\"\"\n", 
    "  return np.max(np.abs(x - y) / (np.maximum(1e-8, np.abs(x) + np.abs(y))))"
   ], 
   "outputs": [], 
   "metadata": {
    "collapsed": false
=================
1907993
count:2
    "from cs231n.data_utils import load_tiny_imagenet\n", 
    "from cs231n.image_utils import blur_image, deprocess_image, preprocess_image\n", 
    "\n", 
    "%matplotlib inline\n", 
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n", 
    "plt.rcParams['image.interpolation'] = 'nearest'\n", 
    "plt.rcParams['image.cmap'] = 'gray'\n", 
    "\n", 
    "# for auto-reloading external modules\n", 
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n", 
    "%load_ext autoreload\n", 
    "%autoreload 2"
   ], 
   "outputs": [], 
   "metadata": {
    "collapsed": false
   }
  }, 
  {
   "source": [
=================
1907993
count:3
    "\n",
    "from cs231n.classifiers.neural_net import TwoLayerNet\n",
    "\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# for auto-reloading external modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "def rel_error(x, y):\n",
    "  \"\"\" returns relative error \"\"\"\n",
    "  return np.max(np.abs(x - y) / (np.maximum(1e-8, np.abs(x) + np.abs(y))))"
   ]
  },
  {
   "cell_type": "markdown",
=================
1907993
count:1
    "import numpy as np\n",
    "from cs231n.data_utils import load_CIFAR10\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# for auto-reloading extenrnal modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
=================
1907993
count:1
    "\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "np.set_printoptions(precision=4)\n",
    "pd.set_option('precision',1)\n",
    "\n",
    "# for auto-reloading external modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "def rel_error(x, y):\n",
    "  \"\"\" returns relative error \"\"\"\n",
    "  return np.max(np.abs(x - y) / (np.maximum(1e-8, np.abs(x) + np.abs(y))))"
   ]
  },
  {
   "cell_type": "markdown",
=================
1907993
count:3
    "import numpy as np\n",
    "from cs231n.data_utils import load_CIFAR10\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# for auto-reloading extenrnal modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load data\n",
    "Similar to previous exercises, we will load CIFAR-10 data from disk."
=================
1907993
count:1
    "\n",
    "# This is a bit of magic to make matplotlib figures appear inline in the notebook\n",
    "# rather than in a new window.\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (12.0, 12.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# Some more magic so that the notebook will reload external python modules;\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2016-08-22T12:08:16.698291",
=================
1907993
count:1
    "from cs231n.data_utils import load_CIFAR10\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# for auto-reloading extenrnal modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2016-08-28T22:03:45.572264",
=================
1907993
count:1
    "# notebook rather than in a new window.\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "np.set_printoptions(precision=4)\n",
    "pd.set_option('precision',1)\n",
    "\n",
    "# Some more magic so that the notebook will reload external python modules;\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## CIFAR-10 Data Loading and Preprocessing"
   ]
=================
1907993
count:8
    "from cs231n.gradient_check import eval_numerical_gradient, eval_numerical_gradient_array\n",
    "from cs231n.solver import Solver\n",
    "\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# for auto-reloading external modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "def rel_error(x, y):\n",
    "  \"\"\" returns relative error \"\"\"\n",
    "  return np.max(np.abs(x - y) / (np.maximum(1e-8, np.abs(x) + np.abs(y))))"
   ]
  },
  {
   "cell_type": "code",
=================
1907993
count:1
    "from cs231n.gradient_check import eval_numerical_gradient, eval_numerical_gradient_array\n",
    "from cs231n.solver import Solver\n",
    "\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# for auto-reloading external modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2016-09-27T13:26:31.682158",
=================
1907993
count:2
    "\n",
    "# This is a bit of magic to make matplotlib figures appear inline in the notebook\n",
    "# rather than in a new window.\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# Some more magic so that the notebook will reload external python modules;\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
=================
1907993
count:1
    "import numpy as np\n",
    "from cs231n.data_utils import load_CIFAR10\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# for auto-reloading extenrnal modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
=================
1907993
count:2
    "\n",
    "# This is a bit of magic to make matplotlib figures appear inline in the\n",
    "# notebook rather than in a new window.\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# Some more magic so that the notebook will reload external python modules;\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## CIFAR-10 Data Loading and Preprocessing"
   ]
=================
1907993
count:2
    "from cs231n.fast_layers import *\n",
    "from cs231n.solver import Solver\n",
    "\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# for auto-reloading external modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "def rel_error(x, y):\n",
    "  \"\"\" returns relative error \"\"\"\n",
    "  return np.max(np.abs(x - y) / (np.maximum(1e-8, np.abs(x) + np.abs(y))))"
   ]
  },
  {
   "cell_type": "code",
=================
1907993
count:1
    "import numpy as np\n",
    "from cs231n.data_utils import load_CIFAR10\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# for auto-reloading extenrnal modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
=================
1907993
count:1
    "from cs231n.coco_utils import load_coco_data, sample_coco_minibatch, decode_captions\n",
    "from cs231n.image_utils import image_from_url\n",
    "\n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
    "plt.rcParams['image.interpolation'] = 'nearest'\n",
    "plt.rcParams['image.cmap'] = 'gray'\n",
    "\n",
    "# for auto-reloading external modules\n",
    "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "def rel_error(x, y):\n",
    "  \"\"\" returns relative error \"\"\"\n",
    "  return np.max(np.abs(x - y) / (np.maximum(1e-8, np.abs(x) + np.abs(y))))"
   ]
  },
  {
   "cell_type": "markdown",
=================
38987
count:1
if __name__ == '__main__': # DEBUG
  import sys
  sys.path.append("..")

import re
from restful.online import DataParser
from sakurakit.skdebug import dwarn
from sakurakit.skstr import unescapehtml

# http://stackoverflow.com/questions/38987/how-can-i-merge-union-two-python-dictionaries-in-a-single-expression
def _mergedictwith(x, y):
  """
  @param[inout]  x  dict
  @param[in]  y  dict
  """
  for k,v in y.iteritems():
    if not x.get(k): #== None:
      x[k] = v

class SoftApi(DataParser):
=================
842059
count:1
  #dic = location + 'New Japanese-Chinese Dictionary.ld2'

  #HOME = os.path.expanduser('~')
  #if os.name == 'nt':
  #  from sakurakit import skpaths
  #  APPDATA = skpaths.APPDATA
  #else: # mac
  #  import getpass
  #  HOME = os.path.expanduser('~')
  #  USER = getpass.getuser() # http://stackoverflow.com/questions/842059/is-there-a-portable-way-to-get-the-current-username-in-python
  #  APPDATA = os.path.join(os., '.wine/drive_c/users/' + USER + '/Application Data')
  PWD = os.getcwd()
  dbpath = os.path.join(PWD, '../../../../../../Caches/Dictionaries/Lingoes')
  #dbpath = os.path.join(dbpath, 'ja-zh.db')
  dbpath = os.path.join(dbpath, 'ja-zh-gbk.db')
  #dbpath += 'ja-ko.db'
  #dbpath += 'ja-vi.db'

  ld = LingoesDb(dbpath)

=================
7380629
count:1
class Compare:
  def __init__(self, value):
    self.value = value

  def __gt__(self, other): # unicode, pair -> bool
    """@reimp"""
    return self.value > other[0] # only compare the first element

# Only works for right search
# http://stackoverflow.com/questions/7380629/perform-a-binary-search-for-a-string-prefix-in-python
class PrefixCompare:
  def __init__(self, value):
    self.value = value

  def __lt__(self, other): # unicode, pair -> bool
    """@reimp"""
    return self.lt(other[0]) # only compare the first element

  def lt(self, other): # unicode, unicode -> bool
    if len(self.value) < len(other):
=================
3785294
count:1
# dbutil.py
# 4/5/2015

# http://stackoverflow.com/questions/3785294/best-way-to-iterate-through-all-rows-in-a-db-table
def fetchsome(cursor, some):
  """
  @param  cursor
  @param  some  int
  @raise
  """
  fetch = cursor.fetchmany
  while True:
    rows = fetch(some)
    if not rows:
=================
13934994
count:1
  return False

def create_surface_tables(cur): # cursor -> bool
  """
  @param  cursor
  @return  bool
  @raise
  """
# Forign key is not enabled, which will make sqlite slightly slower
# http://stackoverflow.com/questions/13934994/sqlite-foreign-key-examples
#FOREIGN KEY(entry_id) REFERENCES entry(id),
  cur.execute('''\
CREATE TABLE surface(
id INTEGER PRIMARY KEY AUTOINCREMENT,
text TEXT NOT NULL,
entry_id INTEGER)
''').execute('''\
CREATE INDEX idx_surface ON surface(text ASC)
''')
  return True
=================
3785294
count:1
  elif wordlike:
    sql += ' where word like ?'
    params.append(wordlike)
  if limit:
    sql += ' limit ?'
    params.append(limit)
  cur.execute(sql, params)
  return cur.fetchall()

# http://stackoverflow.com/questions/3785294/best-way-to-iterate-through-all-rows-in-a-db-table
def iterentries(cur, select=SELECT_WORD_CONTENT, chunk=100):
  """
  @param  cursor
  @yield  unicode word, unicode content
  @raise
  """
  sql = "SELECT %s FROM entry" % select
  cur.execute(sql)
  return dbutil.fetchsome(cur, chunk)

=================
10299807
count:1
def getenvrc(path): # -> unicode
  return os.environ.get('MECABRC')

def delenvrc():
  try: del os.environ['MECABRC']
  except: pass

# Helper functions

# http://stackoverflow.com/questions/10299807/mecab-path-parameters-doesnot-accept-whitespace
def normalizepath(path):
  """
  @param  path  unicode
  @return  str not unicode
  """
  if not path:
    return ''
  path = path.encode('utf8', errors='ignore') # must be ascii
  #if not os.path.exists(path):
  #  return ''
=================
444591
count:1

#def signedord(c):
#  """Return signed char value of the character
#  @param  c  char
#  @return  int[-128,127]
#  """
#  ret = ord(c)
#  return ret if ret < 128 else ret - 256

# http://stackoverflow.com/questions/444591/convert-a-string-of-bytes-into-an-int-python
def unpackuint(s): #
  """
  @param  s  str|bytearray|QByteArray
  @return  int
  """
  #return sum(ord(c) << (i * 8) for i,c in enumerate(s[::-1])) # reverse sign does not work for QByteArray
  size = len(s)
  return sum((ord(c) << (8 * (size - i - 1))) for i,c in enumerate(s))

def unpackuint32(s, i=0): #
=================
3465704
count:1
  app = QCoreApplication(sys.argv)
  QTimer.singleShot(0, test)
  app.exec_()

# EOF

#import urllib, urllib2
#url = createUrl(text, to=INFOSEEK_LCODE[to], fr=INFOSEEK_LCODE[fr])
#try:
#  # See: http://stackoverflow.com/questions/3465704/python-urllib2-urlerror-http-status-code
#  response = urllib2.urlopen(url)
#  ret = response.read()
#except urllib2.HTTPError, e:
#  dwarn("http error code =", e.code)
#  return ""
#except urllib2.URLError, e:
#  dwarn("url error args =", e.args)
#  return ""
#finally:
#  try: response.close()
=================
5253854
count:1
# texthook.py
# 10/6/2012 jichi
# Windows only
# See: http://stackoverflow.com/questions/5253854/python-import-dll

__all__ = 'TextHook',

#from ctypes import c_longlong
from PySide.QtCore import Signal, QObject, Qt
from sakurakit import skos
from sakurakit.skclass import Q_Q, memoized
from sakurakit.skdebug import dprint, dwarn

ENABLE_GAMEENGINE = True
=================
10334358
count:1
      # http://translate.google.com/translate_a/t?client=t&text=かわいい女の子&sl=ja&tl=en

      r = self.session.post(self.api, headers=self.headers, data={
        'tl': googledef.lang2locale(to),
        'sl': googledef.lang2locale(fr),
        'text': t,
        #'ie':'UTF-8',
        #'oe':'UTF-8',

        # http://stackoverflow.com/questions/10334358/how-to-get-and-parse-json-answer-from-google-translate
        #'client': 't', # This will return a Javascript object that can be evaluated using new Function
        #'client': 'p', # return JSON
        'client': 'p' if client_json else 't',

        # 2/28/2016
        'tk':'259734.384347', # this is the app token ID
        #'hl':'ja',
        #'dt':'at',
        #'dt':'bd',
        #'dt':'ex',
=================
13128995
count:1
# - Binary v3: http://blog.naver.com/waltherp38/220267098421
# - Tutorial: http://blog.naver.com/waltherp38/220286266694
#
# Test Ehnd
# - Input: まあね♪スカートとはおさらばだし。ハーフパンツなんて久しぶり♪
# - ezTrans without ehnd: 그냥♪스커트와는 안녕히이고. 하프 팬츠는 오래간만♪
# - With ehnd 3.1 and 201504 script: 글쎄♪스커트와는 안녕히이고. 하프 팬츠 같은거 오래간만♪
#
# About unloading DLL:
# - Use FreeLibrary to unload: http://stackoverflow.com/questions/13128995/ctypes-unload-dll
# - Use GetModuleHandleA to check: http://stackoverflow.com/questions/11939290/how-do-i-find-out-if-my-program-has-a-certain-dll-already-loaded

if __name__ == '__main__': # DEBUG
  import sys
  sys.path.append("..")

import ctypes, os
#from sakurakit import msvcrt
from sakurakit.skdebug import dprint, dwarn

=================
11939290
count:1
# - Tutorial: http://blog.naver.com/waltherp38/220286266694
#
# Test Ehnd
# - Input: まあね♪スカートとはおさらばだし。ハーフパンツなんて久しぶり♪
# - ezTrans without ehnd: 그냥♪스커트와는 안녕히이고. 하프 팬츠는 오래간만♪
# - With ehnd 3.1 and 201504 script: 글쎄♪스커트와는 안녕히이고. 하프 팬츠 같은거 오래간만♪
#
# About unloading DLL:
# - Use FreeLibrary to unload: http://stackoverflow.com/questions/13128995/ctypes-unload-dll
# - Use GetModuleHandleA to check: http://stackoverflow.com/questions/11939290/how-do-i-find-out-if-my-program-has-a-certain-dll-already-loaded

if __name__ == '__main__': # DEBUG
  import sys
  sys.path.append("..")

import ctypes, os
#from sakurakit import msvcrt
from sakurakit.skdebug import dprint, dwarn

# Import windows functions
=================
2802168
count:1
  # Example: 価格：	￥7,140 (税抜￥6,800)
  #_rx_price = re.compile(ur'￥([0-9,]+?) \(税抜')
  # ￥7,500 (税込￥8,100)
  _rx_price = re.compile(ur'税込￥([0-9,]+)')
  def _parseprice(self, h):
    """
    @param  h  unicode  html
    @return  unicode or None
    """
    # http://stackoverflow.com/questions/2802168/find-last-match-with-python-regular-expression
    m = self._rx_price.search(h)
    if m:
      try: return int(m.group(1).replace(',',''))
      except (ValueError, TypeError): pass

  #_rx_title = re.compile(ur'タイトル：([^"]+?)[,"]')
  #def _parsetitle(self, h):
  #  """
  #  @param  h  unicode  html
  #  @return  unicode or None
=================
2802168
count:1
      try: return int(m.group(1).replace(',',''))
      except (ValueError, TypeError): pass

  #_rx_title = re.compile(ur'タイトル：([^"]+?)[,"]')
  #def _parsetitle(self, h):
  #  """
  #  @param  h  unicode  html
  #  @return  unicode or None
  #  """
  #  # http://stackoverflow.com/questions/2802168/find-last-match-with-python-regular-expression
  #  m = self._rx_title.search(h)
  #  if m:
  #    return unescapehtml(m.group(1).strip())

  #_rx_sample = re.compile(r'SAMPLE([0-9]+)')
  #def _parseimagecount(self, h):
  #  """
  #  @param  h  unicode  html
  #  @return  int not None
  #  """
=================
2802168
count:1
  #  if m:
  #    return unescapehtml(m.group(1).strip())

  #_rx_sample = re.compile(r'SAMPLE([0-9]+)')
  #def _parseimagecount(self, h):
  #  """
  #  @param  h  unicode  html
  #  @return  int not None
  #  """
  #  # http://stackoverflow.com/questions/2802168/find-last-match-with-python-regular-expression
  #  m = None
  #  for m in self._rx_sample.finditer(h): pass
  #  return int(m.group(1)) if m else 0

  _rx_video = re.compile(r"(?<=www\.youtube\.com/v/)[a-zA-Z0-9_-]+")
  def _iterparsevideos(self, h):
    """
    @param  h  unicode  html
    @yield  str
    """
=================
2802168
count:1
      vid = m.group()
      yield vid

  _rx_sampleimage = re.compile(r'brandnew/[^"]*?sample([0-9]+).jpg')
  def _iterparsesampleimages(self, h):
    """
    @param  h  unicode  html
    @yield  str
    """
    # http://stackoverflow.com/questions/2802168/find-last-match-with-python-regular-expression
    for m in self._rx_sampleimage.finditer(h):
      yield self.HOST + m.group()

  def __maketablerx(name):
    """
    @param  name  unicode
    @return  re
    """
    return re.compile(
        #r'<div class="tabletitle">&nbsp;%s</div>.*?<BR clear="all"></div>' % name,
=================
23889620
count:1
# colorconv.py
# 9/14/2014 jichi
#
# References:
# - HSL/HSV: https://en.wikipedia.org/wiki/HSL_and_HSV
#   https://hg.python.org/cpython/file/2.7/Lib/colorsys.py
# - HSI: http://www.had2know.com/technology/hsi-rgb-color-converter-equations.html
#   http://stackoverflow.com/questions/23889620/is-there-any-other-way-to-convert-rgb-to-hsi
#
# Others:
# - https://github.com/scikit-image/scikit-image/blob/master/skimage/color/colorconv.py
# - colorsys in Python2

import math

def pix2rgb(p): # int -> (int r, int g, int b)
  return p >> 16 & 0xff, p >> 8 & 0xff,  p & 0xff

=================
23889620
count:1
#
# Online verification: http://www.picturetopeople.org/color_converter.html
# Formulation: https://mail.python.org/pipermail/image-sig/2005-March/003236.html
#
#   I = 1/3 * (R+G+B)
#   S = 1 - (3/(R+G+B))*(min(R,G,B))
#   H = cos^-1 ( (((R-G)+(R-B))/2)/ (sqrt((R-G)^2 + (R-B)*(G-B) )))
#
# See: http://www.had2know.com/technology/hsi-rgb-color-converter-equations.html
# See: http://stackoverflow.com/questions/23889620/is-there-any-other-way-to-convert-rgb-to-hsi
def rgb2hsi(r, g, b): # int, int, int -> float rad or None, float, float
  s,i = rgb2hsi_si(r, g, b)
  h = rgb2hsi_h(r, g, b)
  return h,s,i

def rgb2hsi_h(r, g, b): # int, int, int -> float or None
  if r or g or b:
    dRG = r - g
    dRB = r - b
    dGB = g - b
=================
10299807
count:1
# 11/9/2013 jichi

if __name__ == '__main__': # DEBUG
  import sys
  sys.path.append("..")

import os
from sakurakit.skdebug import dprint, dwarn

# http://stackoverflow.com/questions/10299807/mecab-path-parameters-doesnot-accept-whitespace
def normalizepath(path):
  """
  @param  path  unicode
  @return  str not unicode
  """
  if not path:
    return ''
  path = path.encode('utf8', errors='ignore')
  #if not os.path.exists(path):
  #  return ''
=================
6187699
count:1
    #else:
    #  dwarn("invalid pattern type: %s" % type(pattern))
    #  return -1

  def search_memory_long(self, pattern, *args, **kwargs):
    """Search memory
    @param  pattern  int
    @return  long  addr
    """
    # http://stackoverflow.com/questions/6187699/how-to-convert-integer-value-to-array-of-four-bytes-in-python
    r = xrange(int(math.log(pattern, 2)/8) * 8, -1, -8)
    s = (pattern >> i & 0xff for i in r)
    return self.search_memory_list(s, *args, **kwargs)

  def search_memory_list(self, pattern, *args, **kwargs):
    """Search memory
    @param  pattern  [int]
    @return  long  addr
    """
    pattern = ''.join(imap(chr, pattern))
=================
17418108
count:1
    """
    return sum(fabs(x)+fabs(y) for x,y in positions) # pos.manhattanLength()


# Helpers

def _subtract((x1,y1), (x2,y2)):
  """
  A replacement of numpy.subtract
  See: http://stackoverflow.com/questions/17418108/elegant-way-to-perform-tuple-arithmetic
  """
  return x1 - x2, y1 - y2

=================
15306866
count:1
  #def winEvent(self, message, result):
  #  """@reimp
  #  """
  #  if 'HitTestCode' in message.__str__():
  #    #HTNOWHERE
  #    return True
  #  return super(MirroredWindow, self).winEvent(message, result)

  # TODO: Update QIcon from HICON got from GetWindowLong
  # http://stackoverflow.com/questions/15306866/hicon-hbitmap-to-qicon-qpixmap-qimage-anything-with-a-q-in-it

  def start(self): self.__d.repaintTimer.start(); self.repaint()
  def stop(self): self.__d.repaintTimer.stop()

  ## Events ##

  def setVisible(self, v):
    """@reimp
    @param  v  bool
    """
=================
1823762
count:1
    )
    sz = ctypes.sizeof(inp)
    skwinapi.SendInput(1, inp, sz)
    #inp.ki.dwFlags = win32con.KEYEVENTF_KEYUP
    #skwinapi.SendInput(1, inp, sz)


    #QTimer.singleShot(500, partial(f, vk))

    # http://stackoverflow.com/questions/1823762/sendkeys-for-python-3-1-on-windows
    #win32gui.SetFocus((hwnd)
    #def f(vk):
    #  inp = skwinapi.INPUT(
    #    type = win32con.INPUT_MOUSE,
    #    ki = skwinapi.KEYBDINPUT(
    #      wVk = vk,
    #    ),
    #  )
    #  sz = ctypes.sizeof(inp)
    #  skwinapi.SendInput(1, inp, sz)
=================
2086017
count:1
    if w <= 0 or h <= 0:
      return

    x, y = event.x(), event.y()

    x0 = left + w0 * x / w
    y0 = top + WINDOW_TITLEBAR_HEIGHT + h0 * y / h
    print x0, y0

    # http://stackoverflow.com/questions/2086017/how-to-simulate-mousemove-event-from-one-window-to-another
    #pos = event.globalPos()
    #skwin.post_mouse_move(x0 - pos.x(), y0 - pos.y())
    #skwin.post_mouse_click()
    #skwin.post_mouse_move(pos.x() - x0, pos.y() - y0)
    #import functools
    #QTimer.singleShot(0, functools.partial(skwin.post_mouse_move,
    #  - x0 + pos.x(), - y0 + pos.y(), relative=True))
    #skwin.post_mouse_move(event.x(), event.y())

    #win32api.SendMessage(hwnd, win32con.WM_NCHITTEST, 0, win32api.MAKELONG(x0, y0))
=================
2086017
count:1
    if w <= 0 or h <= 0:
      return

    x, y = event.x(), event.y()

    x0 = left + w0 * x / w
    y0 = top + WINDOW_TITLEBAR_HEIGHT + h0 * y / h
    print x0, y0

    # http://stackoverflow.com/questions/2086017/how-to-simulate-mousemove-event-from-one-window-to-another
    import win32api, win32con, win32gui
    #pos = event.globalPos()
    #skwin.post_mouse_move(x0 - pos.x(), y0 - pos.y())
    #skwin.post_mouse_click()
    #skwin.post_mouse_move(pos.x() - x0, pos.y() - y0)
    #import functools
    #QTimer.singleShot(0, functools.partial(skwin.post_mouse_move,
    #  - x0 + pos.x(), - y0 + pos.y(), relative=True))
    #skwin.post_mouse_move(event.x(), event.y())

=================
7259847
count:1
    #  type = win32con.INPUT_MOUSE,
    #  mi = skwinapi.MOUSEINPUT(
    #    dx = pos.x(),
    #    dy = pos.y(),
    #    dwFlags = win32con.MOUSEEVENTF_ABSOLUTE | win32con.MOUSEEVENTF_MOVE,
    #  ),
    #)
    #skwinapi.SendInput(1, inp, sz)

  # http://stackoverflow.com/questions/7259847/forcing-an-aspect-ratio-when-resizing-a-main-window
  def resizeEvent(self, event) :
    """@reimp
    @param  event  QResizeEvent
    """
    self.__d.resizeTimer.start()

  def paintEvent(self, event):
    """@reimp
    @param  event  QPaintEvent
    """
=================
2775864
count:1
def current_unixtime():
  """Unix time in seconds
  @return  long  seconds
  """
  return long(time.time())

NOW = datetime.now()
CURRENT_UNIXTIME = current_unixtime()

# See: http://stackoverflow.com/questions/2775864/python-datetime-to-unix-timestamp
def datetime2timestamp(date):
  """Unix time in seconds
  @param  datetime  datetime.datetime not None
  @return  long  seconds
  @throw  when datetime is not valid or less than unixtime 0
  """
  return int(time.mktime(date.timetuple()))

date2timestamp = datetime2timestamp

=================
11875770
count:1
# skjson.py
# 7/4/2014 jichi

from datetime import datetime

# http://stackoverflow.com/questions/11875770/how-to-overcome-datetime-datetime-not-json-serializable-in-python
def default_datetime(obj):
  """
  @param  obj  any
  @return  any
  """
  if isinstance(obj, datetime):
    serial = obj.isoformat()
    return serial

if __name__ == '__main__':
=================
354038
count:1
def uint64(u):  return u & 18446744073709551615

## Type-checking ##

def is_float(v):
  """
  @param  v  any
  @return  bool
  """
  # http://stackoverflow.com/questions/354038/how-do-i-check-if-a-string-is-a-number-in-python
  # This method is not slow
  try: float(v); return True
  except (TypeError, ValueError): return False

#def is_int(v):
#  """
#  @param  v  any
#  @return  bool
#  """
#  if isinstance(v, basestring):
=================
16694907
count:1
  #  dwarn("socket error", e.args)
  #except requests.ConnectionError, e:
  #  dwarn("connection error", e.args)
  #except requests.HTTPError, e:
  #  dwarn("http error", e.args)

  #try: dwarn(r.url)
  #except: pass

# Stream with requests: http://stackoverflow.com/questions/16694907/how-to-download-large-file-in-python-with-requests-py
def itergetdata(url, chunksize=1024, **kwargs):
  """
  @param  url  str
  @param  path  str
  @param  mode  str  'w' or 'wb'
  @return  iter(str) or None
  """
  try:
    res = _getres(url, stream=True, **kwargs)
    if res:
=================
480214
count:1
# skcontainer.py
# 8/27/2013 jichi

# http://stackoverflow.com/questions/480214/how-do-you-remove-duplicates-from-a-list-in-python-whilst-preserving-order
def uniquelist(seq):
  """
  @param[in]  seq  iterable
  @return  list
  """
  seen = set()
  seen_add = seen.add
  return [it for it in seq if it not in seen and not seen_add(it)]

def mergedicts(x, y):
=================
122327
count:1
    if skos.WIN:
      if gui:
        ret = ret.replace('python.exe', 'pythonw.exe')
      else:
        ret = ret.replace('pythonw.exe', 'python.exe')
  return ret

# Get path to Lib/site-packages
def get_python_site():
  # http://stackoverflow.com/questions/122327/how-do-i-find-the-location-of-my-python-site-packages-directory
  #import site
  #return site.getsitepackages()[-1]
  from distutils import sysconfig
  return sysconfig.get_python_lib()

=================
20352794
count:1
# skyaml
# 12/16/2014 jichi
# See: http://stackoverflow.com/questions/20352794/pyyaml-is-producing-undesired-python-unicode-output

from sakurakit.skdebug import dwarn
import yaml

# default_flow_style: Disable default flow style to make it more readable
def dump(data, f, default_flow_style=False, encoding='utf-8', allow_unicode=True):
  try:
    yaml.safe_dump(data, f,
      default_flow_style=default_flow_style,
      encoding=encoding,
=================
1131220
count:1
def loselose_ull(L, rehash=0):
  return reduce(lambda h,c: ullong(ord(c) + h), L, rehash or 0)

def loselose_64(L, rehash=0):
  rehash = numpy.int64(rehash or 0)
  return reduce(lambda h,c: ord(c) + h, L, rehash or 0)

## File hashing algorithms ##

# See: http://stackoverflow.com/questions/1131220/get-md5-hash-of-a-files-without-open-it-in-python
def md5sumpath(path):
  """Return the MD5 digest of the file
  @param  path  str  input file path
  @return  str  md5 in lowercase hex string
  """
  try:
    # Change to UNC path: http://stackoverflow.com/questions/7169845/using-python-how-can-i-access-a-shared-folder-on-windows-network
    if path.startswith('/') and not path.startswith('//'):
      path = '/' + path
    md5 = hashlib.md5()
=================
7169845
count:1
## File hashing algorithms ##

# See: http://stackoverflow.com/questions/1131220/get-md5-hash-of-a-files-without-open-it-in-python
def md5sumpath(path):
  """Return the MD5 digest of the file
  @param  path  str  input file path
  @return  str  md5 in lowercase hex string
  """
  try:
    # Change to UNC path: http://stackoverflow.com/questions/7169845/using-python-how-can-i-access-a-shared-folder-on-windows-network
    if path.startswith('/') and not path.startswith('//'):
      path = '/' + path
    md5 = hashlib.md5()
    with open(path,'rb') as f:
      chunk_size =128 * md5.block_size
      for chunk in iter(lambda: f.read(chunk_size), b''):
        md5.update(chunk)
    return md5.hexdigest()
  #except IOError: return ""
  except: return ""
=================
1551605
count:1
try:
  ChangeWindowMessageFilter = user32.ChangeWindowMessageFilter
  ChangeWindowMessageFilter.restype = BOOL
  ChangeWindowMessageFilter.argtypes = UINT, DWORD
except AttributeError:
  #def ChangeWindowMessageFilter(message, dwFlags): return False
  ChangeWindowMessageFilter = None


# See: http://stackoverflow.com/questions/1551605/how-to-set-applications-taskbar-icon-in-windows-7
try:
  SetCurrentProcessExplicitAppUserModelID = shell32.SetCurrentProcessExplicitAppUserModelID
  SetCurrentProcessExplicitAppUserModelID.restype = HRESULT
  SetCurrentProcessExplicitAppUserModelID.argtype = LPCWSTR
except AttributeError:
  def SetCurrentProcessExplicitAppUserModelID(appId): return 0

try:
  GetCurrentProcessExplicitAppUserModelID = shell32.GetCurrentProcessExplicitAppUserModelID
  GetCurrentProcessExplicitAppUserModelID.restype = HRESULT
=================
7921307
count:1

CloseClipboard = user32.CloseClipboard
CloseClipboard.restype = BOOL
CloseClipboard.argtypes = []

SetClipboardData = user32.SetClipboardData
SetClipboardData.restype = HANDLE
SetClipboardData.argtypes = UINT, HANDLE

# See: http://stackoverflow.com/questions/7921307/temporarily-change-cursor-using-python
CopyIcon = user32.CopyIcon
CopyIcon.restype = HICON
CopyIcon.argtype = HICON

#define CopyCursor(pcur) ((HCURSOR)CopyIcon((HICON)(pcur)))
CopyCursor = user32.CopyIcon
CopyCursor.restype = HCURSOR
CopyCursor.argtype = HCURSOR

SetSystemCursor = user32.SetSystemCursor
=================
1872480
count:1
#   _In_  DWORD dwFreeType
# );
#
# See: pywinauto: http://pywinauto.googlecode.com/hg-history/badf679f1d09af7bf45add1dec55e98a8b92fbbf/pywinauto/win32functions.py
VirtualFreeEx = kernel32.VirtualFreeEx
VirtualFreeEx.restype = BOOL
#VirtualFreeEx.argtypes = HANDLE, LPVOID, SIZE_T, DWORD
VirtualFreeEx.argtypes = ULONG, LPVOID, SIZE_T, DWORD

# http://stackoverflow.com/questions/1872480/use-python-to-extract-listview-items-from-another-application
#BOOL WINAPI WriteProcessMemory(
#  _In_   HANDLE hProcess,
#  _In_   LPVOID lpBaseAddress,
#  _In_   LPCVOID lpBuffer,
#  _In_   SIZE_T nSize,
#  _Out_  SIZE_T *lpNumberOfBytesWritten
#);
WriteProcessMemory = kernel32.WriteProcessMemory
WriteProcessMemory.restype = BOOL
#WriteProcessMemory.argtypes = HANDLE, LPVOID, LPCVOID, SIZE_T, LPSIZE_T
=================
9920452
count:1
    @return  unicode or "" if not exists
    """
    try: return win32api.GetLongPathName(path)
    except Exception, e: dwarn(e); return ""

  ## Process ##

  def kill_my_process(ret=0):
    # http://snipplr.com/view/60057/
    # http://stackoverflow.com/questions/1533200/qt-kill-current-process/9920452#9920452
    win32api.TerminateProcess(win32api.GetCurrentProcess(), ret)

  def kill_process(pid, ret=0):
    """
    @param  pid  long
    @return  bool
    """
    ret = False
    try:
      # http://snipplr.com/view/60057/
=================
1100605
count:1
    #except Exception, e: dwarn(e)
    return ""

  def set_window_text(hwnd, text):
    """
    @param  hwnd  HWND
    @param  text  unicode
    @return  bool

    See: http://stackoverflow.com/questions/1100605/settext-of-textbox-in-external-app-win32-api
    """
    #size = win32gui.SendMessage(hwnd, win32con.WM_GETTEXTLENGTH, 0, 0)
    ##buf = ctypes.create_unicode_buffer(size)
    #buf = ctypes.create_string_buffer(size)
    #win32gui.SendMessage(hwnd, win32con.WM_GETTEXT, size, buf)
    #return buf.value.decode('sjis')
    try:
      buf = ctypes.create_unicode_buffer(text)
      size = skwinapi.SendMessageW(hwnd, win32con.WM_SETTEXT, 0, ctypes.addressof(buf))
      return size > 0
=================
6381198
count:1
  def set_top_window(hwnd):
    """
    @param  hwnd  HWND
    @return  bool
    """
    try: return bool(win32gui.BringWindowToTop(hwnd))
    except: return False

  # Not working for inter-thread windows
  # see: http://stackoverflow.com/questions/6381198/get-window-z-order-with-python-windows-extensions
  #def get_top_window(hwnd):
  #  return ?.GetTopWindow(hwnd)

  def get_window_children(hwnd):
    """
    @param  pid long
    @return  [long]
    """
    ret = []
    try:
=================
10085381
count:1
  #  """
  #  try:
  #    buf = ctypes.create_unicode_buffer(maxlen)
  #    if 0 == skwinapi.SetCurrentProcessExplicitAppUserModelID(ctypes.addressof(buf)):
  #      return buf.value
  #  except Exception, e: dwarn(e)

  ## Task bar ##

  # See: http://stackoverflow.com/questions/10085381/how-to-detect-if-autohidden-taskbar-is-visible-or-not
  def get_taskbar_window():
    """
    @return  HWND
    """
    return win32gui.FindWindow("Shell_TrayWnd", "")

  # See: http://stackoverflow.com/questions/10085381/how-to-detect-if-autohidden-taskbar-is-visible-or-not
  # Magic numbers: 4 (vertical) and 2 (horizontal)
  def is_taskbar_visible(hwnd=None):
    """
=================
10085381
count:1
  ## Task bar ##

  # See: http://stackoverflow.com/questions/10085381/how-to-detect-if-autohidden-taskbar-is-visible-or-not
  def get_taskbar_window():
    """
    @return  HWND
    """
    return win32gui.FindWindow("Shell_TrayWnd", "")

  # See: http://stackoverflow.com/questions/10085381/how-to-detect-if-autohidden-taskbar-is-visible-or-not
  # Magic numbers: 4 (vertical) and 2 (horizontal)
  def is_taskbar_visible(hwnd=None):
    """
    @param  hwnd  HWND or None
    @return  bool  if taskbar has a visible size on the desktop
    """
    left, top, right, bottom = get_window_rect(hwnd or get_taskbar_window())
    return (bottom > 4 and right > 2 and
            top > win32api.GetSystemMetrics(win32con.SM_CYSCREEN) - 4 and
            left > win32api.GetSystemMetrics(win32con.SM_CXSCREEN) - 2)
=================
19508268
count:1
    except: return false

  def set_file_normal(path): # str -> bool
    try: bool(win32api.SetFileAttributes(path, win32con.FILE_ATTRIBUTE_READONLY))
    except: return False

  ## Launch ##

  def open_cpl(path): # unicode -> bool
    # http://stackoverflow.com/questions/19508268/how-to-open-control-panel-in-python-using-win32-extension
    try:
      import skproc
      return bool(skproc.detachgui(['control.exe', path]))
    except Exception, e:
      dwarn(e)
      return False

  def install_msi_admin(path): # unicode -> bool
    try: return elevate('msiexec.exe', ('/i', path))
    except Exception, e:
=================
397125
count:1
  def elevate(path, args): # str, str
    try:
      quoted = ' '.join(("%s" % it for it in args))
      shell().ShellExecute(path, quoted, '', 'runas')
      return True
    except Exception, e:
      dwarn(e)
      return False

  # http://stackoverflow.com/questions/397125/reading-the-target-of-a-lnk-file-in-python
  def get_link_target_wsh(path):
    """
    @param  path  unicode  shortcut file location
    Wreturn  unicode or None

    Note: though returning unicode, the characters are illegal.
    """
    try: return wsh().CreateShortcut(path).Targetpath
    #except Exception, e: dwarn(e)
    except Exception, e: dwarn(e)
=================
196345
count:1

REGEX_SPECIAL_CHARS = r'()[]^$|\?!*+.'

RE_SPECIAL_CHARS = re.compile(r"[%s]" % re.escape(
  r'()[]^$|\?!*+.'
))
def contains_re_chars(text): # unicode -> bool
  return bool(RE_SPECIAL_CHARS.search(text))

# http://stackoverflow.com/questions/196345/how-to-check-if-a-string-in-python-is-in-ascii
def isascii(s):
  try: s.decode('ascii'); return True
  except UnicodeDecodeError: return False
  except Exception, e:
    dwarn(e)
    return False

def signed_ord(c):
  """Return signed char value of the character
  @param  c  char
=================
2556108
count:1

def signed_ord(c):
  """Return signed char value of the character
  @param  c  char
  @return  int[-128,127]
  """
  ret = ord(c)
  return ret if ret < 128 else ret - 256

# http://stackoverflow.com/questions/2556108/how-to-replace-the-last-occurence-of-an-expression-in-a-string
def rreplace(s, old, new, count):
  """
  @param  s  unicode
  @param  old  unicode
  @param  new  unicode
  @param  count  int
  """
  if count == 1:
    left, mid, right = s.rpartition(old)
    if mid:
=================
6609895
count:1
      stop = text.rfind(end, 0, start)

def _multireplacer_lookup(table, match):
  """
  @param  table  {unicode fr:unicode to}
  @param  match  re.match
  """
  return table[match.group(1)]

# http://stackoverflow.com/questions/6609895/efficiently-replace-bad-characters
def multireplacer(table, flags=0, escape=False, prefix=None, suffix=None):
  """
  @param  table  {unicode fr:unicode to}
  @param* flags  re compile flags  However, re.IGNORECASE will break the dictionary
  @param* prefix  str or None
  @param* suffix  str or None
  @return  fn(text)
  """
  it = table.iterkeys() if escape else (re.escape(k) for k in table.iterkeys())
  l = sorted(it, key=len, reverse=True) # sort based on length of the string
=================
1695183
count:1
_HP = HTMLParser()
# @param  t  unicode
# @return  unicode
unescapehtml = _HP.unescape

# @param  t  unicode
# @return  unicode
from cgi import escape as escapehtml

# See: http://stackoverflow.com/questions/1695183/how-to-percent-encode-url-parameters-in-python
import urllib
def urlencode(text, safe=''):
  """
  @param  text  str not unicode
  @param* safe  str  characters do not encode
  @param* encoding  str
  @param* errors  str
  @return  str not unicode
  """
  return urllib.quote(text, safe=safe) # to percentage encoding
=================
6701853
count:1
  """
  @param  h  unicode
  @param  fun  str->str
  @return  unicode
  """
  return replacefun1(_rx_img, fun, h)

# Validate

# http://stackoverflow.com/questions/6701853/parentheses-pairing-issue
def checkpair(text, pair=("({[",")}]"), escape='\\'):
  """
  @param  text  unicode
  @param* pair  (unicode open, unicode close)
  @param* escape  unicode  prefix chars for escape, such as "\\" for regex
  @return  bool
  """
  pushChars, popChars = pair
  needcheck = False
  for c in text:
=================
919056
count:1
<img src="http://www.getchu.com/brandnew/718587/c718587charab15.jpg">
<img src="http://www.getchu.com/brandnew/718587/c718587charab15.jpg">
<img src="http://www.getchu.com/brandnew/718587/c718587charab15.jpg">
and
'''
  print replaceimgurls(h, lambda it: "123")

# EOF

# See: http://stackoverflow.com/questions/919056/python-case-insensitive-replace
#def remove(source, pattern, flags=0):
#  """
#  @param  pattern  str or None
#  @param  source  str or None
#  @param  flags  re flags
#  @return  str or ""
#  """
#  return ("" if not source or not pattern else
#      re.compile(re.escape(pattern), flags).sub(source, "") if flags else
#      source.replace(pattern, ""))
=================
5863512
count:1

DEBUG = True

## Functions ##

def safeprint(*args, **kwargs):
  try: print(*args, **kwargs)
  except Exception: pass

# See: http://stackoverflow.com/questions/5863512/python-how-to-get-the-class-of-a-calling-method-through-inspection
def dprint(msg, *args):
  if not DEBUG:
    return
  """Parameters are in the same format as print in Py3K"""
  caller = inspect.stack()[1] # caller object
  frame = caller[skinspect.CALLER_FRAME_INDEX]
  path = caller[skinspect.CALLER_FILE_INDEX]
  func = caller[skinspect.CALLER_FUNC_INDEX]

  try:
=================
3425512
count:1

  class C:
    @debugmethod
    def method(self):
      safeprint("hello method", file=sys.stderr)
  C().method()

# EOF

# See: http://stackoverflow.com/questions/3425512/how-do-i-get-the-same-functionality-as-cs-function-in-python
# See: http://docs.python.org/library/logging.html
#import logging
#import sys
#
#logging.basicConfig(
#    format="%(filename)s:%(funcName)s:%(message)s",
#    level=logging.DEBUG,
=================
9937279
count:1
# skclass.py
# 11/3/2012 jichi

import collections, sys, weakref
from functools import wraps

## Properties ##

# See: http://stackoverflow.com/questions/9937279/can-modules-have-properties
class classproperty(property):
  """Method decorator"""
  def __init__(self, method):
    super(classproperty, self).__init__(classmethod(method))
  def __get__(self, cls, owner):
    return self.fget.__get__(None, owner)()

class staticproperty(property):
  """Method decorator"""
  def __init__(self, method):
=================
4272196
count:1
    key = QtGui.QKeySequence(key)
  return QtWidgets.QShortcut(key, parent, slot)

#def del_all(obj):
#  for c in obj.children():
#    del_all(c)
#  del obj

# See: http://doc.qt.digia.com/qt/qlayout.html#takeAt
# See: http://stackoverflow.com/questions/4272196/qt-remove-all-widgets-from-layout
def clear_layout(layout, delwidget=False):
  """
  @param  layout  QLayout
  @param  delwidget  bool
  """
  if layout:
    while not layout.isEmpty():
      item = layout.takeAt(0) # QLayoutItem
      if delwidget:
        widget = item.widget()
=================
13592219
count:1
  else:
    return QProcess.startDetached(args[0], args[1:])

def detachgui(args):
  """Always hide command prompt on Windows
  @param  args  [unicode]
  @return  pid  ulong
  """
  dprint(args)
  # http://stackoverflow.com/questions/13592219/launch-a-totally-independent-process-from-python
  #DETACHED_PROCESS = win32con.DETACHED_PROCESS
  import subprocess
  try:
    if skos.WIN:
      flags = win32con.DETACHED_PROCESS|subprocess.CREATE_NEW_PROCESS_GROUP
    else:
      flags = 0
    p = subprocess.Popen(args,
        creationflags=flags,
        #shell=True,
=================
13592219
count:1
    dwarn(e)
    return 0

def attachgui(args):
  """Always hide command prompt on Windows
  @param  args  [unicode]
  @return  bool
  """
  dprint(args)
  # http://stackoverflow.com/questions/13592219/launch-a-totally-independent-process-from-python
  import subprocess
  try:
    if skos.WIN:
      flags = win32con.DETACHED_PROCESS|subprocess.CREATE_NEW_PROCESS_GROUP
    else:
      flags = 0
    errcode = subprocess.call(args,
        creationflags=flags,
        #shell=True,
        close_fds=True)
=================
5863512
count:1
# skinspect.py
# 3/26/2013 jichi
# See: http://stackoverflow.com/questions/5863512/python-how-to-get-the-class-of-a-calling-method-through-inspection

import inspect

# Indices of inspect.stack()[1]
CALLER_FRAME_INDEX = 0  # caller frame context
CALLER_FILE_INDEX = 1   # caller file path
CALLER_FUNC_INDEX  = 3  # caller function name

def get_func_name():
  """
=================
13971787
count:1
# 11/9/2011 jichi

__all__ = 'SkNetworkCookieJar',

from skdebug import dprint
from PySide.QtNetwork import QNetworkCookie, QNetworkCookieJar

## Cookies ##

# http://stackoverflow.com/questions/13971787/how-do-i-save-cookies-with-qt
# http://qt.gitorious.org/qt/qt/trees/4.8/demos/browser

class SkNetworkCookieJar(QNetworkCookieJar):

  def __init__(self, parent=None):
    super(SkNetworkCookieJar, self).__init__(parent)
    # Control characters (\x00 to \x1F plus \x7F) aren't allowed,
    # http://stackoverflow.com/questions/1969232/allowed-characters-in-cookies
    self.marshalSeparator = '\0' # illegal in cookie

=================
1969232
count:1

# http://stackoverflow.com/questions/13971787/how-do-i-save-cookies-with-qt
# http://qt.gitorious.org/qt/qt/trees/4.8/demos/browser

class SkNetworkCookieJar(QNetworkCookieJar):

  def __init__(self, parent=None):
    super(SkNetworkCookieJar, self).__init__(parent)
    # Control characters (\x00 to \x1F plus \x7F) aren't allowed,
    # http://stackoverflow.com/questions/1969232/allowed-characters-in-cookies
    self.marshalSeparator = '\0' # illegal in cookie

  def marshal(self): # -> str
    l = self.allCookies()
    dprint("cookie count = %i" % len(l))
    return self.marshalSeparator.join((
      cookie.toRawForm().data() for cookie in l
    ))

  def unmarshal(self, data):  # str ->
=================
7287996
count:1
  '\t': ' ',
}) #, escape=True
def escape(name):
  """
  @param  name  unicode
  @return  unicode
  """
  return _repl_escape(name).strip() if name else ''

# http://stackoverflow.com/questions/7287996/python-get-relative-path-from-comparing-two-absolute-paths
def relpaths(paths): # [unicode] -> [unicode]
  path = map(os.path.abspath, paths)
  prefix = os.path.commonprefix(paths)
  return [os.path.relpath(path, prefix) for path in paths]

def realpath(path, prefix): # unicode, unicode -> unicode
  return os.path.relpath(os.path.abspath(path), os.path.abspath(prefix))

# Escape brackets in glob
# http://edgylogic.com/blog/escaping-square-brackets-pythons-glob/
=================
973473
count:1

def fileempty(path):
  """
  @return  bool
  """
  return filesize(path) == 0

# Directory navigation

# http://stackoverflow.com/questions/973473/getting-a-list-of-all-subdirectories-in-the-current-directory
def getfirstchildfile(path): # unicode -> unicode or None
  try:
    parent, dirs, files = os.walk(path).next()
    return os.path.join(parent, files[0])
  except Exception, e:
    dwarn(e)

# http://stackoverflow.com/questions/973473/getting-a-list-of-all-subdirectories-in-the-current-directory
def getfirstchilddir(path): # unicode -> unicode or None
  try:
=================
973473
count:1

# http://stackoverflow.com/questions/973473/getting-a-list-of-all-subdirectories-in-the-current-directory
def getfirstchildfile(path): # unicode -> unicode or None
  try:
    parent, dirs, files = os.walk(path).next()
    return os.path.join(parent, files[0])
  except Exception, e:
    dwarn(e)

# http://stackoverflow.com/questions/973473/getting-a-list-of-all-subdirectories-in-the-current-directory
def getfirstchilddir(path): # unicode -> unicode or None
  try:
    parent, dirs, files = os.walk(path).next()
    return os.path.join(parent, dirs[0])
  except Exception, e:
    dwarn(e)

# Compression

def extractarchive(path, location, type, *args, **kwargs):
=================
740820
count:1
  elif type == '7z':
    x = extract7z
  else:
    dwarn("unknown archive type = %s" % type)
    return False
  return x(path, location, *args, **kwargs)

# http://docs.python.org/2/library/tarfile.html
# mode: r, r:, r:gz, r:bz2
# http://stackoverflow.com/questions/740820/python-write-string-directly-to-tarfile
def extracttar(path, location, mode='r'): # unicode, unicode -> bool
  """
  @param  path  unicode
  @param  location  unicode
  @param* mode  str
  @return  bool
  """
  import tarfile
  try:
    #with tarfile.TarFile(path) as z: # without extraction
=================
9431918
count:1
  except Exception, e:
    dwarn(e)
  return False

def extracttargz(path, location): return extracttar(path, location, 'r:gz')
def extracttarbz2(path, location): return extracttar(path, location, 'r:bz2')
extracttgz = extracttargz
extracttbz2 = extracttarbz2

# http://stackoverflow.com/questions/9431918/extracting-zip-file-contents-to-specific-directory-in-python-2-7
def extractzip(path, location): # unicode, unicode -> bool
  """
  @param  path  unicode
  @param  location  unicode
  @return  bool
  """
  import zipfile
  try:
    with zipfile.ZipFile(path, 'r') as z:
      z.extractall(location)
=================
10701528
count:1
    with zipfile.ZipFile(path, 'r') as z:
      z.extractall(location)
      return True
  except Exception, e:
    dwarn(e)
  return False

# Python 3 is different
# github.com/fancycode/pylzma/blob/master/doc/usage.txt
# http://stackoverflow.com/questions/10701528/example-of-how-to-use-pylzma
def extractxz(infile, outfile): # unicode, unicode -> bool
  """
  @param  infile  unicode
  @param  outfile  unicode
  @return  bool
  """
  import pylzma
  try:
    with open(infile, 'rb') as i:
      with open(outfile, 'wb') as o:
=================
10701528
count:1
          data = i.read(1)
          if not data: break
          o.write(z.decompress(data))
        o.write(z.flush())
  except Exception, e:
    dwarn(e)
  return False

# Only needed by Python2. tar.xz is supported by Python3 by default.
# http://stackoverflow.com/questions/10701528/example-of-how-to-use-pylzma
# http://stackoverflow.com/questions/17217073/how-to-decompress-a-xz-file-which-has-multiple-folders-files-inside-in-a-singl
def extracttarxz(path, location): # unicode, unicode -> bool
  """
  @param  path  unicode
  @param  location  unicode
  @return  bool
  """
  try:
    import pylzma
    with open(path, 'rb') as fp:
=================
17217073
count:1
          if not data: break
          o.write(z.decompress(data))
        o.write(z.flush())
  except Exception, e:
    dwarn(e)
  return False

# Only needed by Python2. tar.xz is supported by Python3 by default.
# http://stackoverflow.com/questions/10701528/example-of-how-to-use-pylzma
# http://stackoverflow.com/questions/17217073/how-to-decompress-a-xz-file-which-has-multiple-folders-files-inside-in-a-singl
def extracttarxz(path, location): # unicode, unicode -> bool
  """
  @param  path  unicode
  @param  location  unicode
  @return  bool
  """
  try:
    import pylzma
    with open(path, 'rb') as fp:
      z = pylzma.decompressobj()
=================
10701528
count:1
  #try:
  #  with contextlib.closing(lzma.LZMAFile(path)) as xz:
  #    with tarfile.open(fileobj=xz) as f:
  #      f.extractall(location)
  #      return True
  #except Exception, e:
  #  dwarn(e)
  #return False

# http://stackoverflow.com/questions/10701528/example-of-how-to-use-pylzma
# http://www.dreamincode.net/forums/topic/296783-how-to-cope-with-the-occasional-administrator-privledge-requirement/
# Only needed by Python2. 7zip is supported by Python3 by default.
# Note: This require pylzma to be installed first
# FIXME: py7zlib does not support latest 7zip

def extract7zarchive(z, location): # py7zlib.Archive7z, unicode ->, throws
  """
  @param  z  file object
  @param  location  unicode
  @return  bool
=================
1405913
count:1

WIN     = os.name == 'nt'
WIN32   = sys.platform == 'win32'
WIN64   = sys.platform == 'win64'

POSIX   = os.name == 'posix'
MAC     = sys.platform == 'darwin'
LINUX   = POSIX and not MAC

# See: http://stackoverflow.com/questions/1405913/how-do-i-determine-if-my-python-shell-is-executing-in-32bit-or-64bit-mode
X86_64  = sys.maxsize > 2**32
X86     = not X86_64

name = 'mac' if MAC else 'win' if WIN else 'posix'

# http://stackoverflow.com/questions/196930/how-to-check-if-os-is-vista-in-python
# >>> import platform
# >>> platform.win32_ver()
# ('XP', '5.1.2600', 'SP2', 'Multiprocessor Free')
# >>> platform.system()
=================
196930
count:1
MAC     = sys.platform == 'darwin'
LINUX   = POSIX and not MAC

# See: http://stackoverflow.com/questions/1405913/how-do-i-determine-if-my-python-shell-is-executing-in-32bit-or-64bit-mode
X86_64  = sys.maxsize > 2**32
X86     = not X86_64

name = 'mac' if MAC else 'win' if WIN else 'posix'

# http://stackoverflow.com/questions/196930/how-to-check-if-os-is-vista-in-python
# >>> import platform
# >>> platform.win32_ver()
# ('XP', '5.1.2600', 'SP2', 'Multiprocessor Free')
# >>> platform.system()
# 'Windows'
# >>> platform.version()
# '5.1.2600'
# >>> platform.release()
# 'XP'

=================
9920452
count:1
# '5.1.2600'
# >>> platform.release()
# 'XP'

WINXP = WIN and platform.release() == 'XP'
WIN7 = WIN and platform.release() == '7'
WIN8 = WIN and platform.release() == '8'

def kill_my_process():
  # http://stackoverflow.com/questions/1533200/qt-kill-current-process/9920452#9920452
  dwarn("pass")
  if WIN:
    import skwin
    skwin.kill_my_process()
  else:
    os.system("kill -9 %i" % os.getpid())

def restart_my_process(params=None): # extra parameters
  """
  @param* params  [unicode]
=================
3826918
count:1
# unichars.py
# 6/16/2014 jichi
import re
import string

# Some of the kana characters are skipped
# See: http://stackoverflow.com/questions/3826918/how-to-classify-japanese-characters-as-either-kanji-or-kana
# Here's the range used by Google Guava
# - Hiragana: \u3040-\u309f
# - Katagana: \u30a0-\u30ff

# Orders of hiragana and katagana
ORD_HIRA_FIRST = 12353
ORD_HIRA_LAST = 12438
DIST_HIRA_KATA = 96
ORD_KATA_FIRST = ORD_HIRA_FIRST + DIST_HIRA_KATA
ORD_KATA_LAST = ORD_HIRA_LAST + DIST_HIRA_KATA
=================
3826918
count:1

# Orders of wide and thin characters
ORD_THIN_FIRST = 33
ORD_THIN_LAST = 126
DIST_THIN_WIDE = 65248
ORD_WIDE_FIRST = ORD_THIN_FIRST + DIST_THIN_WIDE
ORD_WIDE_LAST = ORD_THIN_LAST + DIST_THIN_WIDE

# The same range as Google Guava
# See: http://stackoverflow.com/questions/3826918/how-to-classify-japanese-characters-as-either-kanji-or-kana
ORD_KANJI_FIRST = 0x4e00 # = u'一'
ORD_KANJI_LAST = 0x9faf # = u'龯'

ORD_DIGIT_FIRST = ord('0')
ORD_DIGIT_LAST = ord('9')

ORD_IALPHA_FIRST = ord('a')
ORD_IALPHA_LAST = ord('z')
ORD_UALPHA_FIRST = ord('A')
ORD_UALPHA_LAST = ord('Z')
=================
10981258
count:1

ORD_DIGIT_FIRST = ord('0')
ORD_DIGIT_LAST = ord('9')

ORD_IALPHA_FIRST = ord('a')
ORD_IALPHA_LAST = ord('z')
ORD_UALPHA_FIRST = ord('A')
ORD_UALPHA_LAST = ord('Z')

# http://stackoverflow.com/questions/10981258/how-can-i-specify-cyrillic-character-ranges-in-a-python-3-2-regex
ORD_CYRIL_FIRST = 0x400
ORD_CYRIL_LAST = 0x500

#ORD_NUM_FIRST = ord('0') # 48
#ORD_NUM_LAST = ord('9') # 57

s_ascii_punct = ',.\'"?!~'

def ordany(text, start, stop):
  """
=================
10115126
count:1
from collections import OrderedDict
#from sakurakit import skstr
from sakurakit.skdebug import dwarn, derror
from sakurakit.sknetdef import GZIP_HEADERS
import infoseekdef

session = requests # global session

# See: http://docs.python-requests.org/en/latest/user/advanced/#keep-alive
# See: http://stackoverflow.com/questions/10115126/python-requests-close-http-connection
#session = requests.Session(config={'keep_alive': False})

# See: http://transer.com/sdk/rest_api_function.html
#   key=LICENCE 	オプション 	サービスのユーザーライセンスを提供します。HTTPリクエストヘッダもしくはHTTP認証のいずれかを使用してユーザーライセンスが提供される場合、URLを指定する必要はありません。
#   e=ENGINE 	必須 	使用する翻訳エンジンを指定します。翻訳エンジンは/clsoap/userへリクエストして返されたユーザー情報のエンジンIDの内、一つでなければなりません。
#   p=PROFILE 	オプション 	翻訳で使用するエンジンプロパティのプロファイルを指定します。指定しない場合、エンジンプロパティはデフォルトプロファイルを使用します。
#   t=TEXT 	必須 	翻訳されたテキストもしくはHTMLを指定します。複数エントリの指定が可能で、それぞれのファイルは別のブロックとして翻訳されます。指定の順番通りに翻訳結果が別々に返されます。
#   format=TYPE 	オプション 	"t"パラメータのデータをフォーマットを指定します。"text"はテキストデータ、"html"はhtmlデータとして使用してください。これらのパラメータが指定されない場合は、テキストデータがデフォルトとして使用されます。
#   sent=true 	オプション 	センテンスセグメント情報が翻訳されたテキストとして返すようリクエストします。
#   equiv=true 	オプション 	equiv情報が翻訳されたテキストとして返すようリクエストします。
=================
7387276
count:1
    import initdefs
    path = initdefs.LOCK_RELPATH
    if not os.path.exists(path):
      os.makedirs(path)
    path = os.path.join(path, name)
    from lockfile import lockfile
    APP_MUTEX = lockfile.LockFile(path)
  return APP_MUTEX.tryLock()

# http://stackoverflow.com/questions/7387276/set-window-name-in-python
def settitle(title): # str ->
  import os
  if os.name == 'nt':
    if isinstance(title, unicode):
      title = title.encode('utf8', errors='ignore')
    import ctypes
    try: ctypes.windll.kernel32.SetConsoleTitleA(title)
    except Exception, e:
      from sakurakit.skdebug import dwarn
      dwarn(e)
=================
196930
count:2

  if os.name == 'nt':
    reset_win_path()

  # Python chdir is buggy for unicode
  #os.chdir(maindir)

  import config

  # http://stackoverflow.com/questions/196930/how-to-check-if-os-is-vista-in-python
  #import platform
  #if platform.release() == 'XP':
  #  map(sys.path.append, config.ENV_PYTHONPATH_XP)

  #for path in config.ENV_PYTHONPATH:
  #  sys.path.append(path)
  map(sys.path.append, config.ENV_PYTHONPATH)
  if hasattr(config, 'APP_PYTHONPATH'):
    map(sys.path.append, config.APP_PYTHONPATH)

=================
8894244
count:1

def reg(cls, name, ns=QML_PLUGIN):
  """
  @param  cls  class
  @param  name  str
  @param* ns  str
  """
  qmlRegisterType(cls, ns, 1, 0, name)

# See: http://stackoverflow.com/questions/8894244/qml-and-blurring-image
from Qt5 import QtWidgets
#reg(QtWidgets.QGraphicsBlurEffect, 'Blur', QML_EFFECT)
#reg(QtWidgets.QGraphicsColorizeEffect, 'Colorize', QML_EFFECT)
#reg(QtWidgets.QGraphicsOpacityEffect, 'Opacity', QML_EFFECT)
reg(QtWidgets.QGraphicsDropShadowEffect, 'DropShadow', QML_EFFECT)

from sakurakit import skqml
reg(skqml.SkDesktopProxy, 'DesktopProxy')
reg(skqml.SkClipboardProxy, 'ClipboardProxy')

=================
1006289
count:1
    @param  async  bool
    @param  keepsNewLine  bool
    @param* nthreads  maximum number of threads to use
    @param* master  bool  whether the master thread should paticipate  should disable this for tablet
    @param* timeout  int
    @param* master_threshold  int  minimum number of texts that need to be parallelized
    @return  [unicode] not None
    """
    # Get number of processors
    # http://stackoverflow.com/questions/1006289/how-to-find-out-the-number-of-cpus-using-python
    # See: https://pythonhosted.org/joblib/parallel.html
    #if not nthreads:
    #  nthreads = psutil.NUM_CPUS or 1
    ret = []
    texts = []
    for text in self._itertexts(text, keepsNewLine=keepsNewLine):
      if len(text) == 1 and text in _PARAGRAPH_SET or is_escaped_text(text) or text == defs.TERM_ESCAPE_EOS or allspace(text) or allnonprintable(text):
        ret.append(text)
      else:
        t = self._cache.get(text)
=================
2068344
count:1
  def iterVideoIdsWithImage(self, cache=True):
    """
    @param  cache  bool
    @yield  (str vid, str url)
    """
    if self.videos:
      host = proxy.manager().ytimg_i
      for it in self.videos:
        vid = it['vid']
        img = host + '/vi/' + vid + '/maxresdefault.jpg' # http://stackoverflow.com/questions/2068344/how-do-i-get-a-youtube-video-thumbnail-from-the-youtube-api
        yield vid, cacheman.cache_image_url(img) if cache else img

class ScapeReference(Reference):
  def __init__(self, parent=None,
      type='scape',
      banner_url=None,
      okazu=None,
      genre=None,
      trial_url=None, trial_h=None,
      median=None, count=None,
=================
196930
count:1
  @return  bool or None
  """
  from sakurakit import skos
  if not skos.WIN or WINE:
    return
  from sakurakit import skwinsec
  return skwinsec.is_elevated()
ADMIN = isadmin() # bool

# http://stackoverflow.com/questions/196930/how-to-check-if-os-is-vista-in-python
def iswinxp():
  import platform
  return platform.release() == 'XP'
WINXP = iswinxp() # bool

INTERNET_CONNECTION = settings.global_().internetConnection()
MACHINE_TRANSLATION = settings.global_().allowsMachineTranslation()
USER_COMMENT = settings.global_().allowsUserComment()
#TEXT_TO_SPEECH = settings.global_().allowsTextToSpeech()
MAINLAND_CHINA = False
=================
11875770
count:1
# jsonutil.py
# 7/4/2014 jichi

from datetime import datetime
import i18n

# http://stackoverflow.com/questions/11875770/how-to-overcome-datetime-datetime-not-json-serializable-in-python
def default_datetime(obj):
  """
  @param  obj  any
  @return  any
  """
  if isinstance(obj, datetime):
    return i18n.unparsedatetime(obj)

if __name__ == '__main__':
  import json
=================
12468613
count:1

__space_re = re.compile(r'\s{2,}')
def remove_repeat_spaces(text):
  """
  @param  text  unicode
  @return  unicode
  """
  return __space_re.sub(' ', text) if text else ''

__repeat_re = re.compile(r'(.+)\1+', re.DOTALL) # http://stackoverflow.com/questions/12468613/regex-to-remove-repeated-character-pattern-in-a-string
def remove_repeat_text(text):
  """
  @param  text  unicode
  @return  unicode
  """
  return __repeat_re.sub(r'\1', text) if text else ''

# http://e-words.jp/p/r-ascii.html
# 0-31, except:
# - x0a
=================
19195935
count:1
    self.setFont(font)

  # FIXME: wParam does not exist in PySide MSG
  # Bug: https://bugreports.qt-project.org/browse/PYSIDE-84
  #def winEventFilter(self, msg):
  #  """
  #  @param  msg  PySide.QtCore.MSG
  #  @return  bool
  #  """
  #  # See: http://stackoverflow.com/questions/19195935/how-to-detect-windows-shutdown-or-logoff-in-qt
  #  if msg.wParam in (WM_QUIT, WM_ENDSESSION, WM_QUERYENDSESSION):
  #    dprint("quit")
  #  return super(Application, self).winEventFilter(msg)

  def notify(self, receiver, event):
    """@reimp @protected
    virtual bool notify(QObject *receiver, QEvent *e)

    See: http://www.02.246.ne.jp/~torutk/cxx/qt/QtMemo.html
    """
=================
12015170
count:1

DISPLAY_RESOLUTION = skwin.get_display_resolution() if skos.WIN else (0,0)

## Time ##

NOW = skdatetime.NOW
#TIMESTAMP = skdatetime.CURRENT_UNIXTIME

def timestamp_jst_diff():
  # http://stackoverflow.com/questions/12015170/how-do-i-automatically-get-the-timezone-offset-for-my-local-time-zone
  # pytz.timezone('Japan').utcoffset(datetime.datetime.now()).seconds
  # = 32400 = 9 * 3600
  from dateutil import tz
  delta = tz.tzlocal().utcoffset(NOW)
  return 9*3600 - delta.seconds * (delta.days * 2 + 1) # +-1

TIMESTAMP_JST_DIFF = timestamp_jst_diff()
def timestamp2jst(seconds):
  return seconds + TIMESTAMP_JST_DIFF

=================
5548121
count:1
      ax.xaxis.set_major_locator(mpl.dates.MonthLocator())
    else:
      ax.xaxis.set_major_formatter(mpl.dates.DateFormatter('%a %b %d')) # "Feb 2, Mon"
      ax.xaxis.set_major_locator(mpl.dates.WeekdayLocator())

    ax.grid(True)
    mindate = info.dates[0]
    maxdate = info.dates[-1]
    ax.set_xlim(mindate, maxdate)
    #ax.set_ylim(ymin=0) # http://stackoverflow.com/questions/5548121/minimum-value-of-y-axis-is-not-being-applied-in-matplotlib-vlines-plot

  @classmethod
  def _plotUserStackFigure(cls, ax, info):
    """
    @param  axes  matplotlib.axes.Axes
    @param  info  DataInfo
    """
    cls._plotStackAxes(ax, info)

    stats = defaultdict(lambda: defaultdict(int))
=================
5548121
count:1
      c = 1 # at least 1
      l = []
      for t in info.times:
        c += stats[n].get(t) or 0
        l.append(c)
      plots.append(l)

    # Not sure why it is optional to user count
    # Force changing ymin to 0
    # http://stackoverflow.com/questions/5548121/minimum-value-of-y-axis-is-not-being-applied-in-matplotlib-vlines-plot
    #ymax = sum(it[-1] for it in plots)
    #ax.set_ylim(0, ymax)

    ax.stackplot(info.dates, plots)

  @classmethod
  def _plotLanguageStackFigure(cls, ax, info):
    """
    @param  axes  matplotlib.axes.Axes
    @param  info  DataInfo
=================
5548121
count:1
    for n in info.languages:
      c = 1 # at least 1
      l = []
      for t in info.times:
        c += stats[n].get(t) or 0
        l.append(c)
      plots.append(l)

    # Force changing ymin to 0
    # http://stackoverflow.com/questions/5548121/minimum-value-of-y-axis-is-not-being-applied-in-matplotlib-vlines-plot
    ymax = sum(it[-1] for it in plots) + 600 # larger, 600 = 16000 - 15400
    ax.set_ylim(0, ymax)

    ax.stackplot(info.dates, plots)

class ChartDialog(QtWidgets.QMainWindow):

  def __init__(self, data, parent=None):
    """
    @param  data  [dataman.Comment|dataman.Term]
=================
3282328
count:1
      #if not ok:
      #  # http://www.shloemi.com/2012/09/solved-setforegroundwindow-win32-api-not-always-works/
      #  import win32process
      #  that = skwin.get_window_thread_id(skwin.get_foreground_window())
      #  this = skwin.get_window_thread_id(hwnd)
      #  win32process.AttachThreadInput(that, this, True)
      #  ok = skwin.set_top_window(hwnd)
      #  win32process.AttachThreadInput(that, this, False)

      # http://stackoverflow.com/questions/3282328/updating-the-z-order-of-many-windows-using-win32-api
      #try:
      #  import gameman
      #  hwnd = gameman.manager().currentGame().wid
      #  if hwnd:
      #    import win32gui, win32con
      #    winId = skwin.hwnd_from_wid(self.winId())
      #    win32gui.SetWindowPos(hwnd, win32con.HWND_TOP, 0, 0, 0, 0, win32con.SWP_NOMOVE | win32con.SWP_NOSIZE);
      #    win32gui.SetWindowPos(winId, win32con.HWND_TOP, 0, 0, 0, 0, win32con.SWP_NOMOVE | win32con.SWP_NOSIZE);
      #except Exception, e:
      #  print e
=================
380870
count:1
    dprint("exit: help")
    #sys.exit(os.EX_USAGE)
    return 0

  # Singleton
  # - Through mutex
  #   See: http://code.activestate.com/recipes/474070-creating-a-single-instance-application/
  #   See: http://code.google.com/p/python-windows-tiler/source/browse/singleinstance.py
  # - Through file
  #   See: http://stackoverflow.com/questions/380870/python-single-instance-of-program
  dprint("check single instance")

  from lockfile import lockfile

  app_mutex = lockfile.SingleProcessMutex()
  single_app = app_mutex.tryLock()
  if not single_app:
    dprint("multiple instances are running")

  dprint("python = %s" % sys.executable)
=================
1551605
count:1
  if not single_app:
    dprint("multiple instances are running")

  dprint("python = %s" % sys.executable)
  #dprint("rootdir = %s" % rootdir)
  #dprint("mecabrc = %s" % mecabrc_path)

  from sakurakit import skos
  # Must be set before any GUI is showing up
  # http://stackoverflow.com/questions/1551605/how-to-set-applications-taskbar-icon-in-windows-7
  if skos.WIN:
    dprint("set app id")
    from sakurakit import skwin
    skwin.set_app_id("org.sakurakit.reader")

  # Detect user language
  import settings

  ss = settings.global_()

=================
10115126
count:1
  dprint("config python site-packages")

  # Disable requests SSL certificate warning
  # https://github.com/kennethreitz/requests/issues/2214
  import requests
  requests.packages.urllib3.disable_warnings()

  # Disable HTTP request session
  # See: http://docs.python-requests.org/en/latest/user/advanced/#keep-alive
  # See: http://stackoverflow.com/questions/10115126/python-requests-close-http-connection
  #import requests
  #s = requests.session()
  #s.config['keep_alive'] = False

  import numpy
  numpy.seterr(all='ignore')  # ignore overflow warning

  dprint("update settings")

  ss_version = ss.version()
=================
8362506
count:1
  def getBlockedUrl(url):
    """
    @param  url  QUrl
    @return  unicode or QUrl or None
    """
    if url.path() == '/js/localize_welcome.js': # for DMM
      dprint("block dmm localize welcome")
      return rc.DMM_LOCALIZED_WELCOME_URL

  # http://stackoverflow.com/questions/8362506/qwebview-qt-webkit-wont-open-some-ssl-pages-redirects-not-allowed
  @staticmethod
  def onSslErrors(reply, errors): # QNetworkReply, [QSslError] ->
    reply.ignoreSslErrors()
    #dprint("ignore ssl error")
    #print errors

